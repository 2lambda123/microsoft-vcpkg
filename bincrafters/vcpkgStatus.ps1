[CmdletBinding()]
param
(
    [Parameter(Mandatory=$true)][string[]]$Builds,
    [Parameter()][switch]$Top40,
    [Parameter()][switch]$Bincrafters
)

$top40list = @(
    "zlib",
    "openssl",
    "boost",
    "bzip2",
    "libpng",
    "libjpeg-turbo",
    "python3",
    "curl",
    "liblzma",
    "protobuf",
    "sfml",
    "freetype",
    "libssh2",
    "sdl2",
    "websocketpp",
    "sqlite3",
    "tiff",
    "cpprestsdk",
    "libiconv",
    "pcre",
    "expat",
    "opencv",
    "glib",
    "gettext",
    "libffi",
    "gflags",
    "libogg",
    "double-conversion",
    "libpq",
    "eigen3",
    "harfbuzz",
    "glog",
    "lz4",
    "glew",
    "gtest",
    "nghttp2",
    "ragel",
    "libxml2",
    "atlmfc",
    "qt5"
)

$bincrafterslist = @(
    "abseil",
    "asio",
    "azure-c-shared-utility",
    "azure-iot-sdk-c",
    "azure-uamqp-c",
    "azure-uhttp-c",
    "azure-umqtt-c",
    "boost",
    "boost-accumulators",
    "boost-algorithm",
    "boost-align",
    "boost-any",
    "boost-array",
    "boost-asio",
    "boost-assert",
    "boost-assign",
    "boost-atomic",
    "boost-beast",
    "boost-bimap",
    "boost-bind",
    "boost-build",
    "boost-callable-traits",
    "boost-chrono",
    "boost-circular-buffer",
    "boost-compatibility",
    "boost-compute",
    "boost-concept-check",
    "boost-config",
    "boost-container",
    "boost-context",
    "boost-conversion",
    "boost-convert",
    "boost-core",
    "boost-coroutine",
    "boost-coroutine2",
    "boost-crc",
    "boost-date-time",
    "boost-detail",
    "boost-disjoint-sets",
    "boost-dll",
    "boost-dynamic-bitset",
    "boost-endian",
    "boost-exception",
    "boost-fiber",
    "boost-filesystem",
    "boost-flyweight",
    "boost-foreach",
    "boost-format",
    "boost-function",
    "boost-function-types",
    "boost-functional",
    "boost-fusion",
    "boost-geometry",
    "boost-gil",
    "boost-graph",
    "boost-graph-parallel",
    "boost-hana",
    "boost-heap",
    "boost-icl",
    "boost-integer",
    "boost-interprocess",
    "boost-interval",
    "boost-intrusive",
    "boost-io",
    "boost-iostreams",
    "boost-iterator",
    "boost-lambda",
    "boost-lexical-cast",
    "boost-local-function",
    "boost-locale",
    "boost-lockfree",
    "boost-log",
    "boost-logic",
    "boost-math",
    "boost-metaparse",
    "boost-move",
    "boost-mp11",
    "boost-mpi",
    "boost-mpl",
    "boost-msm",
    "boost-multi-array",
    "boost-multi-index",
    "boost-multiprecision",
    "boost-numeric-conversion",
    "boost-odeint",
    "boost-optional",
    "boost-parameter",
    "boost-phoenix",
    "boost-poly-collection",
    "boost-polygon",
    "boost-pool",
    "boost-predef",
    "boost-preprocessor",
    "boost-process",
    "boost-program-options",
    "boost-property-map",
    "boost-property-tree",
    "boost-proto",
    "boost-ptr-container",
    "boost-python",
    "boost-qvm",
    "boost-random",
    "boost-range",
    "boost-ratio",
    "boost-rational",
    "boost-regex",
    "boost-scope-exit",
    "boost-serialization",
    "boost-signals",
    "boost-signals2",
    "boost-smart-ptr",
    "boost-sort",
    "boost-spirit",
    "boost-stacktrace",
    "boost-statechart",
    "boost-static-assert",
    "boost-system",
    "boost-test",
    "boost-thread",
    "boost-throw-exception",
    "boost-timer",
    "boost-tokenizer",
    "boost-tti",
    "boost-tuple",
    "boost-type-erasure",
    "boost-type-index",
    "boost-type-traits",
    "boost-typeof",
    "boost-ublas",
    "boost-units",
    "boost-unordered",
    "boost-utility",
    "boost-uuid",
    "boost-variant",
    "boost-vmd",
    "boost-wave",
    "boost-winapi",
    "boost-xpressive",
    "botan",
    "caf",
    "catch",
    "catch2",
    "celero",
    "ceres",
    "cimg",
    "clara",
    "config",
    "cpprestsdk",
    "cryptopp",
    "curl",
    "date",
    "doctest",
    "double-conversion",
    "event",
    "expat",
    "fdk-aac",
    "ffmpeg",
    "flac",
    "flatbuffers",
    "fmt",
    "freetype",
    "gflags",
    "giflib",
    "glfw3",
    "glog",
    "gtest",
    "harfbuzz",
    "iconv",
    "icu",
    "jansson",
    "jpeg-turbo",
    "lcms",
    "log4cplus",
    "lz4",
    "lzma",
    "mbedtls",
    "ms-gsl",
    "msgpack",
    "msmpi",
    "mysql",
    "nanomsg",
    "nuklear",
    "ogg",
    "openal-soft",
    "openjpeg",
    "openvpn3",
    "opus",
    "parson",
    "pixman",
    "png",
    "podofo",
    "portaudio",
    "pthreads",
    "qrencode",
    "rxcpp",
    "sdl2",
    "sodium",
    "spdlog",
    "sqlite3",
    "ssh2",
    "tap-windows6",
    "tiff",
    "tiny-dnn",
    "tinyexr",
    "usb",
    "utf8proc",
    "uuid",
    "uv",
    "vorbis",
    "vpx",
    "webp",
    "websocketpp",
    "websockets",
    "winpcap",
    "x264",
    "x265",
    "xml2",
    "yaml-cpp",
    "zeromq",
    "zip",
    "zstd"
)

$libs = @()
if ($Top40) { $libs += $top40list }
if ($Bincrafters) { $libs += $bincrafterslist }
if (!$top40 -and !$Bincrafters)
{
    throw "Must select at least one list to use"
}

$results = & ..\mergeResults.ps1 $Builds | ? { $_.name -in $libs } | select name,x64-windows,x64-uwp,arm64-windows,x64-osx,x64-linux

$results | format-table

$total = $results.count

@("x64-windows", "x64-uwp", "arm64-windows", "x64-osx", "x64-linux") | % {
    $triplet = $_
    $count = @($results | ? { $_."$triplet" -eq "Pass" }).count
    "${triplet}: $count/$total"
}
