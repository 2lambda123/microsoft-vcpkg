# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: MIT
#
variables:
  windows-pool: 'PrWin-2020-08-12'
  linux-pool: 'PrLin-2020-08-12'
  osx-pool: 'PrOsx-2020-09-28'

stages:
- stage: FormatChecks
  displayName: 'Formatting Checks'
  pool: $(windows-pool)
  jobs:
  - job: ClangFormat
    displayName: 'Check C++'
    workspace:
      clean: resources
    steps:
    - task: Powershell@2
      inputs:
        filePath: 'scripts/azure-pipelines/windows/Check-CxxFormatting.ps1'
        arguments: '-Root . -DiffOutput $(Build.ArtifactStagingDirectory)\clang-format.diff'
        pwsh: true
  - job: Manifests
    displayName: 'Check Port Manifests'
    pool: $(windows-pool)
    variables:
    - name: VCPKG_DOWNLOADS
      value: D:\downloads
    jobs:
    - job:
      workspace:
        clean: resources
      steps:
      - task: Powershell@2
        displayName: 'Check port manifest Formatting'
        inputs:
          filePath: 'scripts/azure-pipelines/windows/Check-ManifestFormatting.ps1'
          arguments: '-Root .'
          pwsh: true
  - job: DocumentationGeneration
    displayName: 'Check Documentation Generation'
    pool: $(windows-pool)
    jobs:
    - job:
      workspace:
        clean: resources
      steps:
      - task: Powershell@2
        displayName: 'Check documentation generation'
        inputs:
          filePath: 'scripts/azure-pipelines/windows/Check-CMakeFunctionDocumentation.ps1'
          arguments: '-Root .'
          pwsh: true
  - job:
    dependsOn: ClangFormat
    condition: failed()
    displayName: 'Publish Artifact: C++ Formatting diff'
    steps:
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)\clang-format.diff'
        ArtifactName: 'clang-format.diff'
- stage: run_port_ci
  displayName: 'Run the Port CI'
  dependsOn:
  - check_cxx_formatting
  - check_manifest_formatting
  - check_documentation_generation
  jobs:
  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x86-windows
      jobName: x86_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-windows
      jobName: x64_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-windows-static
      jobName: x64_windows_static
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-uwp
      jobName: x64_uwp
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: arm64-windows
      jobName: arm64_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: arm-uwp
      jobName: arm_uwp
      poolName: $(windows-pool)

  - template: osx/azure-pipelines.yml
    parameters:
      poolName: $(osx-pool)

  - template: linux/azure-pipelines.yml
    parameters:
      poolName: $(linux-pool)
