# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: MIT
#
variables:
  windows-pool: 'PrWin-2020-08-12'
  linux-pool: 'PrLin-2020-08-12'
  osx-pool: 'PrOsx-2020-09-28'

stages:
- stage: FormatChecks
  displayName: 'Formatting and Documentation Checks'
  pool: $(windows-pool)
  jobs:
  - job:
    workspace:
      clean: resources
    variables:
    - name: VCPKG_DOWNLOADS
      value: D:\downloads
    - name: DIFF_FILE
      value: $(Build.ArtifactStagingDirectory)\format.diff
    steps:
    - task: Powershell@2
      displayName: 'Format C++'
      inputs:
        filePath: 'scripts/azure-pipelines/Format-CxxCode.ps1'
        arguments: '-Root .'
        pwsh: true
    - task: Powershell@2
      displayName: 'Generate Documentation'
      inputs:
        filePath: 'docs/generate.ps1'
        arguments: '-VcpkgRoot . -WarningAction Stop'
        pwsh: true
    - script: .\bootstrap-vcpkg.bat
      displayName: 'Build vcpkg'
    - script: '.\vcpkg format-manifest --all'
      displayName: 'Format Manifests'
    - task: Powershell@2
      displayName: 'Create Diff'
      inputs:
        script: |
          Start-Process -FilePath 'git' -ArgumentList 'diff' -NoNewWindow -Wait -RedirectStandardOutput $ENV:DIFF_FILE
          if (0 -ne (Get-Item $ENV:DIFF_FILE).Length)
          {
            $msg = @(
              'The formatting of the files in the repo were not what we expected,',
              'or the documentation was not regenerated.',
              'Please access the diff from format.diff in the build artifacts,'
              'and apply the patch with `git apply`'
            )
            Write-Error ($msg -join "`n")
            throw
          }
    - task: PublishBuildArtifacts@1
      condition: failed()
      displayName: 'Publish C++ Diff'
      inputs:
        PathtoPublish: '$(DIFF_FILE)'
        ArtifactName: 'format.diff'
- stage: RunPrTests
  displayName: 'Run PR Tests:'
  dependsOn: FormatChecks
  jobs:
  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x86-windows
      jobName: x86_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-windows
      jobName: x64_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-windows-static
      jobName: x64_windows_static
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: x64-uwp
      jobName: x64_uwp
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: arm64-windows
      jobName: arm64_windows
      poolName: $(windows-pool)

  - template: windows/azure-pipelines.yml
    parameters:
      triplet: arm-uwp
      jobName: arm_uwp
      poolName: $(windows-pool)

  - template: osx/azure-pipelines.yml
    parameters:
      poolName: $(osx-pool)

  - template: linux/azure-pipelines.yml
    parameters:
      poolName: $(linux-pool)
