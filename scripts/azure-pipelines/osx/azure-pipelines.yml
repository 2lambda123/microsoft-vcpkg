# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: MIT
#

jobs:
- job: ${{ parameters.jobName }}
  pool:
    name: ${{ parameters.poolName }}
  workspace:
    clean: resources
  timeoutInMinutes: 2880 # 2 days
  variables:
  - name: WORKING_ROOT
    value: /Users/vagrant/Data
  - name: VCPKG_DOWNLOADS
    value: /Users/vagrant/Data/downloads
  - group: vcpkg-binary-caching-credentials
  - name: X_VCPKG_BINARY_SOURCE_STUB
    value: "x-azblob,$(root-bin-url),$(sas-bin)"
  - group: vcpkg-asset-caching-credentials
  - name: X_VCPKG_ASSET_SOURCES
    value: "x-azurl,$(root-url),$(sas),readwrite"

  steps:
  - bash: df -h
    displayName: 'Report on Disk Space'
  - bash: |
      sudo rm -rf ${{ variables.VCPKG_DOWNLOADS }} || 0
      sudo mkdir ${{ variables.VCPKG_DOWNLOADS }} || 0
      sudo chmod 777 ${{ variables.VCPKG_DOWNLOADS }} || 0
      exit 0
    displayName: 'Create ${{ variables.VCPKG_DOWNLOADS }}'
  - task: Bash@3
    displayName: 'Bootstrap vcpkg'
    inputs:
      filePath: bootstrap-vcpkg.sh
  - task: PowerShell@2
    displayName: '*** Test Modified Ports for x64-osx'
    inputs:
      failOnStderr: true
      filePath: 'scripts/azure-pipelines/test-modified-ports.ps1'
      arguments: >
        -Triplet ${{ parameters.triplet }}
        -BuildReason "$(Build.Reason)"
        -BinarySourceStub "${{ variables.X_VCPKG_BINARY_SOURCE_STUB }}"
        -WorkingRoot "${{ variables.WORKING_ROOT }}"
        -ArtifactStagingDirectory "$(Build.ArtifactStagingDirectory)"
      pwsh: true
  - bash: |
      df -h
    displayName: 'Report on Disk Space After Build'
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: failure logs for ${{ parameters.triplet }}'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/failure-logs'
      ArtifactName: 'failure logs for ${{ parameters.triplet }}${{ variables.Postfix }}'
    condition: ne(variables['FAILURE_LOGS_EMPTY'], 'True')
  - bash: |
      python3 scripts/file_script.py /Users/vagrant/Data/installed/vcpkg/info/
    displayName: 'Build a file list for all packages'
    condition: always()
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: file lists for ${{ parameters.triplet }}${{ variables.Postfix }}'
    condition: always()
    inputs:
      PathtoPublish: scripts/list_files
      ArtifactName: 'file lists for ${{ parameters.triplet }}${{ variables.Postfix }}'
