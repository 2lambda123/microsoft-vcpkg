cmake_minimum_required(VERSION 3.20)

project(detect_compiler CXX)

if(CMAKE_GENERATOR STREQUAL "Ninja" AND CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(CMAKE_C_COMPILER_WORKS 1)
    set(CMAKE_C_COMPILER_FORCED 1)
    set(CMAKE_CXX_COMPILER_WORKS 1)
    set(CMAKE_CXX_COMPILER_FORCED 1)
endif()

include(CheckLanguage)

check_language(C)
if (CMAKE_C_COMPILER)
    enable_language(C)
else()
    set(CURRENT_C_COMPILER)
    if (CMAKE_C_COMPILER STREQUAL "NOTFOUND")
        if (WIN32 AND NOT MINGW)
            set(CURRENT_C_COMPILER "MSVC C")
            message("Couldn't find MSVC C Compiler")
        elseif (UNIX)
            set(CURRENT_C_COMPILER "gcc")
        else()
            set(CURRENT_C_COMPILER "unknown")
        endif()
    else()
        set(CURRENT_C_COMPILER "${CMAKE_C_COMPILER}")
    endif()
    
    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/../result_failed" "${CURRENT_C_COMPILER}")
	
	return()
endif()

check_language(CXX)
if (CMAKE_CXX_COMPILER)
    enable_language(CXX)
else()
    set(CURRENT_CXX_COMPILER)
    if (CMAKE_CXX_COMPILER STREQUAL "NOTFOUND")
        if (WIN32 AND NOT MINGW)
            set(CURRENT_C_COMPILER "MSVC C++")
            message("Couldn't find MSVC CXX Compiler")
        elseif (UNIX)
            set(CURRENT_CXX_COMPILER "g++")
        else()
            set(CURRENT_CXX_COMPILER "unknown")
        endif()
    else()
        set(CURRENT_CXX_COMPILER "${CMAKE_C_COMPILER}")
    endif()
    
    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/../result_failed" "${CURRENT_CXX_COMPILER}")
	
	return()
endif()

file(SHA1 "${CMAKE_CXX_COMPILER}" CXX_HASH)
file(SHA1 "${CMAKE_C_COMPILER}" C_HASH)
string(SHA1 COMPILER_HASH "${C_HASH}${CXX_HASH}")

message("#COMPILER_HASH#${COMPILER_HASH}")
message("#COMPILER_C_HASH#${C_HASH}")
message("#COMPILER_C_VERSION#${CMAKE_C_COMPILER_VERSION}")
message("#COMPILER_C_ID#${CMAKE_C_COMPILER_ID}")
message("#COMPILER_CXX_HASH#${CXX_HASH}")
message("#COMPILER_CXX_VERSION#${CMAKE_CXX_COMPILER_VERSION}")
message("#COMPILER_CXX_ID#${CMAKE_CXX_COMPILER_ID}")

file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/../result_success" "")