diff --git a/src/cmake/Config.cmake.in b/src/cmake/Config.cmake.in
index b690864..fb45388 100644
--- a/src/cmake/Config.cmake.in
+++ b/src/cmake/Config.cmake.in
@@ -1,6 +1,10 @@
 @PACKAGE_INIT@
 
 include(CMakeFindDependencyMacro)
+find_dependency(PNG)
+if(@USE_OPENJPEG@)
+    find_dependency(OpenJPEG CONFIG)
+endif()
 
 # add here all the find_dependency() whenever switching to config based dependencies
 if (@OpenEXR_VERSION@ VERSION_GREATER_EQUAL 3.0)
@@ -11,6 +14,8 @@ elseif (@OpenEXR_VERSION@ VERSION_GREATER_EQUAL 2.4 AND @FOUND_OPENEXR_WITH_CONF
                     HINTS @IlmBase_DIR@ @OpenEXR_DIR@)
     find_dependency(OpenEXR @OpenEXR_VERSION@
                     HINTS @OpenEXR_DIR@)
+    find_dependency(libheif CONFIG REQUIRED)
+    find_dependency(unofficial-libsquish CONFIG REQUIRED)
     find_dependency(ZLIB @ZLIB_VERSION@)  # Because OpenEXR doesn't do it
     find_dependency(Threads)  # Because OpenEXR doesn't do it
 endif ()
@@ -27,7 +32,7 @@ endif ()
 #...logic to determine installedPrefix from the own location...
 #set (@PROJECT_NAME@_CONFIG_DIR  "${installedPrefix}/@CONFIG_INSTALL_DIR@")
 
-include ("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
+include("${CMAKE_CURRENT_LIST_DIR}/OpenImageIOTargets.cmake")
 
 check_required_components ("@PROJECT_NAME@")
 
diff --git a/src/cmake/externalpackages.cmake b/src/cmake/externalpackages.cmake
index 631035a..d416d78 100644
--- a/src/cmake/externalpackages.cmake
+++ b/src/cmake/externalpackages.cmake
@@ -200,7 +200,8 @@ if (ENABLE_FIELD3D)
 endif ()
 
 # For HEIF/HEIC/AVIF formats
-checked_find_package (Libheif VERSION_MIN 1.3
+checked_find_package (libheif VERSION_MIN 1.3
+                      PREFER_CONFIG
                       RECOMMEND_MIN 1.7
                       RECOMMEND_MIN_REASON "for AVIF support")
 if (APPLE AND LIBHEIF_VERSION VERSION_GREATER_EQUAL 1.10 AND LIBHEIF_VERSION VERSION_LESS 1.11)
@@ -221,7 +222,8 @@ if (LibRaw_FOUND AND LibRaw_VERSION VERSION_LESS 0.20 AND CMAKE_CXX_STANDARD VER
     # set (LIBRAW_FOUND 0)
 endif ()
 
-checked_find_package (OpenJPEG VERSION_MIN 2.0)
+set(CMAKE_REQUIRE_FIND_PACKAGE_OpenJPEG ${USE_OPENJPEG})
+checked_find_package (OpenJPEG CONFIG)
 
 checked_find_package (OpenVDB
                       VERSION_MIN 5.0
@@ -307,7 +308,8 @@ endmacro()
 option (USE_EMBEDDED_LIBSQUISH
         "Force use of embedded Libsquish, even if external is found" OFF)
 if (NOT USE_EMBEDDED_LIBSQUISH)
-    checked_find_package (Libsquish)
+    checked_find_package (unofficial-libsquish PREFER_CONFIG)
+    set(libsquish_FOUND 1)
 endif ()
 
 
