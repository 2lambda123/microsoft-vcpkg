diff --git a/cpp/cmake_modules/BuildUtils.cmake b/cpp/cmake_modules/BuildUtils.cmake
index e59b4a38a..9bd895608 100644
--- a/cpp/cmake_modules/BuildUtils.cmake
+++ b/cpp/cmake_modules/BuildUtils.cmake
@@ -440,7 +440,7 @@ function(ADD_ARROW_LIB LIB_NAME)
       target_include_directories(${LIB_NAME}_static PRIVATE ${ARG_PRIVATE_INCLUDES})
     endif()

-    if(MSVC_TOOLCHAIN)
+    if(MSVC_TOOLCHAIN AND 0)
       set(LIB_NAME_STATIC ${LIB_NAME}_static)
     else()
       set(LIB_NAME_STATIC ${LIB_NAME})
diff --git a/cpp/cmake_modules/FindBrotli.cmake b/cpp/cmake_modules/FindBrotli.cmake
index b46a0f1a0..3d87f5204 100644
--- a/cpp/cmake_modules/FindBrotli.cmake
+++ b/cpp/cmake_modules/FindBrotli.cmake
@@ -69,9 +69,9 @@ if(BROTLI_ROOT)
             PATH_SUFFIXES ${ARROW_INCLUDE_PATH_SUFFIXES}
             NO_DEFAULT_PATH)
 else()
-  find_package(PkgConfig QUIET)
-  pkg_check_modules(BROTLI_PC libbrotlicommon libbrotlienc libbrotlidec)
-  if(BROTLI_PC_FOUND)
+  #find_package(PkgConfig QUIET)
+  #pkg_check_modules(BROTLI_PC libbrotlicommon libbrotlienc libbrotlidec)
+  if(BROTLI_PC_FOUND AND 0) # Find via pkg_check_modules disabled as incompatible with vcpkg
     set(BROTLI_INCLUDE_DIR "${BROTLI_PC_libbrotlicommon_INCLUDEDIR}")

     # Some systems (e.g. Fedora) don't fill Brotli_LIBRARY_DIRS, so add the other dirs here.
diff --git a/cpp/cmake_modules/FindLz4.cmake b/cpp/cmake_modules/FindLz4.cmake
index 7159f96f7..5f58e2103 100644
--- a/cpp/cmake_modules/FindLz4.cmake
+++ b/cpp/cmake_modules/FindLz4.cmake
@@ -34,12 +34,11 @@ if(ARROW_LZ4_USE_SHARED)
       LZ4_LIB_NAMES
       "${CMAKE_SHARED_LIBRARY_PREFIX}${LZ4_LIB_NAME_BASE}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 else()
-  if(MSVC AND NOT DEFINED LZ4_MSVC_STATIC_LIB_SUFFIX)
-    set(LZ4_MSVC_STATIC_LIB_SUFFIX "_static")
+  if(CMAKE_BUILD_TYPE STREQUAL "DEBUG")
+    set(LZ4_LIB_NAME_DEBUG_SUFFIX d)
   endif()
-  set(LZ4_STATIC_LIB_SUFFIX "${LZ4_MSVC_STATIC_LIB_SUFFIX}${CMAKE_STATIC_LIBRARY_SUFFIX}")
-  set(LZ4_LIB_NAMES
-      "${CMAKE_STATIC_LIBRARY_PREFIX}${LZ4_LIB_NAME_BASE}${LZ4_STATIC_LIB_SUFFIX}")
+  set(LZ4_STATIC_LIB_NAME ${CMAKE_STATIC_LIBRARY_PREFIX}lz4${LZ4_LIB_NAME_DEBUG_SUFFIX}${CMAKE_STATIC_LIBRARY_SUFFIX})
+  set(LZ4_LIB_NAMES ${LZ4_STATIC_LIB_NAME} lib${LZ4_STATIC_LIB_NAME})
 endif()

 if(LZ4_ROOT)
@@ -55,9 +54,9 @@ if(LZ4_ROOT)
             PATH_SUFFIXES ${ARROW_INCLUDE_PATH_SUFFIXES})

 else()
-  find_package(PkgConfig QUIET)
-  pkg_check_modules(LZ4_PC liblz4)
-  if(LZ4_PC_FOUND)
+  #find_package(PkgConfig QUIET)
+  #pkg_check_modules(LZ4_PC liblz4)
+  if(LZ4_PC_FOUND AND 0) # Disabled as sometimes incompatible with vcpkg on Linux and OSX
     set(LZ4_INCLUDE_DIR "${LZ4_PC_INCLUDEDIR}")

     list(APPEND LZ4_PC_LIBRARY_DIRS "${LZ4_PC_LIBDIR}")
diff --git a/cpp/cmake_modules/Findzstd.cmake b/cpp/cmake_modules/Findzstd.cmake
index 6659a682d..d8cc4f72d 100644
--- a/cpp/cmake_modules/Findzstd.cmake
+++ b/cpp/cmake_modules/Findzstd.cmake
@@ -34,13 +34,14 @@ if(ARROW_ZSTD_USE_SHARED)
       ZSTD_LIB_NAMES
       "${CMAKE_SHARED_LIBRARY_PREFIX}${ZSTD_LIB_NAME_BASE}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 else()
-  if(MSVC AND NOT DEFINED ZSTD_MSVC_STATIC_LIB_SUFFIX)
-    set(ZSTD_MSVC_STATIC_LIB_SUFFIX "_static")
+  if(MSVC AND CMAKE_BUILD_TYPE STREQUAL "DEBUG")
+    set(ZSTD_MSVC_DEBUG_LIB_SUFFIX d)
   endif()
   set(ZSTD_STATIC_LIB_SUFFIX
-      "${ZSTD_MSVC_STATIC_LIB_SUFFIX}${CMAKE_STATIC_LIBRARY_SUFFIX}")
+      "${ZSTD_MSVC_DEBUG_LIB_SUFFIX}${CMAKE_STATIC_LIBRARY_SUFFIX}")
   set(ZSTD_LIB_NAMES
-      "${CMAKE_STATIC_LIBRARY_PREFIX}${ZSTD_LIB_NAME_BASE}${ZSTD_STATIC_LIB_SUFFIX}")
+      "zstd${ZSTD_STATIC_LIB_SUFFIX}"
+      "libzstd${ZSTD_STATIC_LIB_SUFFIX}")
 endif()

 # First, find via if specified ZTD_ROOT
