diff --git a/configure.ac b/configure.ac
index ff15f2922..cc9d5e385 100644
--- a/configure.ac
+++ b/configure.ac
@@ -17,6 +17,8 @@ AH_TEMPLATE([OMIT_FREEXL],
             [Should be defined in order to disable FREEXL support.])
 AH_TEMPLATE([OMIT_READOSM],
             [Should be defined in order to disable ReadOSM support.])
+AH_TEMPLATE([OMIT_ICONV],
+            [Should be defined in order to disable ICONV support.])
 AH_TEMPLATE([ENABLE_LIBXML2],
             [Should be defined in order to enable LIBXML2 support.])
 AH_TEMPLATE([ENABLE_MINIZIP],
@@ -142,28 +144,28 @@ fi
 AC_ARG_WITH([geosconfig],
       [AS_HELP_STRING([--with-geosconfig=FILE], [specify an alternative geos-config file])],
 	[GEOSCONFIG="$withval"], [GEOSCONFIG=""])
-if test "x$GEOSCONFIG" = "x"; then
-      # GEOSCONFIG was not specified, so search within the current path
-      AC_PATH_PROG([GEOSCONFIG], [geos-config])	
-      # If we couldn't find geos-config, display an error
-      if test "x$GEOSCONFIG" = "x"; then
-              AC_MSG_ERROR([could not find geos-config within the current path. You may need to try re-running configure with a --with-geosconfig parameter.])
-      fi
-else
-      # GEOSCONFIG was specified; display a message to the user
-      if test "x$GEOSCONFIG" = "xyes"; then
-              AC_MSG_ERROR([you must specify a parameter to --with-geosconfig, e.g. --with-geosconfig=/path/to/geos-config])
-      else
-              if test -f $GEOSCONFIG; then
-                      AC_MSG_RESULT([Using user-specified geos-config file: $GEOSCONFIG])
-              else
-                      AC_MSG_ERROR([the user-specified geos-config file $GEOSCONFIG does not exist])
-              fi     
-      fi
-fi
+#if test "x$GEOSCONFIG" = "x"; then
+#      # GEOSCONFIG was not specified, so search within the current path
+#      AC_PATH_PROG([GEOSCONFIG], [geos-config])	
+#      # If we couldn't find geos-config, display an error
+#      if test "x$GEOSCONFIG" = "x"; then
+#              AC_MSG_ERROR([could not find geos-config within the current path. You may need to try re-running configure with a --with-geosconfig parameter.])
+#      fi
+#else
+#      # GEOSCONFIG was specified; display a message to the user
+#      if test "x$GEOSCONFIG" = "xyes"; then
+#              AC_MSG_ERROR([you must specify a parameter to --with-geosconfig, e.g. --with-geosconfig=/path/to/geos-config])
+#      else
+#              if test -f $GEOSCONFIG; then
+#                      AC_MSG_RESULT([Using user-specified geos-config file: $GEOSCONFIG])
+#              else
+#                      AC_MSG_ERROR([the user-specified geos-config file $GEOSCONFIG does not exist])
+#              fi     
+#      fi
+#fi
 # Extract the linker and include flags
-GEOS_LDFLAGS=`$GEOSCONFIG --ldflags`
-GEOS_CPPFLAGS=-I`$GEOSCONFIG --includes`
+#GEOS_LDFLAGS=`$GEOSCONFIG --ldflags`
+#GEOS_CPPFLAGS=-I`$GEOSCONFIG --includes`
 AC_SUBST([GEOS_LDFLAGS])
 AC_SUBST([GEOS_CPPFLAGS])	
 # Ensure that we can parse geos_c.h
@@ -174,9 +176,9 @@ CPPFLAGS="$CPPFLAGS_SAVE"
 # Ensure we can link against libgeos_c
 LIBS_SAVE="$LIBS"
 LIBS="$GEOS_LDFLAGS"
-AC_SEARCH_LIBS(GEOSTopologyPreserveSimplify,geos_c,,AC_MSG_ERROR([could not find libgeos_c - you may need to specify the directory of a geos-config file using --with-geosconfig]))
+#AC_SEARCH_LIBS(GEOSTopologyPreserveSimplify,geos_c,,AC_MSG_ERROR([could not find libgeos_c - you may need to specify the directory of a geos-config file using --with-geosconfig]))
 LIBS="$LIBS_SAVE"
-LIBS=$LIBS$GEOS_LDFLAGS' -lgeos_c'
+LIBS=$LIBS $GEOS_LDFLAGS
 
 PKG_CHECK_MODULES([LIBSPATIALITE], [spatialite], , AC_MSG_ERROR(['libspatialite' is required but it doesn't seem to be installed on this system.]))
 AC_SUBST(LIBSPATIALITE_CFLAGS)
@@ -218,6 +220,24 @@ fi
 
 AM_CONDITIONAL([NO_READOSM], [test "$NOREADOSM" = "true"])
 
+#-----------------------------------------------------------------------
+#   --enable-iconv
+#
+AC_ARG_ENABLE(iconv, [AS_HELP_STRING(
+  [--enable-iconv], [enables ICONV inclusion [default=yes]])],
+  [], [enable_iconv=yes])
+if test x"$enable_iconv" != "xno"; then
+  AC_CHECK_HEADERS(iconv.h,, [AC_MSG_ERROR([cannot find iconv.h, bailing out])])
+# on some systems "iconv()" lives in libc. On others it lives in libiconv
+#  on older systems "libiconv()" lives in libiconv
+  AC_SEARCH_LIBS(iconv,iconv,,
+    AC_SEARCH_LIBS(libiconv,iconv,,AC_MSG_ERROR(['libiconv' is required but it doesn't seem to be installed on this system.]),))
+  AC_SEARCH_LIBS(locale_charset,charset,,
+    AC_SEARCH_LIBS(nl_langinfo,c,,AC_MSG_ERROR(['libcharset' is required but it doesn't seem to be installed on this system.]),))
+else
+  AC_DEFINE(OMIT_ICONV)
+fi
+
 #-----------------------------------------------------------------------
 #   --enable-libxml2
 #
