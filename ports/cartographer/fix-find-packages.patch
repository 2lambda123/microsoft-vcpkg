 CMakeLists.txt                     | 22 ++++++++++++++--------
 cartographer/common/math.h         |  4 +++-
 cartographer/common/thread_pool.cc |  2 +-
 3 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index c502769..941480d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -25,20 +25,23 @@ option(BUILD_GRPC "build Cartographer gRPC support" false)
 set(GRPC_PLUGIN_PATH "/usr/local/bin/grpc_cpp_plugin")
 
 include("${PROJECT_SOURCE_DIR}/cmake/functions.cmake")
-google_initialize_cartographer_project()
-google_enable_testing()
+#google_initialize_cartographer_project()
+#google_enable_testing()
 
 find_package(Boost REQUIRED COMPONENTS iostreams)
 find_package(Ceres REQUIRED COMPONENTS SparseLinearAlgebraLibrary)
 find_package(Eigen3 REQUIRED)
-find_package(LuaGoogle REQUIRED)
+#find_package(LuaGoogle REQUIRED)
 find_package(Protobuf 3.0.0 REQUIRED)
+find_package(glog REQUIRED)
+find_package(gflags REQUIRED)
 
 include(FindPkgConfig)
-PKG_SEARCH_MODULE(CAIRO REQUIRED cairo>=1.12.16)
+#find_package(CAIRO REQUIRED cairo>=1.12.16 )
+
 
 # Only build the documentation if we can find Sphinx.
-find_package(Sphinx)
+#find_package(Sphinx)
 if(SPHINX_FOUND)
   add_subdirectory("docs")
 endif()
@@ -171,8 +174,10 @@ target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
 target_link_libraries(${PROJECT_NAME} PUBLIC ${Boost_LIBRARIES})
 
 # We expect find_package(Ceres) to have located these for us.
-target_link_libraries(${PROJECT_NAME} PUBLIC glog)
-target_link_libraries(${PROJECT_NAME} PUBLIC gflags)
+#target_link_libraries(${PROJECT_NAME} PUBLIC glog)
+#target_link_libraries(${PROJECT_NAME} PUBLIC gflags)
+target_link_libraries(${PROJECT_NAME} PUBLIC ${GLOG_LIBRARY})
+target_link_libraries(${PROJECT_NAME} PUBLIC ${GFLAGS_LIBRARY})
 
 target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
   "${CAIRO_INCLUDE_DIRS}")
@@ -182,7 +187,8 @@ target_include_directories(${PROJECT_NAME} SYSTEM PUBLIC
   ${PROTOBUF_INCLUDE_DIR})
 # TODO(hrapp): This should not explicitly list pthread and use
 # PROTOBUF_LIBRARIES, but that failed on first try.
-target_link_libraries(${PROJECT_NAME} PUBLIC ${PROTOBUF_LIBRARY} pthread)
+#target_link_libraries(${PROJECT_NAME} PUBLIC ${PROTOBUF_LIBRARY} pthread)
+target_link_libraries(${PROJECT_NAME} PUBLIC ${PROTOBUF_LIBRARY})
 
 # Add the binary directory first, so that port.h is included after it has
 # been generated.
diff --git a/cartographer/common/math.h b/cartographer/common/math.h
index f0ae9e2..3a16537 100644
--- a/cartographer/common/math.h
+++ b/cartographer/common/math.h
@@ -16,7 +16,9 @@
 
 #ifndef CARTOGRAPHER_COMMON_MATH_H_
 #define CARTOGRAPHER_COMMON_MATH_H_
-
+#ifndef M_PI
+#define M_PI 3.14159265358979323846
+#endif
 #include <cmath>
 #include <vector>
 
diff --git a/cartographer/common/thread_pool.cc b/cartographer/common/thread_pool.cc
index fdda166..178472f 100644
--- a/cartographer/common/thread_pool.cc
+++ b/cartographer/common/thread_pool.cc
@@ -16,7 +16,7 @@
 
 #include "cartographer/common/thread_pool.h"
 
-#include <unistd.h>
+//#include <unistd.h>
 #include <algorithm>
 #include <chrono>
 #include <numeric>
