diff --git a/cmake/OpenCVDetectVTK.cmake b/cmake/OpenCVDetectVTK.cmake
index 1495688..4c83504 100644
--- a/cmake/OpenCVDetectVTK.cmake
+++ b/cmake/OpenCVDetectVTK.cmake
@@ -1,12 +1,30 @@
+# VTK 9.0
+if(NOT VTK_FOUND)
+  find_package(VTK 9 QUIET NAMES vtk COMPONENTS
+    FiltersExtraction
+    FiltersSources
+    FiltersTexture
+    IOExport
+    IOGeometry
+    IOPLY
+    InteractionStyle
+    RenderingCore
+    RenderingLOD
+    RenderingOpenGL2
+    NO_MODULE)
+endif()
+
 # VTK 6.x components
-find_package(VTK QUIET COMPONENTS vtkInteractionStyle vtkRenderingLOD vtkIOPLY vtkFiltersTexture vtkRenderingFreeType vtkIOExport NO_MODULE)
-IF(VTK_FOUND)
-  IF(VTK_RENDERING_BACKEND) #in vtk 7, the rendering backend is exported as a var.
+if(NOT VTK_FOUND)
+  find_package(VTK QUIET COMPONENTS vtkInteractionStyle vtkRenderingLOD vtkIOPLY vtkFiltersTexture vtkRenderingFreeType vtkIOExport NO_MODULE)
+  IF(VTK_FOUND)
+    IF(VTK_RENDERING_BACKEND) #in vtk 7, the rendering backend is exported as a var.
       find_package(VTK QUIET COMPONENTS vtkRendering${VTK_RENDERING_BACKEND} vtkInteractionStyle vtkRenderingLOD vtkIOPLY vtkFiltersTexture vtkRenderingFreeType vtkIOExport vtkIOGeometry NO_MODULE)
-  ELSE(VTK_RENDERING_BACKEND)
+    ELSE(VTK_RENDERING_BACKEND)
       find_package(VTK QUIET COMPONENTS vtkRenderingOpenGL vtkInteractionStyle vtkRenderingLOD vtkIOPLY vtkFiltersTexture vtkRenderingFreeType vtkIOExport NO_MODULE)
-  ENDIF(VTK_RENDERING_BACKEND)
-ENDIF(VTK_FOUND)
+    ENDIF(VTK_RENDERING_BACKEND)
+  ENDIF(VTK_FOUND)
+endif()
 
 # VTK 5.x components
 if(NOT VTK_FOUND)
@@ -52,5 +70,18 @@ if(HAVE_QT AND VTK_VERSION VERSION_GREATER "6.0.0" AND NOT ${VTK_QT_VERSION} STR
   endif()
 endif()
 
+try_compile(VTK_COMPILE_STATUS
+    "${OpenCV_BINARY_DIR}"
+    "${OpenCV_SOURCE_DIR}/cmake/checks/vtk_test.cpp"
+    CMAKE_FLAGS "-DINCLUDE_DIRECTORIES:STRING=${VTK_INCLUDE_DIRS}"
+    LINK_LIBRARIES ${VTK_LIBRARIES}
+    OUTPUT_VARIABLE OUTPUT
+)
+
+if(NOT ${VTK_COMPILE_STATUS})
+  message(STATUS "VTK support is disabled. Compilation of the sample code has failed.")
+  return()
+endif()
+
 set(HAVE_VTK ON)
 message(STATUS "Found VTK ${VTK_VERSION} (${VTK_USE_FILE})")
diff --git a/modules/viz/CMakeLists.txt b/modules/viz/CMakeLists.txt
index 256b464..92698c3 100644
--- a/modules/viz/CMakeLists.txt
+++ b/modules/viz/CMakeLists.txt
@@ -3,7 +3,6 @@ if(NOT HAVE_VTK)
 endif()
 
 set(the_description "Viz")
-include(${VTK_USE_FILE})
 
 if(NOT BUILD_SHARED_LIBS)
   # We observed conflict between builtin 3rdparty libraries and
@@ -27,7 +26,14 @@ endif()
 ocv_warnings_disable(CMAKE_CXX_FLAGS -Winconsistent-missing-override -Wsuggest-override)
 
 ocv_define_module(viz opencv_core WRAP python)
-ocv_target_link_libraries(${the_module} PRIVATE ${VTK_LIBRARIES})
+
+if (VTK_VERSION VERSION_LESS "8.90.0")
+  include(${VTK_USE_FILE})
+  ocv_target_link_libraries(${the_module} PRIVATE ${VTK_LIBRARIES})
+else ()
+  ocv_target_link_libraries(${the_module} PRIVATE ${VTK_LIBRARIES})
+  vtk_module_autoinit(TARGETS ${the_module} MODULES ${VTK_LIBRARIES})
+endif()
 
 if(APPLE AND BUILD_opencv_viz)
   ocv_target_link_libraries(${the_module} PRIVATE "-framework Cocoa")
