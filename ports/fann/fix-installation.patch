diff --git a/CMakeLists.txt b/CMakeLists.txt
index 428b55c..cb2a4e2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -160,10 +160,5 @@ install (FILES
 
 ################# compile tests ################
 
-ADD_SUBDIRECTORY( lib/googletest )
-
-if(COMPILER_SUPPORTS_CXX11)
-  ADD_SUBDIRECTORY( tests )
-endif()
 
 ENDIF()
diff --git a/cmake/Modules/DefineInstallationPaths.cmake b/cmake/Modules/DefineInstallationPaths.cmake
index bbcd0ba..7cf8714 100644
--- a/cmake/Modules/DefineInstallationPaths.cmake
+++ b/cmake/Modules/DefineInstallationPaths.cmake
@@ -3,7 +3,7 @@ if (UNIX OR MINGW OR WIN32)
         MESSAGE(STATUS "${PROJECT_NAME} is used as APPLICATION_NAME")
         SET(APPLICATION_NAME ${PROJECT_NAME})
     ENDIF (NOT APPLICATION_NAME)
-
+if (0)
     # Suffix for Linux
     SET(LIB_SUFFIX
         CACHE STRING "Define suffix of directory name (32/64)"
@@ -122,12 +122,13 @@ if (UNIX OR MINGW OR WIN32)
         CACHE PATH "The ${APPLICATION_NAME} info install dir (default prefix/info)"
         FORCE
     )
+endif()
 
-  set (CMAKE_CONFIG_DIR "${LIB_INSTALL_DIR}/cmake/fann" CACHE PATH "config dir" FORCE)
-  set (PKGCONFIG_INSTALL_DIR "${LIB_INSTALL_DIR}/pkgconfig" CACHE PATH "pkgconfig dir" FORCE)
+  set (CMAKE_CONFIG_DIR "lib/cmake/fann" CACHE PATH "config dir" FORCE)
+  set (PKGCONFIG_INSTALL_DIR "lib/pkgconfig/" CACHE PATH "pkgconfig dir" FORCE)
 endif ()
 
-if (MSCV)
+if (0)
 	# Same same
 	SET(BIN_INSTALL_DIR .)
 	SET(SBIN_INSTALL_DIR .)
@@ -137,5 +138,5 @@ if (MSCV)
 	SET(ICON_INSTALL_DIR .)
 	SET(SOUND_INSTALL_DIR .)
 	SET(LOCALE_INSTALL_DIR lang)
-endif (MSCV)
+endif ()
 
diff --git a/src/include/CMakeLists.txt b/src/include/CMakeLists.txt
index 056868b..19c4936 100644
--- a/src/include/CMakeLists.txt
+++ b/src/include/CMakeLists.txt
@@ -6,5 +6,5 @@ ELSE(NOT OPENMP_FOUND OR DISABLE_PARALLEL_FANN)
   SET(PARALLEL_INCLUDES parallel_fann.h parallel_fann.hpp)
 ENDIF(NOT OPENMP_FOUND OR DISABLE_PARALLEL_FANN)
 
-install (FILES fann.h doublefann.h fann_internal.h floatfann.h fann_data.h fixedfann.h fann_activation.h fann_cascade.h fann_error.h fann_train.h fann_io.h fann_cpp.h fann_data_cpp.h fann_training_data_cpp.h ${PARALLEL_INCLUDES} DESTINATION ${INCLUDE_INSTALL_DIR})
+install (FILES fann.h doublefann.h fann_internal.h floatfann.h fann_data.h fixedfann.h fann_activation.h fann_cascade.h fann_error.h fann_train.h fann_io.h fann_cpp.h fann_data_cpp.h fann_training_data_cpp.h ${PARALLEL_INCLUDES} DESTINATION include/fann/)
 
