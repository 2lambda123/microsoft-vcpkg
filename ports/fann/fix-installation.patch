diff --git a/CMakeLists.txt b/CMakeLists.txt
index 12ea06c..0b8bce4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
 IF(BIICODE)
 	# Initializes block variables
 	INIT_BIICODE_BLOCK()
-	
+
 	# Output folder for binaries
 	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/../bin/fann/examples)
 	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG  ${CMAKE_CURRENT_SOURCE_DIR}/../bin/fann/examples)
@@ -18,11 +18,11 @@ IF(BIICODE)
 	LIST(FIND BII_BLOCK_EXES examples_parallel_train examples_present)
 	SET(examples_present (NOT ${examples_present} EQUAL "-1")) # Depending on examples
 	IF(${examples_present} AND NOT WIN32 AND NOT APPLE) # Linux doesn't have GetTickCount
-		LIST(REMOVE_ITEM BII_BLOCK_EXES examples_parallel_train)		
+		LIST(REMOVE_ITEM BII_BLOCK_EXES examples_parallel_train)
 	ENDIF()
 
 	ADD_BIICODE_TARGETS()
-	
+
 	IF(${examples_present})
 	   # This example needs CPP11
            ACTIVATE_CPP11(lasote_fann_examples_xor_sample)
@@ -82,7 +82,7 @@ configure_file (cmake/fann.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/fann.pc @ONLY)
 
 install (FILES ${CMAKE_CURRENT_BINARY_DIR}/fann.pc DESTINATION ${PKGCONFIG_INSTALL_DIR})
 
-ADD_SUBDIRECTORY( src ) 
+ADD_SUBDIRECTORY( src )
 
 ################# cpack ################
 
@@ -95,7 +95,7 @@ SET(CPACK_PACKAGE_VERSION_MINOR "${FANN_VERSION_MINOR}")
 SET(CPACK_PACKAGE_VERSION_PATCH "${FANN_VERSION_PATCH}")
 SET(CPACK_GENERATOR "TGZ;ZIP")
 SET(CPACK_SOURCE_GENERATOR "TGZ;ZIP")
-SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Steffen Nissen") 
+SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Steffen Nissen")
 SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
 IF(WIN32 AND NOT UNIX)
   # There is a bug in NSI that does not handle full unix paths properly. Make
@@ -156,10 +156,5 @@ install (FILES
 
 ################# compile tests ################
 
-ADD_SUBDIRECTORY( lib/googletest )
-
-if(COMPILER_SUPPORTS_CXX11)
-  ADD_SUBDIRECTORY( tests )
-endif()
 
 ENDIF()
diff --git a/cmake/Modules/DefineInstallationPaths.cmake b/cmake/Modules/DefineInstallationPaths.cmake
index 2969533..bbcd0ba 100644
--- a/cmake/Modules/DefineInstallationPaths.cmake
+++ b/cmake/Modules/DefineInstallationPaths.cmake
@@ -3,7 +3,7 @@ if (UNIX OR MINGW OR WIN32)
         MESSAGE(STATUS "${PROJECT_NAME} is used as APPLICATION_NAME")
         SET(APPLICATION_NAME ${PROJECT_NAME})
     ENDIF (NOT APPLICATION_NAME)
-
+if (0)
     # Suffix for Linux
     SET(LIB_SUFFIX
         CACHE STRING "Define suffix of directory name (32/64)"
@@ -122,12 +122,13 @@ if (UNIX OR MINGW OR WIN32)
         CACHE PATH "The ${APPLICATION_NAME} info install dir (default prefix/info)"
         FORCE
     )
+endif()
 
   set (CMAKE_CONFIG_DIR "${LIB_INSTALL_DIR}/cmake/fann" CACHE PATH "config dir" FORCE)
   set (PKGCONFIG_INSTALL_DIR "${LIB_INSTALL_DIR}/pkgconfig" CACHE PATH "pkgconfig dir" FORCE)
 endif ()
 
-if (MSCV)
+if (0)
 	# Same same
 	SET(BIN_INSTALL_DIR .)
 	SET(SBIN_INSTALL_DIR .)
@@ -137,5 +138,5 @@ if (MSCV)
 	SET(ICON_INSTALL_DIR .)
 	SET(SOUND_INSTALL_DIR .)
 	SET(LOCALE_INSTALL_DIR lang)
-endif (MSCV)
+endif ()
 
diff --git a/src/include/CMakeLists.txt b/src/include/CMakeLists.txt
index 056868b..19c4936 100644
--- a/src/include/CMakeLists.txt
+++ b/src/include/CMakeLists.txt
@@ -6,5 +6,5 @@ ELSE(NOT OPENMP_FOUND OR DISABLE_PARALLEL_FANN)
   SET(PARALLEL_INCLUDES parallel_fann.h parallel_fann.hpp)
 ENDIF(NOT OPENMP_FOUND OR DISABLE_PARALLEL_FANN)
 
-install (FILES fann.h doublefann.h fann_internal.h floatfann.h fann_data.h fixedfann.h fann_activation.h fann_cascade.h fann_error.h fann_train.h fann_io.h fann_cpp.h fann_data_cpp.h fann_training_data_cpp.h ${PARALLEL_INCLUDES} DESTINATION ${INCLUDE_INSTALL_DIR})
+install (FILES fann.h doublefann.h fann_internal.h floatfann.h fann_data.h fixedfann.h fann_activation.h fann_cascade.h fann_error.h fann_train.h fann_io.h fann_cpp.h fann_data_cpp.h fann_training_data_cpp.h ${PARALLEL_INCLUDES} DESTINATION include/fann/)
 
