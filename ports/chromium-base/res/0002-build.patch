diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index 2656f80..2d171bc 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -2327,7 +2327,7 @@ config("symbols") {
       # by emitting class type info only when constructors are emitted.
       cflags += [
         "-Xclang",
-        "-fuse-ctor-homing",
+      #  "-fuse-ctor-homing",
       ]
     }
   }
diff --git a/toolchain/win/BUILD.gn b/toolchain/win/BUILD.gn
index ace071a..14c501b 100644
--- a/toolchain/win/BUILD.gn
+++ b/toolchain/win/BUILD.gn
@@ -107,7 +107,7 @@ template("msvc_toolchain") {
       } else {
         lld_link = "lld-link"
       }
-      prefix = rebase_path("$clang_base_path/bin", root_build_dir)
+      prefix = "$clang_base_path/bin"
 
       # lld-link includes a replacement for lib.exe that can produce thin
       # archives and understands bitcode (for lto builds).
@@ -200,7 +200,7 @@ template("msvc_toolchain") {
       # amount of data to parse and store in .ninja_deps. We do this on non-Windows too,
       # and already make sure rebuilds after win sdk / libc++ / clang header updates happen via
       # changing commandline flags.
-      show_includes = "/showIncludes:user"
+      show_includes = ""
     } else {
       show_includes = "/showIncludes"
     }
@@ -249,7 +249,7 @@ template("msvc_toolchain") {
 
       if (toolchain_args.current_cpu == "arm64") {
         if (is_clang) {
-          prefix = rebase_path("$clang_base_path/bin", root_build_dir)
+          prefix = "$clang_base_path/bin"
           ml = "${clang_prefix}${prefix}/${clang_cl} --target=arm64-windows"
           if (host_os == "win") {
             # Flip the slashes so that copy/paste of the command works.
@@ -504,11 +504,9 @@ template("win_toolchains") {
 
   msvc_toolchain("win_clang_" + target_name) {
     environment = "environment." + toolchain_arch
-    prefix = rebase_path("$clang_base_path/bin", root_build_dir)
+    prefix = "$clang_base_path/bin"
     cl = "${clang_prefix}$prefix/${clang_cl}"
-    _clang_lib_dir =
-        rebase_path("$clang_base_path/lib/clang/$clang_version/lib/windows",
-                    root_build_dir)
+    _clang_lib_dir = "$clang_base_path/lib/clang/$clang_version/lib/windows"
     if (host_os == "win") {
       # Flip the slashes so that copy/paste of the command works.
       cl = string_replace(cl, "/", "\\")
@@ -519,7 +517,7 @@ template("win_toolchains") {
 
     sys_include_flags = "${win_toolchain_data.include_flags_imsvc}"
     sys_lib_flags =
-        "-libpath:$_clang_lib_dir ${win_toolchain_data.libpath_flags}"
+        "-libpath:\"$_clang_lib_dir\" ${win_toolchain_data.libpath_flags}"
 
     toolchain_args = {
       if (defined(invoker.toolchain_args)) {
