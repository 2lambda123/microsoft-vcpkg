
# set(VCPKG_FIRST_EGL_CALL OFF)
#if(NOT TARGET EGL::EGL)
#    set(VCPKG_FIRST_EGL_CALL ON)
#endif()

# set(HAVE_EGL ON CACHE INTERNAL "")
if(UNIX)
    _find_package(OpenGL COMPONENTS EGL REQUIRED) 
    if(OPENGL_egl_LIBRARY) # Only defined for Linux with GLVND
        set(EGL_LIBRARY "${OPENGL_egl_LIBRARY}" CACHE STRING "")
        set(EGL_INCLUDE_DIR "${OPENGL_EGL_INCLUDE_DIRS}" CACHE STRING "")
    endif()
endif()
_find_package(${ARGS})

# if(VCPKG_FIRST_EGL_CALL AND "${EGL_LIBRARY}" MATCHES "libEGL\\\.a$")
    # set(VCPKG_EGL_IS_STATIC_UNIX ON)
    # find_library(VCPKG_GLESV2_LIBRARY NAMES GLESv2)
    # set_property(TARGET EGL::EGL APPEND PROPERTY INTERFACE_LINK_LIBRARIES "${VCPKG_GLESV2_LIBRARY}")
    # find_library(VCPKG_ANGLE_LIBRARY NAMES ANGLE) 
    # set_property(TARGET EGL::EGL APPEND PROPERTY INTERFACE_LINK_LIBRARIES "${VCPKG_ANGLE_LIBRARY}")
# endif()
# if(VCPKG_FIRST_EGL_CALL AND TARGET EGL::EGL AND UNIX)
    # find_library(VCPKG_XNVCNTRL NAMES XNVCtrl)
    # set_property(TARGET EGL::EGL APPEND PROPERTY INTERFACE_LINK_LIBRARIES "${VCPKG_XNVCNTRL}")
    # find_package(X11 COMPONENTS Xi Xext REQUIRED)
    # set_property(TARGET EGL::EGL APPEND PROPERTY INTERFACE_LINK_LIBRARIES "X11::X11;X11::Xext;X11::Xi")
# endif()

# unset(VCPKG_FIRST_EGL_CALL)
# unset(VCPKG_EGL_IS_STATIC_UNIX)
