diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2fa3908..191adf8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -21,7 +21,7 @@ my_protobuf_generate_cpp(cld_3/protos PROTO_SRCS PROTO_HDRS src/feature_extracto
 message(STATUS "PROTO_HDRS= ${PROTO_HDRS}")
 
 add_definitions(-fPIC) # Position Independant Code
-add_definitions(-D_GLIBCXX_USE_CXX11_ABI=0)
+add_definitions(-D_GLIBCXX_USE_CXX11_ABI=1)
 add_definitions(-std=c++11) # Needed for std::to_string(), ...
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR} ${Protobuf_INCLUDE_DIRS}) # needed to include generated pb headers
@@ -67,3 +67,65 @@ target_link_libraries(getonescriptspan_test cld3 ${Protobuf_LITE_LIBRARIES})
 
 add_executable(language_identifier_features_test src/language_identifier_features_test.cc)
 target_link_libraries(language_identifier_features_test cld3 ${Protobuf_LITE_LIBRARIES})
+
+################################################################################
+# Dependencies
+################################################################"################
+
+set(PUBLIC_HEADER
+    src/base.h
+    src/casts.h
+    src/embedding_feature_extractor.h
+    src/embedding_network.h
+    src/embedding_network_params.h
+    src/feature_extractor.h
+    src/feature_types.h
+    src/float16.h
+    src/fml_parser.h
+    src/language_identifier_features.h
+    src/lang_id_nn_params.h
+    src/nnet_language_identifier.h
+    src/nnet_lang_id_test_data.h
+    src/registry.h
+    src/relevant_script_feature.h
+    src/script_detector.h
+    src/sentence_features.h
+    src/simple_adder.h
+    src/task_context.h
+    src/task_context_params.h
+    src/unicodetext.h
+    src/utils.h
+    src/workspace.h
+)
+
+set(HEADERS_SCRIPT_SPAN
+	src/script_span/fixunicodevalue.h
+	src/script_span/generated_ulscript.h
+	src/script_span/getonescriptspan.h
+	src/script_span/integral_types.h
+	src/script_span/offsetmap.h
+	src/script_span/port.h
+	src/script_span/stringpiece.h
+	src/script_span/text_processing.h
+	src/script_span/utf8acceptinterchange.h
+	src/script_span/utf8prop_lettermarkscriptnum.h
+	src/script_span/utf8repl_lettermarklower.h
+	src/script_span/utf8scannot_lettermarkspecial.h
+	src/script_span/utf8statetable.h
+)
+
+set(HEADERS_PROTO
+	${CMAKE_CURRENT_BINARY_DIR}/cld_3/protos/feature_extractor.pb.h
+	${CMAKE_CURRENT_BINARY_DIR}/cld_3/protos/sentence.pb.h
+	${CMAKE_CURRENT_BINARY_DIR}/cld_3/protos/task_spec.pb.h
+)
+
+set(INSTALL_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib" CACHE PATH "Installation directory for libraries")
+set(INSTALL_INC_DIR "${CMAKE_INSTALL_PREFIX}/include/cld3" CACHE PATH "Installation directory for headers")
+
+install(TARGETS ${PROJECT_NAME}
+        LIBRARY DESTINATION "${INSTALL_LIB_DIR}" )
+
+install(FILES ${PUBLIC_HEADER} DESTINATION "${INSTALL_INC_DIR}")
+install(FILES ${HEADERS_SCRIPT_SPAN} DESTINATION "${INSTALL_INC_DIR}/script_span")
+install(FILES ${HEADERS_PROTO} DESTINATION "${INSTALL_INC_DIR}/cld_3/protos")
diff --git a/src/sentence_features.h b/src/sentence_features.h
index cc0be88..e2e27d2 100644
--- a/src/sentence_features.h
+++ b/src/sentence_features.h
@@ -34,7 +34,7 @@ using WholeSentenceExtractor = FeatureExtractor<Sentence>;
 // for clang's -Wundefined-var-template.  However, MSVC has a bug which treats
 // this declaration as a definition, leading to multiple definition errors, so
 // omit this on MSVC.
-#if !defined(COMPILER_MSVC)
+#if !defined(_MSC_VER)
 template <>
 WholeSentenceFeature::Registry
     *RegisterableClass<WholeSentenceFeature>::registry_;
