# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

add_library(crashpad INTERFACE)
add_library(crashpad::crashpad ALIAS crashpad)

set(CRASHPAD_LIBRARIES common client util base)

if(WIN32)
	target_compile_definitions(crashpad INTERFACE NOMINMAX)
elseif(APPLE)
	list(APPEND CRASHPAD_LIBRARIES ApplicationServices
        CoreFoundation Foundation IOKit Security bsm mig_output)
endif()

foreach(LIB_NAME ${CRASHPAD_LIBRARIES})
  find_library(_LIB_RELEASE NAMES ${LIB_NAME} NAMES_PER_DIR PATHS "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/lib" NO_DEFAULT_PATH)
  find_library(_LIB_DEBUG NAMES ${LIB_NAME} NAMES_PER_DIR PATHS "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/debug/lib" NO_DEFAULT_PATH)
  target_link_libraries(crashpad INTERFACE debug ${_LIB_DEBUG} optimized ${_LIB_RELEASE})
  unset(_LIB_DEBUG CACHE)
  unset(_LIB_RELEASE CACHE)
endforeach()

find_package(ZLIB REQUIRED)
target_link_libraries(crashpad INTERFACE ZLIB::ZLIB)

target_include_directories(crashpad 
        INTERFACE ${_IMPORT_PREFIX}/include/crashpad)
