# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

add_library(crashpad INTERFACE)
add_library(crashpad::crashpad ALIAS crashpad)

# Crashpad Headers
target_include_directories(crashpad INTERFACE 
        ${_IMPORT_PREFIX}/include/crashpad 
        ${_IMPORT_PREFIX}/include/crashpad/third_party/mini_chromium/mini_chromium
)

# Crashpad Libraries
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
  set(_IMPORT_LIB_DIR "${_IMPORT_PREFIX}/debug/lib")
else()
  set(_IMPORT_LIB_DIR "${_IMPORT_PREFIX}/lib")
endif()

add_library(crashpad_common STATIC IMPORTED)
add_library(crashpad_client STATIC IMPORTED)
add_library(crashpad_util STATIC IMPORTED)
add_library(crashpad_base STATIC IMPORTED)

if(WIN32)
  target_compile_definitions(crashpad INTERFACE NOMINMAX)
endif()

set_property(TARGET crashpad_common PROPERTY IMPORTED_LOCATION "${_IMPORT_LIB_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}common${CMAKE_STATIC_LIBRARY_SUFFIX}")
set_property(TARGET crashpad_client PROPERTY IMPORTED_LOCATION "${_IMPORT_LIB_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}client${CMAKE_STATIC_LIBRARY_SUFFIX}")
set_property(TARGET crashpad_util PROPERTY IMPORTED_LOCATION "${_IMPORT_LIB_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}util${CMAKE_STATIC_LIBRARY_SUFFIX}")
set_property(TARGET crashpad_base PROPERTY IMPORTED_LOCATION "${_IMPORT_LIB_DIR}/${CMAKE_STATIC_LIBRARY_PREFIX}base${CMAKE_STATIC_LIBRARY_SUFFIX}")

target_link_libraries(crashpad INTERFACE crashpad_common crashpad_client crashpad_util crashpad_base)

if(APPLE OR "${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
  set(THREADS_PREFER_PTHREAD_FLAG ON)
  find_package(Threads REQUIRED)
  target_link_libraries(crashpad INTERFACE Threads::Threads)
endif()

if(APPLE)
  target_link_libraries(crashpad INTERFACE 
    "-framework ApplicationServices"
    "-framework CoreFoundation"
    "-framework Foundation"
    "-framework IOKit"
    "-framework Security"
  )

  find_library(bsm REQUIRED)
  add_library(crashpad_mig_output STATIC IMPORTED)
  set_property(TARGET crashpad_mig_output PROPERTY IMPORTED_LOCATION "${_IMPORT_LIB_DIR}/libmig_output.a")
  target_link_libraries(crashpad INTERFACE bsm crashpad_mig_output)
  unset(bsm CACHE)
endif()
