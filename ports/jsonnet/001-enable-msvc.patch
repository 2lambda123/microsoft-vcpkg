diff --git a/CMakeLists.txt b/CMakeLists.txt
index 385ea82..ebd12b6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -2,6 +2,8 @@
 cmake_minimum_required(VERSION 2.8.7)
 project(jsonnet C CXX)
 
+add_definitions(-D_CRT_SECURE_NO_WARNINGS)
+
 include(ExternalProject)
 include(GNUInstallDirs)
 
@@ -33,6 +35,7 @@ set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${GLOBAL_OUTPUT_PATH})
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${GLOBAL_OUTPUT_PATH})
 
 # Compiler flags.
+if (0)
 if (${CMAKE_CXX_COMPILER_ID} MATCHES "Clang" OR
         ${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
     set(OPT "-O3")
@@ -42,7 +45,7 @@ else()
     # TODO: Windows support.
     message(FATAL_ERROR "Compiler ${CMAKE_CXX_COMPILER_ID} not supported")
 endif()
-
+endif()
 set(CMAKE_CXX_STANDARD 11)
 
 
diff --git a/cmd/CMakeLists.txt b/cmd/CMakeLists.txt
index c032f02..d80d2a0 100644
--- a/cmd/CMakeLists.txt
+++ b/cmd/CMakeLists.txt
@@ -13,5 +13,5 @@ if (BUILD_JSONNETFMT OR BUILD_TESTS)
     add_dependencies(jsonnetfmt libjsonnet_for_binaries)
     target_link_libraries(jsonnetfmt libjsonnet_for_binaries)
 
-	install(TARGETS jsonnetfmt DESTINATION "${CMAKE_INSTALL_BINDIR}")
+	install(TARGETS jsonnetfmt DESTINATION tools/jsonnet)
 endif()
diff --git a/core/CMakeLists.txt b/core/CMakeLists.txt
index e8ad830..83a95f4 100644
--- a/core/CMakeLists.txt
+++ b/core/CMakeLists.txt
@@ -28,7 +28,7 @@ set(LIBJSONNET_SOURCE
     string_utils.cpp
     vm.cpp)
 
-add_library(libjsonnet SHARED ${LIBJSONNET_HEADERS} ${LIBJSONNET_SOURCE})
+add_library(libjsonnet ${LIBJSONNET_HEADERS} ${LIBJSONNET_SOURCE})
 add_dependencies(libjsonnet md5 stdlib)
 target_link_libraries(libjsonnet md5 nlohmann_json::nlohmann_json)
 
@@ -46,7 +46,7 @@ set_target_properties(libjsonnet PROPERTIES OUTPUT_NAME jsonnet
 	PUBLIC_HEADER "${LIB_HEADER}")
 install(TARGETS libjsonnet
 	LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-	ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
+	ARCHIVE DESTINATION "${CMAKE_INSTALL_BINDIR}"
 	PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
 target_include_directories(libjsonnet INTERFACE
   $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>)
diff --git a/stdlib/CMakeLists.txt b/stdlib/CMakeLists.txt
index a481d9f..95bfd71 100644
--- a/stdlib/CMakeLists.txt
+++ b/stdlib/CMakeLists.txt
@@ -1,15 +1,15 @@
 # Utility to convert file to a list of integeters.
 
 add_executable(to_c_array to_c_array.cpp)
-
+
 # Custom command that will only build stdlib when it changes.
 add_custom_command(
-	OUTPUT ${PROJECT_SOURCE_DIR}/core/std.jsonnet.h
+	OUTPUT ${CMAKE_BINARY_DIR}/core/std.jsonnet.h
 	COMMAND ${GLOBAL_OUTPUT_PATH}/to_c_array
 			    ${PROJECT_SOURCE_DIR}/stdlib/std.jsonnet
-					${PROJECT_SOURCE_DIR}/core/std.jsonnet.h
+					${CMAKE_BINARY_DIR}/core/std.jsonnet.h
 	DEPENDS to_c_array std.jsonnet)
 
 # Standard library build target that libjsonnet can depend on.
 add_custom_target(stdlib ALL
-	DEPENDS ${PROJECT_SOURCE_DIR}/core/std.jsonnet.h)
+	DEPENDS ${CMAKE_BINARY_DIR}/core/std.jsonnet.h)
\ No newline at end of file
