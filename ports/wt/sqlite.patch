diff --git a/cmake/FindSqlite3.cmake b/cmake/FindSqlite3.cmake
index bc5dfa8d..d8a1c743 100644
--- a/cmake/FindSqlite3.cmake	
+++ b/cmake/FindSqlite3.cmake
@@ -15,60 +15,7 @@
 #
 # Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler
 
-IF( SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY_RELEASE AND SQLITE3_LIBRARY_DEBUG )
-    SET(SQLITE3_FIND_QUIETLY TRUE)
-ENDIF( SQLITE3_INCLUDE_DIR AND SQLITE3_LIBRARY_RELEASE AND SQLITE3_LIBRARY_DEBUG )
-
-FIND_PATH(SQLITE3_INCLUDE_DIR
-    sqlite3.h
-  PATHS
-    ${SQLITE3_PREFIX}/include
-    /usr/include
-    /usr/local/include
-)
-
-FIND_LIBRARY(SQLITE3_LIBRARY_RELEASE
-  NAMES
-    sqlite3
-  PATHS
-    ${SQLITE3_PREFIX}/lib
-)
-
-FIND_LIBRARY(SQLITE3_LIBRARY_DEBUG
-  NAMES
-    sqlite3 
-  HINTS
-    ${SQLITE3_PREFIX}/lib/debug/usr/lib )
-
-IF( SQLITE3_LIBRARY_RELEASE OR SQLITE3_LIBRARY_DEBUG AND SQLITE3_INCLUDE_DIR )
-	SET( SQLITE3_FOUND TRUE )
-ENDIF( SQLITE3_LIBRARY_RELEASE OR SQLITE3_LIBRARY_DEBUG AND SQLITE3_INCLUDE_DIR )
-
-IF( SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE )
-	# if the generator supports configuration types then set
-	# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
-	IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
-		SET( SQLITE3_LIBRARIES optimized ${SQLITE3_LIBRARY_RELEASE} debug ${SQLITE3_LIBRARY_DEBUG} )
-	ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
-    # if there are no configuration types and CMAKE_BUILD_TYPE has no value
-    # then just use the release libraries
-		SET( SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_RELEASE} )
-	ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
-ELSEIF( SQLITE3_LIBRARY_RELEASE )
-	SET( SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_RELEASE} )
-ELSE( SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE )
-	SET( SQLITE3_LIBRARIES ${SQLITE3_LIBRARY_DEBUG} )
-ENDIF( SQLITE3_LIBRARY_DEBUG AND SQLITE3_LIBRARY_RELEASE )
-
-IF( SQLITE3_FOUND )
-	IF( NOT SQLITE3_FIND_QUIETLY )
-		MESSAGE( STATUS "Found Sqlite3 header file in ${SQLITE3_INCLUDE_DIR}")
-		MESSAGE( STATUS "Found Sqlite3 libraries: ${SQLITE3_LIBRARIES}")
-	ENDIF( NOT SQLITE3_FIND_QUIETLY )
-ELSE(SQLITE3_FOUND)
-	IF( SQLITE3_FIND_REQUIRED)
-		MESSAGE( FATAL_ERROR "Could not find Sqlite3" )
-	ELSE( SQLITE3_FIND_REQUIRED)
-		MESSAGE( STATUS "Optional package Sqlite3 was not found" )
-	ENDIF( SQLITE3_FIND_REQUIRED)
-ENDIF(SQLITE3_FOUND)
+find_package(SQlite3 CONFIG REQUIRED)
+set(SQLITE3_INCLUDE_DIR SQLite3_INCLUDE_DIRS)
+set(SQLITE3_LIBRARIES sqlite3)
+set(SQLITE3_FOUND SQLite3_FOUND)
\ No newline at end of file
