diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5ecd280..1a8367f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -211,7 +211,11 @@ target_link_libraries(
 # list(APPEND CMAKE_MODULE_PATH "<path_to_s2geometry_dir>/third_party/cmake")
 # add_subdirectory(<path_to_s2geometry_dir> s2geometry)
 # target_link_libraries(<target_name> s2)
-target_include_directories(s2 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)
+target_include_directories(s2 PUBLIC 
+  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
+$<INSTALL_INTERFACE:include>
+)
+
 
 # We don't need to install all headers, only those
 # transitively included by s2 headers we are exporting.
@@ -407,7 +411,17 @@ install(FILES src/s2/util/math/mathutil.h
 install(FILES src/s2/util/units/length-units.h
               src/s2/util/units/physical-units.h
         DESTINATION include/s2/util/units)
-install(TARGETS s2 s2testing DESTINATION lib)
+ install(TARGETS s2 s2testing
+         RUNTIME DESTINATION bin
+         ARCHIVE DESTINATION lib
+         LIBRARY DESTINATION lib)
+install(TARGETS s2 
+        EXPORT s2Targets
+        )
+install(EXPORT s2Targets
+  FILE s2Targets.cmake
+  DESTINATION share/s2/
+)
 
 message("GTEST_ROOT: ${GTEST_ROOT}")
 if (GTEST_ROOT)
@@ -534,3 +548,17 @@ endif()
 if (${SWIG_FOUND} AND ${PYTHONLIBS_FOUND})
   add_subdirectory("src/python" python)
 endif()
+
+
+include(CMakePackageConfigHelpers)
+# generate the config file that is includes the exports
+configure_package_config_file(${CMAKE_CURRENT_SOURCE_DIR}/Config.cmake.in
+  "${CMAKE_CURRENT_BINARY_DIR}/s2Config.cmake"
+  INSTALL_DESTINATION "share/s2/"
+  NO_SET_AND_CHECK_MACRO
+  NO_CHECK_REQUIRED_COMPONENTS_MACRO
+  )
+  install(FILES
+  ${CMAKE_CURRENT_BINARY_DIR}/s2Config.cmake
+  DESTINATION "share/s2/"
+  )
diff --git a/Config.cmake.in b/Config.cmake.in
new file mode 100644
index 0000000..ac09b2d
--- /dev/null
+++ b/Config.cmake.in
@@ -0,0 +1,3 @@
+@PACKAGE_INIT@
+
+include ( "${CMAKE_CURRENT_LIST_DIR}/s2Targets.cmake" )
