diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8af71b169..0a1b9fbf4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -723,70 +723,79 @@ if(SUPPORT_X11)
        message(FATAL_ERROR "X11 support currently requires GLX (set OPENGL_glx_LIBRARY and OpenGL_GLX_FOUND).")
     endif()
 
-    check_library_exists(Xcursor XcursorImageCreate "" CAN_XCURSOR)
+    if(TARGET X11::Xcursor)
+        set(CAN_XCURSOR ON)
+    endif()
     if(CAN_XCURSOR)
         set(ALLEGRO_XWINDOWS_WITH_XCURSOR 1)
-        find_library(XCURSOR_LIB "Xcursor")
+        set(XCURSOR_LIB "X11::Xcursor")
         list(APPEND X11_LIBRARIES "${XCURSOR_LIB}")
     else(CAN_XCURSOR)
         message(FATAL_ERROR "X11 support requires Xcursor library.")
     endif(CAN_XCURSOR)
 
-    check_library_exists(Xpm XpmCreatePixmapFromData "" CAN_XPM)
+    if(TARGET X11::Xpm)
+        set(CAN_XPM ON)
+    endif()
     if(CAN_XPM)
         set(ALLEGRO_XWINDOWS_WITH_XPM 1)
-        find_library(XPM_LIB "Xpm")
+        set(XPM_LIB "X11::Xpm")
         list(APPEND X11_LIBRARIES "${XPM_LIB}")
     endif(CAN_XPM)
 
-    check_include_file("X11/extensions/XInput2.h" CAN_XINPUT2)
-    run_c_compile_test("
-        #include <X11/extensions/XInput2.h>
-        int main(void) { (void)XI_TouchBegin; return 0; }"
-        XINPUT2_COMPILES
-    )
+    if(TARGET X11::Xi)
+        set(CAN_XINPUT2 ON)
+    endif()
     if(CAN_XINPUT2 AND XINPUT2_COMPILES)
-        list(APPEND X11_LIBRARIES "Xi")
+        list(APPEND X11_LIBRARIES "X11:Xi")
         set(ALLEGRO_XWINDOWS_WITH_XINPUT2 1)
     else()
         message("XInput2 library version 2.2 or higher not found, disabling touch support.")
     endif()
 
     if(WANT_X11_XF86VIDMODE)
-        check_include_file("X11/extensions/xf86vmode.h" HAVE_XF86VIDMODE_H)
-        check_library_exists(Xxf86vm XF86VidModeQueryExtension "" CAN_XF86VIDMODE)
+        if(TARGET X11::Xxf86vm)
+            set(CAN_XF86VIDMODE ON)
+            set(HAVE_XF86VIDMODE_H ON)
+        endif()
         if(CAN_XF86VIDMODE AND HAVE_XF86VIDMODE_H)
             set(ALLEGRO_XWINDOWS_WITH_XF86VIDMODE 1)
-            list(APPEND X11_LIBRARIES "Xxf86vm")
+            list(APPEND X11_LIBRARIES "X11::Xxf86vm")
         endif()
     endif(WANT_X11_XF86VIDMODE)
 
     if(WANT_X11_XINERAMA)
-        check_include_file("X11/extensions/Xinerama.h" HAVE_XINERAMA_H)
-        check_library_exists(Xinerama XineramaQueryExtension "" CAN_XINERAMA)
+        if(TARGET X11::Xinerama)
+            set(CAN_XINERAMA ON)
+            set(HAVE_XINERAMA_H ON)
+        endif()
         if(CAN_XINERAMA AND HAVE_XINERAMA_H)
             set(ALLEGRO_XWINDOWS_WITH_XINERAMA 1)
-            find_library(XINERAMA_LIB "Xinerama")
+            set(XINERAMA_LIB "X11::Xinerama")
             list(APPEND X11_LIBRARIES "${XINERAMA_LIB}")
         endif()
     endif(WANT_X11_XINERAMA)
 
     if(WANT_X11_XRANDR)
-        check_include_file("X11/extensions/Xrandr.h" HAVE_XRANDR_H)
-        check_library_exists(Xrandr XRRQueryExtension "" CAN_XRANDR)
+        if(TARGET X11::Xinerama)
+            set(CAN_XRANDR ON)
+            set(HAVE_XRANDR_H ON)
+        endif()
         if(CAN_XRANDR AND HAVE_XRANDR_H)
             set(ALLEGRO_XWINDOWS_WITH_XRANDR 1)
-            find_library(XRANDR_LIB "Xrandr")
+            set(XRANDR_LIB "X11::Xrandr")
             list(APPEND X11_LIBRARIES "${XRANDR_LIB}")
         endif()
     endif(WANT_X11_XRANDR)
 
     if(WANT_X11_XSCREENSAVER)
-        check_include_file("X11/extensions/scrnsaver.h" HAVE_XSCREENSAVER_H)
-        check_library_exists(Xss XScreenSaverQueryExtension "" CAN_XSCREENSAVER)
+        if(TARGET X11::Xss)
+            set(CAN_XSCREENSAVER ON)
+            set(HAVE_XSCREENSAVER_H ON)
+        endif()
         if(CAN_XSCREENSAVER AND HAVE_XSCREENSAVER_H)
             set(ALLEGRO_XWINDOWS_WITH_XSCREENSAVER 1)
-            find_library(XSCREENSAVER_LIB "Xss")
+            set(XSCREENSAVER_LIB "X11::Xss")
             list(APPEND X11_LIBRARIES "${XSCREENSAVER_LIB}")
         endif()
     endif(WANT_X11_XSCREENSAVER)
