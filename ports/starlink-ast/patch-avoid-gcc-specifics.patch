diff --git a/src/fitstable.c b/src/fitstable.c
index 606289b..12f77c1 100644
--- a/src/fitstable.c
+++ b/src/fitstable.c
@@ -1399,13 +1399,13 @@ f     AST_COLUMNNULL functiom.
 /* Append the right number of nulls to the returned array. */
          for( iel = 0; iel < nel; iel++ ) {
             memcpy( pout, pnull, nb );
-            pout += nb;
+            pout = (char*)pout + nb;
          }
 
 /* If the cell was found in the table, just increment the pointer to the next
    returned value. */
       } else {
-         pout += nbv;
+         pout = (char*)pout + nbv;
       }
    }
 
@@ -2054,7 +2054,7 @@ f        The global status.
       }
 
 /* Increment the pointer to the next input value. */
-      pin += nbv;
+      pin = (char*)pin + nbv;
    }
 
 /* Remove any remaining cells already present in this column. */
diff --git a/src/specframe.c b/src/specframe.c
index de592c5..5697e46 100644
--- a/src/specframe.c
+++ b/src/specframe.c
@@ -6124,7 +6124,7 @@ astMAKE_GET(SpecFrame,SourceVRF,AstStdOfRestType,AST__BADSOR,(
 /* When clearing SourceVRF, convert the SourceVel value to heliocentric
   (but only if set)*/
 astMAKE_CLEAR(SpecFrame,SourceVRF,sourcevrf,((astTestSourceVel( this )?
-             (void)(astSetSourceVel( this, ConvertSourceVel( this, AST__HLSOR,
+             (void*)(astSetSourceVel( this, ConvertSourceVel( this, AST__HLSOR,
                     astGetSourceSys( this ), status ) ),NULL):
              NULL),AST__BADSOR))
 
@@ -6134,7 +6134,7 @@ only if set)*/
 astMAKE_SET(SpecFrame,SourceVRF,AstStdOfRestType,sourcevrf,(
             ( ( value >= FIRST_SOR ) && ( value <= LAST_SOR ) && value != AST__SCSOR ) ?
                  (astTestSourceVel( this )?
-                 (void)(astSetSourceVel( this,ConvertSourceVel(this,value,astGetSourceSys( this ), status )),NULL):
+                 (void*)(astSetSourceVel( this,ConvertSourceVel(this,value,astGetSourceSys( this ), status )),NULL):
                  NULL), value:( astError( AST__ATTIN, "%s(%s): Bad value (%d) "
                              "given for SourceVRF attribute.", status,
                              "astSetSourceVRF", astGetClass( this ), (int) value ),
@@ -6192,7 +6192,7 @@ astMAKE_GET(SpecFrame,SourceSys,AstSystemType,AST__BADSYSTEM,(
 /* When clearing SourceSys, convert the SourceVel value to relativistic
    velocity (but only if set) */
 astMAKE_CLEAR(SpecFrame,SourceSys,sourcesys,((astTestSourceVel( this )?
-(void)(astSetSourceVel( this, ConvertSourceVel( this, astGetSourceVRF( this ),
+(void*)(astSetSourceVel( this, ConvertSourceVel( this, astGetSourceVRF( this ),
                                          AST__VREL, status ) ),NULL):NULL),AST__BADSYSTEM))
 
 /* Validate the SourceSys value being set and report an error if necessary.
@@ -6203,7 +6203,7 @@ astMAKE_SET(SpecFrame,SourceSys,AstSystemType,sourcesys,(
               ( value == AST__VRADIO ) || ( value == AST__REDSHIFT ) ||
               ( value == AST__VOPTICAL ) ) ?
               (astTestSourceVel( this )?
-               (void)(astSetSourceVel( this, ConvertSourceVel( this, astGetSourceVRF( this ),
+               (void*)(astSetSourceVel( this, ConvertSourceVel( this, astGetSourceVRF( this ),
                                                         value, status )),NULL):NULL),
                                                         value:
                  ( astError( AST__ATTIN, "%s(%s): Bad value (%d) "
