diff --git a/third_party/aws/aws-checksums.bazel b/third_party/aws/aws-checksums.bazel
--- a/third_party/aws/aws-checksums.bazel
+++ b/third_party/aws/aws-checksums.bazel
@@ -7,6 +7,13 @@
 
 exports_files(["LICENSE"])
 
+load("@bazel_skylib//lib:selects.bzl", "selects")
+
+selects.config_setting_group(
+    name = "is_linux_debug",
+    match_all = ["@org_tensorflow//tensorflow:linux_x86_64", "@org_tensorflow//tensorflow:debug"],
+)
+
 cc_library(
     name = "aws-checksums",
     srcs = select({
@@ -27,4 +34,10 @@
     deps = [
         "@aws-c-common",
     ],
+    defines = select({
+        ":is_linux_debug": [
+            "DEBUG_BUILD"
+        ],
+        "//conditions:default": [],
+    }),
 )

diff --git a/tensorflow/core/kernels/data/experimental/io_ops.h b/tensorflow/core/kernels/data/experimental/io_ops.h
--- a/tensorflow/core/kernels/data/experimental/io_ops.h
+++ b/tensorflow/core/kernels/data/experimental/io_ops.h
@@ -26,23 +26,28 @@
 namespace data {
 namespace experimental {

+constexpr const char* const kCompression = "compression";
+constexpr const char* const kPath = "path";
+constexpr const char* const kShardFunc = "shard_func";
+constexpr const char* const kShardFuncOtherArgs = "shard_func_other_args";
+constexpr const char* const kUseShardFunc = "use_shard_func";
+constexpr const char* const kDatasetType = "Load";
+constexpr const char* const kOutputTypes = "output_types";
+constexpr const char* const kOutputShapes = "output_shapes";
+constexpr const char* const kReaderFunc = "reader_func";
+constexpr const char* const kReaderFuncOtherArgs = "reader_func_other_args";
+constexpr const char* const kReaderFuncTarguments = "Treader_func_args";
+
+constexpr const int kFileFormatVersion = 2;
+
 // An operation that can save a dataset to one or more files.
 class SaveDatasetOp : public HybridAsyncOpKernel {
  public:
-  static constexpr const char* const kCompression = "compression";
-  static constexpr const char* const kPath = "path";
-  static constexpr const char* const kShardFunc = "shard_func";
-  static constexpr const char* const kShardFuncOtherArgs =
-      "shard_func_other_args";
-  static constexpr const char* const kUseShardFunc = "use_shard_func";
-
   explicit SaveDatasetOp(OpKernelConstruction* ctx);

   Status DoCompute(OpKernelContext* ctx) override;

  private:
-  static constexpr const int kFileFormatVersion = 2;
-
   Status ConsumeElement();

   Status GetShardIndex(IteratorContext* ctx,
@@ -65,17 +70,6 @@
 // An operation that can load a dataset from one or more files.
 class LoadDatasetOp : public DatasetOpKernel {
  public:
-  static constexpr const char* const kCompression = "compression";
-  static constexpr const char* const kDatasetType = "Load";
-  static constexpr const char* const kOutputTypes = "output_types";
-  static constexpr const char* const kOutputShapes = "output_shapes";
-  static constexpr const char* const kPath = "path";
-  static constexpr const char* const kReaderFunc = "reader_func";
-  static constexpr const char* const kReaderFuncOtherArgs =
-      "reader_func_other_args";
-  static constexpr const char* const kReaderFuncTarguments =
-      "Treader_func_args";
-
   explicit LoadDatasetOp(OpKernelConstruction* ctx);

   void MakeDataset(OpKernelContext* ctx, DatasetBase** output) override;

diff --git a/tensorflow/core/kernels/data/experimental/snapshot_dataset_op.h b/tensorflow/core/kernels/data/experimental/snapshot_dataset_op.h
--- a/tensorflow/core/kernels/data/experimental/snapshot_dataset_op.h
+++ b/tensorflow/core/kernels/data/experimental/snapshot_dataset_op.h
@@ -38,22 +38,21 @@
 namespace data {
 namespace experimental {

+constexpr const char* const kDatasetType = "Snapshot";
+constexpr const char* const kOutputTypes = "output_types";
+constexpr const char* const kOutputShapes = "output_shapes";
+constexpr const char* const kCompression = "compression";
+constexpr const char* const kReaderFunc = "reader_func";
+constexpr const char* const kShardFunc = "shard_func";
+constexpr const char* const kReaderFuncOtherArgs = "reader_func_other_args";
+constexpr const char* const kShardFuncOtherArgs = "shard_func_other_args";
+constexpr const char* const kReaderFuncTarguments = "Treader_func_args";
+constexpr const char* const kShardFuncTarguments = "Tshard_func_args";
+
+constexpr const int kFileFormatVersion = 2;
+
 class SnapshotDatasetV2Op : public UnaryDatasetOpKernel {
  public:
-  static constexpr const char* const kDatasetType = "Snapshot";
-  static constexpr const char* const kOutputTypes = "output_types";
-  static constexpr const char* const kOutputShapes = "output_shapes";
-  static constexpr const char* const kCompression = "compression";
-  static constexpr const char* const kReaderFunc = "reader_func";
-  static constexpr const char* const kShardFunc = "shard_func";
-  static constexpr const char* const kReaderFuncOtherArgs =
-      "reader_func_other_args";
-  static constexpr const char* const kShardFuncOtherArgs =
-      "shard_func_other_args";
-  static constexpr const char* const kReaderFuncTarguments =
-      "Treader_func_args";
-  static constexpr const char* const kShardFuncTarguments = "Tshard_func_args";
-
   explicit SnapshotDatasetV2Op(OpKernelConstruction* ctx);

  protected:
@@ -61,8 +60,6 @@
                    DatasetBase** output) override;

  private:
-  static constexpr const int kFileFormatVersion = 2;
-
   class Dataset;

   const int graph_def_version_;
