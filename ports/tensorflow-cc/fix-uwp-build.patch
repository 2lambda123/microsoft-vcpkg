diff --git a/.bazelrc b/.bazelrc
--- a/.bazelrc
+++ b/.bazelrc
@@ -318,7 +318,9 @@
 build:windows --verbose_failures

 # On windows, we never cross compile
-build:windows --distinct_host_configuration=false
+build:windows --distinct_host_configuration=true
+build:windows --host_copt=-UWINAPI_FAMILY
+build:windows --host_linkopt=/APPCONTAINER:NO

 # Suppress all warning messages.
 build:short_logs --output_filter=DONT_MATCH_ANYTHING


diff --git a/third_party/curl.BUILD b/third_party/curl.BUILD
--- a/third_party/curl.BUILD
+++ b/third_party/curl.BUILD
@@ -472,9 +472,7 @@
         "#  define CURL_DISABLE_TELNET 1",
         "#  define CURL_DISABLE_TFTP 1",
         "#  define CURL_PULL_WS2TCPIP_H 1",
-        "#  define USE_WINDOWS_SSPI 1",
         "#  define USE_WIN32_IDN 1",
-        "#  define USE_SCHANNEL 1",
         "#  define WANT_IDN_PROTOTYPES 1",
         "#elif defined(__APPLE__)",
         "#  define HAVE_FSETXATTR_6 1",


diff --git a/third_party/sqlite.BUILD b/third_party/sqlite.BUILD
--- a/third_party/sqlite.BUILD
+++ b/third_party/sqlite.BUILD
@@ -13,6 +13,7 @@
 ] + select({
     "@org_tensorflow//tensorflow:windows": [
         "-DSQLITE_MAX_TRIGGER_DEPTH=100",
+        "-DSQLITE_OS_WINRT=1",
     ],
     "@org_tensorflow//tensorflow:macos": [
         "-Os",


diff --git a/third_party/aws/workspace.bzl b/third_party/aws/workspace.bzl
--- a/third_party/aws/workspace.bzl
+++ b/third_party/aws/workspace.bzl
@@ -15,6 +15,7 @@
         sha256 = "758174f9788fed6cc1e266bcecb20bf738bd5ef1c3d646131c9ed15c2d6c5720",
         strip_prefix = "aws-sdk-cpp-1.7.336",
         build_file = "//third_party/aws:BUILD.bazel",
+        patch_file = "//third_party/aws:FileSystem.patch",
     )

     third_party_http_archive(


diff --git a/third_party/aws/FileSystem.patch b/third_party/aws/FileSystem.patch
new file mode 100644
--- /dev/null
+++ b/third_party/aws/FileSystem.patch
@@ -0,0 +1,10 @@
+diff --git a/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp b/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
+--- a/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
++++ b/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
+@@ -20,6 +20,7 @@
+ #include <cassert>
+ #include <iostream>
+ #include <Userenv.h>
++#include <Windows.h>
+
+ #pragma warning( disable : 4996)
+


diff --git a/third_party/aws/aws-checksums.bazel b/third_party/aws/aws-checksums.bazel
--- a/third_party/aws/aws-checksums.bazel
+++ b/third_party/aws/aws-checksums.bazel
@@ -26,5 +26,6 @@
     ],
     deps = [
         "@aws-c-common",
+        "@patched_includes//:headers",
     ],
 )


diff --git a/third_party/icu/BUILD.bazel b/third_party/icu/BUILD.bazel
--- a/third_party/icu/BUILD.bazel
+++ b/third_party/icu/BUILD.bazel
@@ -45,6 +45,7 @@
     copts = [
         "-DU_COMMON_IMPLEMENTATION",
         "-DU_HAVE_STD_ATOMICS",  # TODO(gunan): Remove when TF is on ICU 64+.
+        "-DU_PLATFORM_HAS_WINUWP_API=1",
     ] + select({
         ":android": [
             "-fdata-sections",


diff --git a/third_party/nasm/BUILD.bazel b/third_party/nasm/BUILD.bazel
--- a/third_party/nasm/BUILD.bazel
+++ b/third_party/nasm/BUILD.bazel
@@ -158,6 +158,7 @@
         "x86",
     ],
     visibility = ["@libjpeg_turbo//:__pkg__"],
+    deps = ["@patched_includes//:headers"],
 )

 config_setting(


diff --git a/third_party/protobuf/protobuf.patch b/third_party/protobuf/protobuf.patch
--- a/third_party/protobuf/protobuf.patch
+++ b/third_party/protobuf/protobuf.patch
@@ -11,14 +11,16 @@

  ################################################################################
  # Protobuf Runtime Library
-@@ -143,6 +143,7 @@ cc_library(
+@@ -143,7 +143,9 @@ cc_library(
      copts = COPTS,
      includes = ["src/"],
      linkopts = LINK_OPTS,
 +    alwayslink = 1,
      visibility = ["//visibility:public"],
++    deps = ["@patched_includes//:headers"],
  )
-
+
+ PROTOBUF_DEPS = select({
 @@ -213,6 +214,7 @@ cc_library(
      copts = COPTS,
      includes = ["src/"],


diff --git a/third_party/systemlibs/nsync.BUILD b/third_party/systemlibs/nsync.BUILD
--- a/third_party/systemlibs/nsync.BUILD
+++ b/third_party/systemlibs/nsync.BUILD
@@ -20,4 +20,5 @@
     name = "nsync_cpp",
     linkopts = ["-lnsync_cpp"],
     visibility = ["//visibility:public"],
+    deps = ["@patched_includes//:headers"],
 )


diff --git a/third_party/grpc/BUILD b/third_party/grpc/BUILD
--- a/third_party/grpc/BUILD
+++ b/third_party/grpc/BUILD
@@ -0,0 +1,19 @@
+grpc_cc_library(
+    name = "grpc++",
+    deps = ["@patched_includes//:headers"],
+)
+
+grpc_cc_library(
+    name = "alts_util",
+    deps = ["@patched_includes//:headers"],
+)
+
+grpc_cc_library(
+    name = "alts_frame_protector",
+    deps = ["@patched_includes//:headers"],
+)
+
+grpc_cc_library(
+    name = "grpc_server_backward_compatibility",
+    deps = ["@patched_includes//:headers"],
+)


diff --git a/tensorflow/BUILD b/tensorflow/BUILD
--- a/tensorflow/BUILD
+++ b/tensorflow/BUILD
@@ -688,6 +688,7 @@
         "//tensorflow/core/profiler:profiler_impl",
         "//tensorflow/stream_executor:stream_executor_impl",
         "//tensorflow:tf_framework_version_script.lds",
+        "@patched_includes//:headers",
     ] + tf_additional_binary_deps(),
 )
 
@@ -748,6 +749,7 @@
         "//tensorflow/c/eager:c_api_experimental",
         "//tensorflow/core:distributed_tensorflow_dependencies",
         "//tensorflow/core:tensorflow",
+        "@patched_includes//:headers",
     ],
 )
 
@@ -782,6 +784,7 @@
         "//tensorflow/cc:scope",
         "//tensorflow/cc/profiler",
         "//tensorflow/core:tensorflow",
+        "@patched_includes//:headers",
     ] + if_ngraph(["@ngraph_tf//:ngraph_tf"]),
 )
 


diff --git a/tensorflow/compiler/jit/BUILD b/tensorflow/compiler/jit/BUILD
--- a/tensorflow/compiler/jit/BUILD
+++ b/tensorflow/compiler/jit/BUILD
@@ -296,6 +296,7 @@
         "defs.h",
     ],
     visibility = [":friends"],
+    deps = ["@patched_includes//:headers"],
 )

 # Internal targets below this point.


diff --git a/tensorflow/core/util/BUILD b/tensorflow/core/util/BUILD
--- a/tensorflow/core/util/BUILD
+++ b/tensorflow/core/util/BUILD
@@ -404,6 +404,7 @@
         "//tensorflow/python:__pkg__",
     ],
     alwayslink = 1,
+    deps = ["@patched_includes//:headers"],
 )

 tf_cuda_library(


diff --git a/third_party/com_google_absl.BUILD b/third_party/com_google_absl.BUILD
--- a/third_party/com_google_absl.BUILD
+++ b/third_party/com_google_absl.BUILD
@@ -3,3 +3,8 @@
 licenses(["notice"])  # Apache

 exports_files(["LICENSE"])
+
+cc_library(
+    name = "strings",
+    deps = ["@patched_includes//:headers"],
+)


diff --git a/third_party/systemlibs/png.BUILD b/third_party/systemlibs/png.BUILD
--- a/third_party/systemlibs/png.BUILD
+++ b/third_party/systemlibs/png.BUILD
@@ -9,4 +9,5 @@
     name = "png",
     linkopts = ["-lpng"],
     visibility = ["//visibility:public"],
+    deps = ["@patched_includes//:headers"],
 )


diff --git a/third_party/systemlibs/double_conversion.BUILD b/third_party/systemlibs/double_conversion.BUILD
--- a/third_party/systemlibs/double_conversion.BUILD
+++ b/third_party/systemlibs/double_conversion.BUILD
@@ -9,4 +9,5 @@
     name = "double-conversion",
     linkopts = ["-ldouble-conversion"],
     visibility = ["//visibility:public"],
++    deps = ["@patched_includes//:headers"],
 )
