diff --git a/cmake/install_macros.cmake b/cmake/install_macros.cmake
index baf49cd5..4d175ec0 100644
--- a/cmake/install_macros.cmake
+++ b/cmake/install_macros.cmake
@@ -97,7 +97,7 @@ ENDFUNCTION()
 FUNCTION(MYSQL_INSTALL_TARGET target_arg)
   CMAKE_PARSE_ARGUMENTS(ARG
     "NAMELINK_SKIP"
-    "DESTINATION;COMPONENT"
+    "DESTINATION;COMPONENT;EXPORT"
     ""
     ${ARGN}
     )
@@ -113,10 +113,24 @@ FUNCTION(MYSQL_INSTALL_TARGET target_arg)
   IF(ARG_NAMELINK_SKIP)
     SET(LIBRARY_INSTALL_ARGS NAMELINK_SKIP)
   ENDIF()
+  if(ARG_EXPORT)
+    FILE(WRITE "${CMAKE_CURRENT_BINARY_DIR}/${ARG_EXPORT}-config.cmake"
+"include(CMakeFindDependencyMacro)
+find_dependency(ZLIB)
+find_dependency(OpenSSL)
+find_dependency(Threads)
+include(\"\${CMAKE_CURRENT_LIST_DIR}/${ARG_EXPORT}-targets.cmake\")
+")
+    install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${ARG_EXPORT}-config.cmake" DESTINATION "share/${ARG_EXPORT}")
+    install(EXPORT "${ARG_EXPORT}-targets" DESTINATION "share/${ARG_EXPORT}")
+    set(LIBRARY_EXPORT_ARGS EXPORT ${ARG_EXPORT}-targets)
+  endif()
   INSTALL(TARGETS ${target}
-    RUNTIME DESTINATION ${ARG_DESTINATION} ${COMP}
-    ARCHIVE DESTINATION ${ARG_DESTINATION} ${COMP}
-    LIBRARY DESTINATION ${ARG_DESTINATION} ${COMP} ${LIBRARY_INSTALL_ARGS})
+    ${LIBRARY_EXPORT_ARGS}
+    RUNTIME DESTINATION bin ${COMP}
+    ARCHIVE DESTINATION lib ${COMP}
+    LIBRARY DESTINATION lib ${COMP}
+    ${LIBRARY_INSTALL_ARGS})
   SET(INSTALL_LOCATION ${ARG_DESTINATION} )
   INSTALL_DEBUG_SYMBOLS(${target})
   SET(INSTALL_LOCATION)
diff --git a/cmake/libutils.cmake b/cmake/libutils.cmake
index a5333987..1414417d 100644
--- a/cmake/libutils.cmake
+++ b/cmake/libutils.cmake
@@ -385,8 +385,14 @@ MACRO(MERGE_LIBRARIES_SHARED TARGET_ARG)
     IF(ARG_NAMELINK_SKIP)
       SET(INSTALL_ARGS NAMELINK_SKIP)
     ENDIF()
+    if(INSTALL_STATIC_LIBRARIES)
+      set_target_properties(${TARGET} PROPERTIES EXCLUDE_FROM_ALL 1)
+    else()
+    TARGET_INCLUDE_DIRECTORIES(${TARGET} INTERFACE $<INSTALL_INTERFACE:include>)
     MYSQL_INSTALL_TARGET(${TARGET} DESTINATION "${DESTINATION}" ${COMP}
+      EXPORT unofficial-libmysql
       ${INSTALL_ARGS})
+    endif()
   ENDIF()
 
   IF(WIN32)
@@ -562,7 +568,10 @@ MACRO(MERGE_CONVENIENCE_LIBRARIES TARGET_ARG)
       SET(COMP COMPONENT ${ARG_COMPONENT})
     ENDIF()
     IF(INSTALL_STATIC_LIBRARIES)
-      MYSQL_INSTALL_TARGET(${TARGET} DESTINATION "${INSTALL_LIBDIR}" ${COMP})
+      TARGET_INCLUDE_DIRECTORIES(${TARGET} INTERFACE $<INSTALL_INTERFACE:include>)
+      MYSQL_INSTALL_TARGET(${TARGET} EXPORT unofficial-libmysql DESTINATION "${INSTALL_LIBDIR}" ${COMP})
+    else()
+      set_target_properties(${TARGET} PROPERTIES EXCLUDE_FROM_ALL 1)
     ENDIF()
   ENDIF()
 ENDMACRO(MERGE_CONVENIENCE_LIBRARIES)
diff --git a/libmysql/CMakeLists.txt b/libmysql/CMakeLists.txt
index 8e224532..9c30fe80 100644
--- a/libmysql/CMakeLists.txt
+++ b/libmysql/CMakeLists.txt
@@ -283,6 +283,14 @@ ENDIF()
 # LDAP authentication SASL client plug-in
 ADD_SUBDIRECTORY(authentication_ldap)
 
+IF (BUILD_SHARED_LIBS)
+  set(INSTALL_SHARED )
+  set(INSTALL_STATIC SKIP_INSTALL)
+ELSE()
+  set(INSTALL_SHARED SKIP_INSTALL)
+  set(INSTALL_STATIC )
+ENDIF()
+
 # FIDO authentication client plugin
 ADD_SUBDIRECTORY(authentication_fido)
 
@@ -293,7 +301,7 @@ ADD_SUBDIRECTORY(authentication_kerberos)
 ADD_SUBDIRECTORY(authentication_oci_client)
 
 # Merge several convenience libraries into one big mysqlclient
-MERGE_CONVENIENCE_LIBRARIES(mysqlclient ${LIBS_TO_MERGE}
+MERGE_CONVENIENCE_LIBRARIES(mysqlclient ${LIBS_TO_MERGE} ${INSTALL_STATIC}
   COMPONENT Development
   LINK_LIBRARIES ${LIBS_TO_LINK}
   )
@@ -385,6 +393,9 @@ ENDIF()
 #
 #  Basic application for testing linking against dynamic client library.
 #
+IF (NOT ENABLE_TESTING)
+  RETURN()
+endif()
 
 #
 # Generate a comma separated list of C API functions which is used
diff --git a/scripts/CMakeLists.txt b/scripts/CMakeLists.txt
index c4ef5694..84e7b578 100644
--- a/scripts/CMakeLists.txt
+++ b/scripts/CMakeLists.txt
@@ -347,13 +347,13 @@ MACRO(EXTRACT_LINK_LIBRARIES target var)
   STRING(REGEX REPLACE "^[ ]+" "" ${var} "${${var}}")
   STRING(REGEX REPLACE "[ ]+$" "" ${var} "${${var}}")
 ENDMACRO()
-
+IF (NOT BUILD_SHARED_LIBS)
 EXTRACT_LINK_LIBRARIES(mysqlclient CLIENT_LIBS)
-
-IF(MSVC)
+ENDIF()
+IF(MSVC AND NOT BUILD_SHARED_LIBS)
   GET_TARGET_PROPERTY(LIBMYSQL_OS_SHLIB_VERSION mysqlclient VERSION)
   GET_TARGET_PROPERTY(LIBMYSQL_OS_OUTPUT_NAME mysqlclient OUTPUT_NAME)
-ELSE()
+ELSEIF(BUILD_SHARED_LIBS)
   GET_TARGET_PROPERTY(LIBMYSQL_OS_SHLIB_VERSION libmysql VERSION)
   GET_TARGET_PROPERTY(LIBMYSQL_OS_OUTPUT_NAME libmysql OUTPUT_NAME)
 ENDIF()
