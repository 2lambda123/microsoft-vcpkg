diff --git a/cmake/boost.cmake b/cmake/boost.cmake
index cb96b53..b0fc957 100644
--- a/cmake/boost.cmake
+++ b/cmake/boost.cmake
@@ -282,7 +282,7 @@ IF(NOT BOOST_MAJOR_VERSION EQUAL 10)
   COULD_NOT_FIND_BOOST()
 ENDIF()
 
-IF(NOT BOOST_MINOR_VERSION EQUAL 67)
+IF(NOT BOOST_MINOR_VERSION EQUAL 67 AND NOT IGNORE_BOOST_VERSION)
   MESSAGE(WARNING "Boost minor version found is ${BOOST_MINOR_VERSION} "
     "we need 67"
     )
diff --git a/cmake/icu.cmake b/cmake/icu.cmake
index 14f6458..4c95300 100644
--- a/cmake/icu.cmake
+++ b/cmake/icu.cmake
@@ -38,6 +38,12 @@
 # install_root is either 'system' or is assumed to be a path.
 #
 MACRO (FIND_ICU install_root)
+  find_package(ICU REQUIRED COMPONENTS uc io dt in)
+  set(ICU_SYSTEM_LIBRARIES ICU::uc ICU::io ICU::dt ICU::in)
+  set(ICU_COMMON_DIR ${ICU_INCLUDE_DIR})
+  set(ICU_INCLUDE_DIRS ${ICU_INCLUDE_DIR})
+endmacro()
+macro (UNUSED_MACRO)
   IF("${install_root}" STREQUAL "system")
     SET(EXTRA_FIND_LIB_ARGS)
     SET(EXTRA_FIND_INC_ARGS)
diff --git a/cmake/lz4.cmake b/cmake/lz4.cmake
index 36c4bc0..8882058 100644
--- a/cmake/lz4.cmake
+++ b/cmake/lz4.cmake
@@ -25,7 +25,7 @@
 
 MACRO (FIND_SYSTEM_LZ4)
   FIND_PATH(PATH_TO_LZ4 NAMES lz4frame.h)
-  FIND_LIBRARY(LZ4_SYSTEM_LIBRARY NAMES lz4)
+  FIND_LIBRARY(LZ4_SYSTEM_LIBRARY NAMES lz4d lz4)
   IF (PATH_TO_LZ4 AND LZ4_SYSTEM_LIBRARY)
     SET(SYSTEM_LZ4_FOUND 1)
     INCLUDE_DIRECTORIES(SYSTEM ${PATH_TO_LZ4})
diff --git a/cmake/lzma.cmake b/cmake/lzma.cmake
index 887cf47..f9365dd 100644
--- a/cmake/lzma.cmake
+++ b/cmake/lzma.cmake
@@ -24,6 +24,12 @@
 # bundled is the default
 
 MACRO (FIND_SYSTEM_LZMA)
+  find_package(LibLZMA REQUIRED)
+  set(LZMA_INCLUDE_DIR ${LZMA_INCLUDE_DIRS})
+  set(LZMA_LIBRARY ${LZMA_LIBRARIES})
+  set(SYSTEM_LZMA_FOUND 1)
+endmacro()
+macro(UNUSED_MACRO)
   FIND_PATH(PATH_TO_LZMA NAMES lzma/lzma.h)
   FIND_LIBRARY(LZMA_SYSTEM_LIBRARY NAMES lzma)
   IF (PATH_TO_LZMA AND LZMA_SYSTEM_LIBRARY)
diff --git a/cmake/ssl.cmake b/cmake/ssl.cmake
index cf1d0d0..6b51759 100644
--- a/cmake/ssl.cmake
+++ b/cmake/ssl.cmake
@@ -151,6 +151,16 @@ ENDMACRO()
 # Provides the following configure options:
 # WITH_SSL=[yes|wolfssl|system|<path/to/custom/installation>]
 MACRO (MYSQL_CHECK_SSL)
+  find_package(OpenSSL REQUIRED)
+  set(OPENSSL_LIBRARY ${OPENSSL_SSL_LIBRARY} CACHE STRING "")
+  set(CRYPTO_LIBRARY ${OPENSSL_CRYPTO_LIBRARY} CACHE STRING "")
+  FIND_PROGRAM(OPENSSL_EXECUTABLE openssl
+        DOC "path to the openssl executable")
+  SET(SSL_DEFINES "-DHAVE_OPENSSL")
+  set(SSL_LIBRARIES ${OPENSSL_LIBRARIES})
+ENDMACRO()
+
+MACRO (MYSQL_CHECK_SSL_OLD)
 
   IF(NOT WITH_SSL)
     CHANGE_SSL_SETTINGS("system")
diff --git a/cmake/zlib.cmake b/cmake/zlib.cmake
index 26c56fe..e51fb1a 100644
--- a/cmake/zlib.cmake
+++ b/cmake/zlib.cmake
@@ -51,6 +51,12 @@ MACRO (MYSQL_CHECK_ZLIB_WITH_COMPRESS)
   IF(WITH_ZLIB STREQUAL "bundled")
     MYSQL_USE_BUNDLED_ZLIB()
   ELSE()
+    find_package(ZLIB REQUIRED)
+    set(ZLIB_LIBRARY ZLIB::ZLIB CACHE INTERNAL "System zlib library")
+  endif()
+endmacro()
+macro(UNUSED_MACRO)
+  if(1)
     SET(ZLIB_FIND_QUIETLY TRUE)
     INCLUDE(FindZLIB)
     IF(ZLIB_FOUND)
