--- /dev/null
+++ b/build-aux/dumpbin-to-nm.awk
@@ -0,0 +1,14 @@
+{last_section=section; section=$ 3};
+/^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};
+/Section length .*#relocs.*(pick any)/{hide[last_section]=1};
+/^ *Symbol name *: /{split($ 0,sn,":"); si=substr(sn[2],2)};
+/^ *Type *: code/{print "T",si,substr(si,length(prfx))};
+/^ *Type *: data/{print "I",si,substr(si,length(prfx))};
+$ 0!~/External *\|/{next};
+$ 0~/__local_stdio_printf_options/{next};
+/ 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};
+{if(hide[section]) next};
+{f="D"}; $ 0~/\(\).*\|/{f="T"};
+{split($ 0,a,/\||\r/); split(a[2],s)};
+s[1]~/^[@?]/{print f,s[1],s[1]; next};
+s[1]~prfx {split(s[1],t,"@"); print f,t[1],substr(t[1],length(prfx))}
--- /dev/null
+++ b/build-aux/msys-msvc-ar
@@ -0,0 +1,17 @@
+#!/bin/bash
+# 'ar' wrapper script using the MSVC tools from MSYS.
+
+set -e
+
+echo "# $0 $@"
+
+ar_flags="$1"
+shift
+
+ar_output="$1"
+shift
+
+export MSYS2_ARG_CONV_EXCL="/machine;/out;$MSYS2_ARG_CONV_EXCL"
+
+echo "lib /machine:$VSCMD_ARG_TGT_ARCH /out:$ar_output $@"
+lib /machine:$VSCMD_ARG_TGT_ARCH /out:"$ar_output" "$@"
--- /dev/null
+++ b/build-aux/msys-msvc-windres
@@ -0,0 +1,61 @@
+#!/bin/bash
+# 'windres' wrapper script using the MSVC tools from MSYS.
+
+set -e
+
+rc_cmd="rc"
+rc_input=""
+rc_output=""
+output_format="rc"
+
+echo "# $0 $@"
+
+while [ $# -gt 0 ]
+do
+	if [ "$1" = "-o" ]
+	then
+		shift
+		rc_output="$1"
+	elif [ "$1" = "-i" ]
+	then
+		shift
+		rc_input="$1"
+	elif [[ "$1" == "-D"* ]]
+	then
+		rc_cmd="$rc_cmd //d $(echo "$1" | sed -e 's/^-D//' -e 's/\\"/"/g')"
+	elif [[ "$1" == "--output-format="* ]]
+	then
+		output_format="$(echo "$1" | sed -e 's/^--output-format=//')"
+	else
+		rc_cmd="$rc_cmd $1"
+	fi
+	
+	shift
+done
+
+export MSYS2_ARG_CONV_EXCL="/fo;/MACHINE;/OUT;$MSYS2_ARG_CONV_EXCL"
+
+if [ "$output_format" = "res" ]
+then
+	rc_cmd="$rc_cmd /fo $rc_output $rc_input"
+	
+	echo "$rc_cmd"
+	$rc_cmd
+elif [ "$output_format" = "coff" ]
+then
+	cvtres_output="$rc_output"
+	rc_output="$(echo "$rc_output" | sed -e 's/\.o$//' -e 's/\.obj$//')"
+	
+	rc_cmd="$rc_cmd /fo $rc_output $rc_input"
+	
+	echo "$rc_cmd"
+	$rc_cmd
+	
+	cvtres_cmd="cvtres /MACHINE:$VSCMD_ARG_TGT_ARCH /OUT:$cvtres_output $rc_output"
+	
+	echo "$cvtres_cmd"
+	$cvtres_cmd
+else
+	echo "$0: Unsupported output format $output_format" 1>&2
+	exit 1
+fi
--- a/configure
+++ b/configure
@@ -10274,21 +10274,7 @@
     # D for any global variable and I for any imported variable.
     # Also find C++ and __fastcall symbols from MSVC++,
     # which start with @ or ?.
-    lt_cv_sys_global_symbol_pipe="$AWK '"\
-"     {last_section=section; section=\$ 3};"\
-"     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};"\
-"     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
-"     /^ *Symbol name *: /{split(\$ 0,sn,\":\"); si=substr(sn[2],2)};"\
-"     /^ *Type *: code/{print \"T\",si,substr(si,length(prfx))};"\
-"     /^ *Type *: data/{print \"I\",si,substr(si,length(prfx))};"\
-"     \$ 0!~/External *\|/{next};"\
-"     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
-"     {if(hide[section]) next};"\
-"     {f=\"D\"}; \$ 0~/\(\).*\|/{f=\"T\"};"\
-"     {split(\$ 0,a,/\||\r/); split(a[2],s)};"\
-"     s[1]~/^[@?]/{print f,s[1],s[1]; next};"\
-"     s[1]~prfx {split(s[1],t,\"@\"); print f,t[1],substr(t[1],length(prfx))}"\
-"     ' prfx=^$ac_symprfx"
+    lt_cv_sys_global_symbol_pipe="$AWK -f '$(realpath "$(dirname $0)")/build-aux/dumpbin-to-nm.awk' prfx=^$ac_symprfx"
   else
     lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
   fi
--- a/lib/Makefile.in
+++ b/lib/Makefile.in
@@ -5934,7 +5938,7 @@
 	            test -f $$sf || sf=$(srcdir)/$$sf; \
 	            of=`echo "$$f" | sed -e 's,^.*/,,' -e 's,\\.[^.]*$$,,'`.$(OBJEXT); \
 	            echo "$(COMPILE) -c $$sf" 1>&6; \
-	            $(COMPILE) -c $$sf || { rm -f config.h; exit 1; }; \
+	            $(COMPILE) -c $$sf 1>&6 || { rm -f config.h; exit 1; }; \
 	            sh ./exported.sh $$of 1>&5; \
 	            rm -f $$of `echo "$$of" | sed -e 's,\\.$(OBJEXT)$$,.lo,'`; \
 	            ;; \
