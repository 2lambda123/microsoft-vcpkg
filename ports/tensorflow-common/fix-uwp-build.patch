diff --git a/.bazelrc b/.bazelrc
--- a/.bazelrc
+++ b/.bazelrc
@@ -345,7 +345,9 @@
 build:windows --verbose_failures
 
 # On windows, we never cross compile
-build:windows --distinct_host_configuration=false
+build:windows --distinct_host_configuration=true
+build:windows --host_copt=-UWINAPI_FAMILY
+build:windows --host_linkopt=/APPCONTAINER:NO
 
 # Suppress all warning messages.
 build:short_logs --output_filter=DONT_MATCH_ANYTHING


diff --git a/third_party/curl.BUILD b/third_party/curl.BUILD
--- a/third_party/curl.BUILD
+++ b/third_party/curl.BUILD
@@ -472,9 +472,7 @@
         "#  define CURL_DISABLE_TELNET 1",
         "#  define CURL_DISABLE_TFTP 1",
         "#  define CURL_PULL_WS2TCPIP_H 1",
-        "#  define USE_WINDOWS_SSPI 1",
         "#  define USE_WIN32_IDN 1",
-        "#  define USE_SCHANNEL 1",
         "#  define WANT_IDN_PROTOTYPES 1",
         "#elif defined(__APPLE__)",
         "#  define HAVE_FSETXATTR_6 1",


diff --git a/third_party/sqlite.BUILD b/third_party/sqlite.BUILD
--- a/third_party/sqlite.BUILD
+++ b/third_party/sqlite.BUILD
@@ -13,6 +13,7 @@
 ] + select({
     "@org_tensorflow//tensorflow:windows": [
         "-DSQLITE_MAX_TRIGGER_DEPTH=100",
+        "-DSQLITE_OS_WINRT=1",
     ],
     "@org_tensorflow//tensorflow:macos": [
         "-Os",


diff --git a/third_party/aws/workspace.bzl b/third_party/aws/workspace.bzl
--- a/third_party/aws/workspace.bzl
+++ b/third_party/aws/workspace.bzl
@@ -15,6 +15,7 @@
         sha256 = "758174f9788fed6cc1e266bcecb20bf738bd5ef1c3d646131c9ed15c2d6c5720",
         strip_prefix = "aws-sdk-cpp-1.7.336",
         build_file = "//third_party/aws:BUILD.bazel",
+        patch_file = "//third_party/aws:FileSystem.patch",
     )
 
     third_party_http_archive(


diff --git a/third_party/aws/FileSystem.patch b/third_party/aws/FileSystem.patch
new file mode 100644
--- /dev/null
+++ b/third_party/aws/FileSystem.patch
@@ -0,0 +1,11 @@
+diff --git a/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp b/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
+--- a/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
++++ b/aws-cpp-sdk-core/source/platform/windows/FileSystem.cpp
+@@ -20,6 +20,7 @@
+ #include <cassert>
+ #include <iostream>
+ #include <Userenv.h>
++#include <Windows.h>
+ 
+ #pragma warning( disable : 4996)
+ 


diff --git a/third_party/icu/BUILD.bazel b/third_party/icu/BUILD.bazel
--- a/third_party/icu/BUILD.bazel
+++ b/third_party/icu/BUILD.bazel
@@ -45,6 +45,7 @@
     copts = [
         "-DU_COMMON_IMPLEMENTATION",
         "-DU_HAVE_STD_ATOMICS",  # TODO(gunan): Remove when TF is on ICU 64+.
+        "-DU_PLATFORM_HAS_WINUWP_API=1",
     ] + select({
         ":android": [
             "-fdata-sections",


diff --git a/third_party/icu/udata.patch b/third_party/icu/udata.patch
--- a/third_party/icu/udata.patch
+++ b/third_party/icu/udata.patch
@@ -31,17 +31,34 @@
  
  /*----------------------------------------------------------------------*
   *                                                                      *
-@@ -710,10 +708,11 @@
-         if (uprv_getICUData_collation) {
-             setCommonICUDataPointer(uprv_getICUData_collation(), FALSE, pErrorCode);
-         }
-+        */
-         if (uprv_getICUData_conversion) {
-             setCommonICUDataPointer(uprv_getICUData_conversion(), FALSE, pErrorCode);
-         }
--        */
-+
- #if U_PLATFORM_HAS_WINUWP_API == 0 // Windows UWP Platform does not support dll icu data at this time
-         setCommonICUDataPointer(&U_ICUDATA_ENTRY_POINT, FALSE, pErrorCode);
-         {
+diff --git a/icu4c/source/common/ucnvisci.cpp b/icu4c/source/common/ucnvisci.cpp
+--- a/icu4c/source/common/ucnvisci.cpp
+--- b/icu4c/source/common/ucnvisci.cpp
+@@ -1230,7 +1230,7 @@
+                         *err =U_ILLEGAL_CHAR_FOUND;
+                         /* reset */
+                         *contextCharToUnicode=NO_CHAR_MARKER;
+-                        goto CALLBACK;
++                        goto CALLBACK_LABEL;
+                     }
+                 }
+
+@@ -1269,7 +1269,7 @@
+                     *contextCharToUnicode= NO_CHAR_MARKER;
+                     *err = U_ILLEGAL_CHAR_FOUND;
+                 }
+-                goto CALLBACK;
++                goto CALLBACK_LABEL;
+             } else if (*contextCharToUnicode==ISCII_INV) {
+                 if (sourceChar==ISCII_HALANT) {
+                     targetUniChar = 0x0020; /* replace with space accoding to Indic FAQ */
+@@ -1483,7 +1483,7 @@
+                  * so assign codes to reason and err
+                  */
+                 *err = U_INVALID_CHAR_FOUND;
+-CALLBACK:
++CALLBACK_LABEL:
+                 args->converter->toUBytes[0] = (uint8_t) sourceChar;
+                 args->converter->toULength = 1;
+                 break;
 diff -ru a/icu4c/source/common/unicode/uconfig.h b/icu4c/source/common/unicode/uconfig.h
