option(SUFFIX_D "Add d Suffix to lib" ${SUFFIX_D})
if(NOT SUFFIX_D)
    find_library(GLSLANG glslang)
    find_library(GENERICCODEGENLIB GenericCodeGen)
    find_library(MACHINEINDEPENDENTLIB MachineIndependent)
    find_library(SPVREMAPPERLIB SPVRemapper)
    find_library(OSDEPENDENT OSDependent)
    find_library(OGLCOMPILER OGLCompiler)
    find_library(HLSLLIB HLSL)
    find_library(SPIRVLIB SPIRV)
ELSE()
    find_library(GLSLANG glslangd)
    find_library(GENERICCODEGENLIB GenericCodeGend)
    find_library(MACHINEINDEPENDENTLIB MachineIndependentd)
    find_library(SPVREMAPPERLIB SPVRemapperd)
    find_library(OSDEPENDENT OSDependentd)
    find_library(OGLCOMPILER OGLCompilerd)
    find_library(HLSLLIB HLSLd)
    find_library(SPIRVLIB SPIRVd)
ENDIF()

add_library(glslang STATIC IMPORTED GLOBAL)
set_property(TARGET glslang PROPERTY IMPORTED_LOCATION "${GLSLANG}")
find_path(glslang_SOURCE_DIR glslang/Include/Common)
set_property(TARGET glslang APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${glslang_SOURCE_DIR}")

add_library(GenericCodeGen STATIC IMPORTED GLOBAL)
set_property(TARGET GenericCodeGen PROPERTY IMPORTED_LOCATION "${GENERICCODEGENLIB}")

add_library(MachineIndependent STATIC IMPORTED GLOBAL)
set_property(TARGET MachineIndependent PROPERTY IMPORTED_LOCATION "${MACHINEINDEPENDENTLIB}")

add_library(SPVRemapper STATIC IMPORTED GLOBAL)
set_property(TARGET SPVRemapper PROPERTY IMPORTED_LOCATION "${SPVREMAPPERLIB}")

add_library(OSDependent STATIC IMPORTED GLOBAL)
set_property(TARGET OSDependent PROPERTY IMPORTED_LOCATION "${OSDEPENDENT}")

add_library(OGLCompiler STATIC IMPORTED GLOBAL)
set_property(TARGET OGLCompiler PROPERTY IMPORTED_LOCATION "${OGLCOMPILER}")

add_library(HLSL STATIC IMPORTED GLOBAL)
set_property(TARGET HLSL PROPERTY IMPORTED_LOCATION "${HLSLLIB}")

add_library(SPIRV STATIC IMPORTED GLOBAL)
set_property(TARGET SPIRV PROPERTY IMPORTED_LOCATION "${SPIRVLIB}")
