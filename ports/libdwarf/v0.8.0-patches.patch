diff --git a/CMakeLists.txt b/CMakeLists.txt
index 28076ee4..68583f92 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -193,77 +193,81 @@ check_c_source_compiles([=[
   }]=] HAVE_STDAFX_H)
 #message(STATUS "Checking have windows stdafx.h... ${HAVE_STDAFX_H}")
 
-set(CMAKE_REQUIRED_LIBRARIES z)
-check_c_source_compiles( [=[
-  #include "zlib.h"
-  int main()
-  {
-      Bytef dest[100];
-      uLongf destlen = 100;
-      Bytef *src = 0;
-      uLong srclen = 3;
-      int res = uncompress(dest,&destlen,src,srclen);
-      if (res == Z_OK) {
-           /* ALL IS WELL */
-      }
-      return 0;
-  } ]=]  HAVE_ZLIB )
-check_c_source_compiles( [=[
-  #include "zlib.h"
-  int main()
-  {
-      Bytef dest[100];
-      uLongf destlen = 100;
-      Bytef *src = 0;
-      uLong srclen = 3;
-      int res = uncompress(dest,&destlen,src,srclen);
-      if (res == Z_OK) {
-           /* ALL IS WELL */
-      }
-      return 0;
-  } ]=]  HAVE_ZLIB_H )
-set(CMAKE_REQUIRED_LIBRARIES)
-if (HAVE_ZLIB) 
-  # For linking in libz
-  set(DW_FZLIB "z")
-endif()
-
-set(CMAKE_REQUIRED_LIBRARIES zstd )
-check_c_source_compiles( [=[
-  #include "zstd.h"
-  int main()
-  {
-      char * dest[100];
-      size_t destlen = 100;
-      char *src = 0;
-      size_t srclen = 3;
-      size_t res = ZSTD_decompress(dest,destlen,src,srclen);
-      if (res == destlen) {
-           /* ALL IS WELL */
-      }
-      return 0;
-  } ]=]  HAVE_ZSTD )
-check_c_source_compiles( [=[
-  #include "zstd.h"
-  int main()
-  {
-      char * dest[100];
-      size_t destlen = 100;
-      char *src = 0;
-      size_t srclen = 3;
-      size_t res = ZSTD_decompress(dest,destlen,src,srclen);
-      if (res == destlen) {
-           /* ALL IS WELL */
-      }
-      return 0;
-  } ]=]  HAVE_ZSTD_H )
-set(CMAKE_REQUIRED_LIBRARIES)
-if (HAVE_ZSTD)
-  # For linking in libzstd
-  set(DW_FZSTD "zstd")
-endif()
-
-
+# set(CMAKE_REQUIRED_LIBRARIES z)
+# check_c_source_compiles( [=[
+#   #include "zlib.h"
+#   int main()
+#   {
+#       Bytef dest[100];
+#       uLongf destlen = 100;
+#       Bytef *src = 0;
+#       uLong srclen = 3;
+#       int res = uncompress(dest,&destlen,src,srclen);
+#       if (res == Z_OK) {
+#            /* ALL IS WELL */
+#       }
+#       return 0;
+#   } ]=]  HAVE_ZLIB )
+# check_c_source_compiles( [=[
+#   #include "zlib.h"
+#   int main()
+#   {
+#       Bytef dest[100];
+#       uLongf destlen = 100;
+#       Bytef *src = 0;
+#       uLong srclen = 3;
+#       int res = uncompress(dest,&destlen,src,srclen);
+#       if (res == Z_OK) {
+#            /* ALL IS WELL */
+#       }
+#       return 0;
+#   } ]=]  HAVE_ZLIB_H )
+# set(CMAKE_REQUIRED_LIBRARIES)
+# if (HAVE_ZLIB) 
+#   # For linking in libz
+#   set(DW_FZLIB "z")
+# endif()
+
+# set(CMAKE_REQUIRED_LIBRARIES zstd )
+# check_c_source_compiles( [=[
+#   #include "zstd.h"
+#   int main()
+#   {
+#       char * dest[100];
+#       size_t destlen = 100;
+#       char *src = 0;
+#       size_t srclen = 3;
+#       size_t res = ZSTD_decompress(dest,destlen,src,srclen);
+#       if (res == destlen) {
+#            /* ALL IS WELL */
+#       }
+#       return 0;
+#   } ]=]  HAVE_ZSTD )
+# check_c_source_compiles( [=[
+#   #include "zstd.h"
+#   int main()
+#   {
+#       char * dest[100];
+#       size_t destlen = 100;
+#       char *src = 0;
+#       size_t srclen = 3;
+#       size_t res = ZSTD_decompress(dest,destlen,src,srclen);
+#       if (res == destlen) {
+#            /* ALL IS WELL */
+#       }
+#       return 0;
+#   } ]=]  HAVE_ZSTD_H )
+# set(CMAKE_REQUIRED_LIBRARIES)
+# if (HAVE_ZSTD)
+#   # For linking in libzstd
+#   set(DW_FZSTD "zstd")
+# endif()
+
+find_package(ZLIB REQUIRED)
+add_library(z ALIAS ZLIB::ZLIB)
+set(DW_FZLIB "z")
+set(HAVE_ZLIB TRUE)
+set(HAVE_ZLIB_H TRUE)
 
 check_c_source_compiles([=[
 #include <stdint.h>
@@ -333,7 +337,7 @@ else()
 endif()
 
 add_subdirectory(src/lib/libdwarf)
-add_subdirectory(src/bin/dwarfdump)
+# add_subdirectory(src/bin/dwarfdump)
 
 if ( BUILD_DWARFEXAMPLE )
 	add_subdirectory(src/bin/dwarfexample)
diff --git a/src/lib/libdwarf/libdwarf_private.h b/src/lib/libdwarf/libdwarf_private.h
index b37ae994..7fa89256 100644
--- a/src/lib/libdwarf/libdwarf_private.h
+++ b/src/lib/libdwarf/libdwarf_private.h
@@ -26,11 +26,7 @@
 #ifdef _MSC_VER /* Macro to select VS compiler */
 #include <windows.h>
 typedef SSIZE_T ssize_t;
-#ifdef _WIN64
-typedef long long off_t;
-#else
 typedef long off_t;
-#endif
 #endif /* _MSC_VER */
 
 #ifndef TRUE
