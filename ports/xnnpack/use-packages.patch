diff --git a/CMakeLists.txt b/CMakeLists.txt
index d7182ab4..20c11e1f 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,8 +12,6 @@ CMAKE_MINIMUM_REQUIRED(VERSION 3.5 FATAL_ERROR)
 PROJECT(XNNPACK C CXX ASM)
 
 # ---[ Options.
-SET(XNNPACK_LIBRARY_TYPE "default" CACHE STRING "Type of library (shared, static, or default) to build")
-SET_PROPERTY(CACHE XNNPACK_LIBRARY_TYPE PROPERTY STRINGS default static shared)
 OPTION(XNNPACK_ENABLE_ASSEMBLY "Build XNNPACK with assembly micro-kernels" ON)
 OPTION(XNNPACK_ENABLE_MEMOPT "Build XNNPACK with optimized memory allocation scheme" ON)
 OPTION(XNNPACK_ENABLE_SPARSE "Build XNNPACK with graph rewriting for sparse inference" ON)
@@ -2890,15 +2888,7 @@ IF(XNNPACK_TARGET_PROCESSOR MATCHES "^(i[3-6]86|x86_64|AMD64)$" OR IOS_ARCH MATC
   LIST(APPEND XNNPACK_MICROKERNEL_SRCS ${XNNPACK_AVX512SKX_MICROKERNEL_SRCS})
 ENDIF()
 
-IF(XNNPACK_LIBRARY_TYPE STREQUAL "default")
-  ADD_LIBRARY(XNNPACK ${XNNPACK_COLD_SRCS} ${XNNPACK_HOT_SRCS} ${XNNPACK_TABLE_SRCS} ${XNNPACK_MICROKERNEL_SRCS})
-ELSEIF(XNNPACK_LIBRARY_TYPE STREQUAL "shared")
-  ADD_LIBRARY(XNNPACK SHARED ${XNNPACK_COLD_SRCS} ${XNNPACK_HOT_SRCS} ${XNNPACK_TABLE_SRCS} ${XNNPACK_MICROKERNEL_SRCS})
-ELSEIF(XNNPACK_LIBRARY_TYPE STREQUAL "static")
-  ADD_LIBRARY(XNNPACK STATIC ${XNNPACK_COLD_SRCS} ${XNNPACK_HOT_SRCS} ${XNNPACK_TABLE_SRCS} ${XNNPACK_MICROKERNEL_SRCS})
-ELSE()
-  MESSAGE(FATAL_ERROR "Unsupported XNNPACK library type \"${XNNPACK_LIBRARY_TYPE}\". Must be \"static\", \"shared\", or \"default\"")
-ENDIF()
+ADD_LIBRARY(XNNPACK ${XNNPACK_COLD_SRCS} ${XNNPACK_HOT_SRCS} ${XNNPACK_TABLE_SRCS} ${XNNPACK_MICROKERNEL_SRCS})
 SET_TARGET_PROPERTIES(XNNPACK PROPERTIES
   C_STANDARD 99
   C_EXTENSIONS YES)
@@ -3007,7 +2997,7 @@ IF(LIBM)
 ENDIF()
 
 # ---[ Configure clog
-IF(NOT TARGET clog)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(CLOG_BUILD_TESTS OFF CACHE BOOL "")
     SET(CLOG_RUNTIME_TYPE "${CPUINFO_RUNTIME_TYPE}" CACHE STRING "")
@@ -3025,10 +3015,9 @@ IF(NOT TARGET clog)
     SET_PROPERTY(TARGET clog PROPERTY IMPORTED_LOCATION "${CLOG_LIBRARY}")
   ENDIF()
 ENDIF()
-TARGET_LINK_LIBRARIES(XNNPACK PRIVATE clog)
 
 # ---[ Configure cpuinfo
-IF(NOT TARGET cpuinfo)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(CPUINFO_BUILD_TOOLS OFF CACHE BOOL "")
     SET(CPUINFO_BUILD_UNIT_TESTS OFF CACHE BOOL "")
@@ -3046,10 +3035,11 @@ IF(NOT TARGET cpuinfo)
     SET_PROPERTY(TARGET cpuinfo PROPERTY IMPORTED_LOCATION "${CPUINFO_LIBRARY}")
   ENDIF()
 ENDIF()
-TARGET_LINK_LIBRARIES(XNNPACK PRIVATE cpuinfo)
+find_package(cpuinfo CONFIG REQUIRED)
+target_link_libraries(XNNPACK PUBLIC cpuinfo::clog cpuinfo::cpuinfo)
 
 # ---[ Configure pthreadpool
-IF(NOT TARGET pthreadpool)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(PTHREADPOOL_BUILD_TESTS OFF CACHE BOOL "")
     SET(PTHREADPOOL_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -3069,7 +3059,7 @@ ENDIF()
 TARGET_LINK_LIBRARIES(XNNPACK PUBLIC pthreadpool)
 
 # ---[ Configure FXdiv
-IF(NOT TARGET fxdiv)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(FXDIV_BUILD_TESTS OFF CACHE BOOL "")
     SET(FXDIV_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -3085,10 +3075,11 @@ IF(NOT TARGET fxdiv)
     SET_PROPERTY(TARGET fxdiv PROPERTY LINKER_LANGUAGE C)
   ENDIF()
 ENDIF()
-TARGET_LINK_LIBRARIES(XNNPACK PRIVATE fxdiv)
+find_path(FXDIV_INCLUDE_DIRS "fxdiv.h")
+target_include_directories(XNNPACK PRIVATE ${FXDIV_INCLUDE_DIRS})
 
 # ---[ Configure FP16
-IF(NOT TARGET fp16)
+IF(FALSE)
   IF(NOT XNNPACK_USE_SYSTEM_LIBS)
     SET(FP16_BUILD_TESTS OFF CACHE BOOL "")
     SET(FP16_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -3104,9 +3095,11 @@ IF(NOT TARGET fp16)
     SET_PROPERTY(TARGET fp16 PROPERTY LINKER_LANGUAGE C)
   ENDIF()
 ENDIF()
-TARGET_LINK_LIBRARIES(XNNPACK PRIVATE fp16)
+find_path(FP16_INCLUDE_DIRS "fp16.h")
+target_include_directories(XNNPACK PRIVATE ${FP16_INCLUDE_DIRS})
 
 INSTALL(TARGETS XNNPACK
+    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
     PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
