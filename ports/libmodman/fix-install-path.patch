diff --git a/libmodman/CMakeLists.txt b/libmodman/CMakeLists.txt
index 0aff593..a1bbcd5 100644
--- a/libmodman/CMakeLists.txt
+++ b/libmodman/CMakeLists.txt
@@ -30,28 +30,40 @@ if(NOT WIN32 AND NOT APPLE)
   configure_file(libmodman-2.0.pc.in
                  ${CMAKE_CURRENT_BINARY_DIR}/libmodman-2.0.pc @ONLY)
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libmodman-2.0.pc
-          DESTINATION ${LIB_INSTALL_DIR}/pkgconfig)
+          DESTINATION lib/pkgconfig)
 endif()
 
 # CMake Find helper
-if (NOT WIN32 AND NOT APPLE)
+if (1)
   configure_file(Findlibmodman.cmake.in
                  ${CMAKE_CURRENT_BINARY_DIR}/Findlibmodman.cmake @ONLY)
   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/Findlibmodman.cmake
-          DESTINATION ${SHARE_INSTALL_DIR}/cmake/Modules)
+          DESTINATION share/${PROJECT_NAME})
 endif()
 
 # Define the library itself
+if(BUILD_SHARED_LIBS)
 add_library(modman SHARED
             module.hpp
             module_manager.hpp
             module_manager.cpp)
+else()
+add_library(modman STATIC
+            module.hpp
+            module_manager.hpp
+            module_manager.cpp)
+endif()
 if(NOT WIN32)
   target_link_libraries(modman dl)
 endif()
 set_target_properties(modman PROPERTIES PREFIX "lib" VERSION 1.0.0 SOVERSION 1)
-install(TARGETS modman DESTINATION ${LIB_INSTALL_DIR})
-install(FILES   module_manager.hpp module.hpp DESTINATION ${INCLUDE_INSTALL_DIR}/${PROJECT_NAME})
+install(
+    TARGETS modman
+    RUNTIME DESTINATION bin
+    LIBRARY DESTINATION lib
+    ARCHIVE DESTINATION lib
+)
+install(FILES   module_manager.hpp module.hpp DESTINATION include/${PROJECT_NAME})
 
 ### Tests
 add_testdirectory(test)
diff --git a/libmodman/Findlibmodman.cmake.in b/libmodman/Findlibmodman.cmake.in
index 8459c7f..e9c97e5 100644
--- a/libmodman/Findlibmodman.cmake.in
+++ b/libmodman/Findlibmodman.cmake.in
@@ -12,7 +12,7 @@
 
 # Find module_manager.hpp and the corresponding library (libmodman.so)
 FIND_PATH(LIBMODMAN_INCLUDE_DIR libmodman/module_manager.hpp)
-FIND_LIBRARY(LIBMODMAN_LIBRARIES NAMES modman)
+FIND_LIBRARY(LIBMODMAN_LIBRARIES NAMES modman libmodman)
 
 # Set library version
 SET(LIBMODMAN_VERSION @PROJECT_VERSION@)
