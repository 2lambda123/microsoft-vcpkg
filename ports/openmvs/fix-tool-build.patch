diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7966ed5..b8dfb54 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -63,7 +63,7 @@ INCLUDE_DIRECTORIES("${OpenMVS_SOURCE_DIR}")
 SET(OpenMVS_EXTRA_LIBS "")
 if(OpenMVS_USE_OPENMP)
 	SET(OpenMP_LIBS "")
-	FIND_PACKAGE(OpenMP)
+	FIND_PACKAGE(OpenMP REQUIRED)
 	if(OPENMP_FOUND)
 		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
 		ADD_DEFINITIONS(-D_USE_OPENMP)
@@ -83,7 +83,7 @@ if(OpenMVS_USE_OPENGL)
 	if(POLICY CMP0072)
 		cmake_policy(SET CMP0072 NEW)
 	endif()
-	FIND_PACKAGE(OpenGL)
+	FIND_PACKAGE(OpenGL REQUIRED)
 	if(OPENGL_FOUND)
 		INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR})
 		ADD_DEFINITIONS(${OpenGL_DEFINITIONS} -D_USE_OPENGL)
@@ -94,7 +94,7 @@ if(OpenMVS_USE_OPENGL)
 endif()
 
 if(OpenMVS_USE_CUDA)
-	FIND_PACKAGE(CUDA)
+	FIND_PACKAGE(CUDA REQUIRED)
 	if(CUDA_FOUND)
 		INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
 		ADD_DEFINITIONS(-D_USE_CUDA)
@@ -108,7 +108,7 @@ else()
 endif()
 
 if(OpenMVS_USE_BREAKPAD)
-	FIND_PACKAGE(BREAKPAD)
+	FIND_PACKAGE(BREAKPAD REQUIRED)
 	if(BREAKPAD_FOUND)
 		INCLUDE_DIRECTORIES(${BREAKPAD_INCLUDE_DIRS})
 		ADD_DEFINITIONS(${BREAKPAD_DEFINITIONS} -D_USE_BREAKPAD)
@@ -119,7 +119,7 @@ if(OpenMVS_USE_BREAKPAD)
 	endif()
 endif()
 
-FIND_PACKAGE(Boost ${SYSTEM_PACKAGE_REQUIRED} COMPONENTS iostreams program_options system serialization)
+FIND_PACKAGE(Boost COMPONENTS iostreams program_options system serialization REQUIRED)
 if(Boost_FOUND)
 	INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
 	ADD_DEFINITIONS(${Boost_DEFINITIONS} -D_USE_BOOST)
@@ -127,14 +127,14 @@ if(Boost_FOUND)
 	SET(_USE_BOOST TRUE)
 endif()
 
-FIND_PACKAGE(Eigen ${SYSTEM_PACKAGE_REQUIRED})
-if(EIGEN_FOUND)
-	INCLUDE_DIRECTORIES(${EIGEN_INCLUDE_DIRS})
+FIND_PACKAGE(Eigen3 REQUIRED)
+if(EIGEN3_FOUND)
+	INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIRS})
 	ADD_DEFINITIONS(${EIGEN_DEFINITIONS} -D_USE_EIGEN)
 	SET(_USE_EIGEN TRUE)
 endif()
 
-FIND_PACKAGE(OpenCV ${SYSTEM_PACKAGE_REQUIRED})
+FIND_PACKAGE(OpenCV REQUIRED)
 if(OpenCV_FOUND)
 	INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
 	ADD_DEFINITIONS(${OpenCV_DEFINITIONS})
@@ -170,7 +170,9 @@ ADD_DEFINITIONS(${OpenMVS_DEFINITIONS})
 
 # Add modules
 ADD_SUBDIRECTORY(libs)
+if(OpenMVS_BUILD_TOOLS)
 ADD_SUBDIRECTORY(apps)
+endif()
 ADD_SUBDIRECTORY(docs)
 
 if(OpenMVS_USE_CERES)
@@ -188,7 +190,7 @@ export(TARGETS Common IO Math MVS FILE "${PROJECT_BINARY_DIR}/OpenMVSTargets.cma
 # Export the package for use from the build-tree
 # (this registers the build-tree with a global CMake-registry)
 export(PACKAGE OpenMVS)
- 
+
 # Create the OpenMVSConfig.cmake and OpenMVSConfigVersion files
 file(RELATIVE_PATH REL_INCLUDE_DIR "${INSTALL_CMAKE_DIR}" "${INSTALL_INCLUDE_DIR}")
 # ... for the build tree
@@ -199,7 +201,7 @@ set(CONF_INCLUDE_DIRS "${INSTALL_CMAKE_DIR}/${REL_INCLUDE_DIR}")
 configure_file("${CMAKE_CURRENT_SOURCE_DIR}/build/OpenMVSConfig.cmake.in" "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OpenMVSConfig.cmake" @ONLY)
 # ... for both
 configure_file("${CMAKE_CURRENT_SOURCE_DIR}/build/OpenMVSConfigVersion.cmake.in" "${PROJECT_BINARY_DIR}/OpenMVSConfigVersion.cmake" @ONLY)
- 
+
 # Install the OpenMVSConfig.cmake and OpenMVSConfigVersion.cmake
 install(FILES
 	"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/OpenMVSConfig.cmake"
diff --git a/build/OpenMVSConfig.cmake.in b/build/OpenMVSConfig.cmake.in
index 96b8fe2..4d4d590 100644
--- a/build/OpenMVSConfig.cmake.in
+++ b/build/OpenMVSConfig.cmake.in
@@ -3,16 +3,37 @@
 #  OpenMVS_INCLUDE_DIRS - include directories for OpenMVS
 #  OpenMVS_LIBRARIES    - libraries to link against
 #  OpenMVS_BINARIES     - the binaries
- 
+
 # Compute paths
 get_filename_component(OpenMVS_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
 set(OpenMVS_INCLUDE_DIRS "@CONF_INCLUDE_DIRS@")
- 
+include(CMakeFindDependencyMacro)
+
+if(@OpenMVS_USE_OPENMP@)
+	find_dependency(OpenMP)
+endif()
+
+if(@OpenMVS_USE_OPENGL@)
+	find_dependency(OpenGL)
+endif()
+
+if(@OpenMVS_USE_CUDA@)
+	find_dependency(CUDA)
+endif()
+
+if(@OpenMVS_USE_BREAKPAD@)
+	find_dependency(BREAKPAD)
+endif()
+
+find_dependency(Boost)
+find_dependency(Eigen3)
+find_dependency(OpenCV)
+
 # Our library dependencies (contains definitions for IMPORTED targets)
 if(NOT TARGET MVS AND NOT OpenMVS_BINARY_DIR)
 	include("${OpenMVS_CMAKE_DIR}/OpenMVSTargets.cmake")
 endif()
- 
+
 # These are IMPORTED targets created by OpenMVSTargets.cmake
 set(OpenMVS_LIBRARIES MVS)
 set(OpenMVS_BINARIES InterfaceVisualSFM DensifyPointCloud ReconstructMesh RefineMesh TextureMesh)
