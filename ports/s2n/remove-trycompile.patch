diff --git a/CMakeLists.txt b/CMakeLists.txt
index dc1c81c..2f774f2 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -374,17 +374,6 @@ if (S2N_INTERN_LIBCRYPTO)
     message(STATUS "Enabling libcrypto interning")
 endif()
 
-# Determine if EVP_md5_sha1 is available in libcrypto
-try_compile(
-        LIBCRYPTO_SUPPORTS_EVP_MD5_SHA1_HASH
-        ${CMAKE_BINARY_DIR}
-        SOURCES "${CMAKE_CURRENT_LIST_DIR}/tests/features/evp_md5_sha1.c"
-        LINK_LIBRARIES ${LINK_LIB} ${OS_LIBS}
-)
-if (LIBCRYPTO_SUPPORTS_EVP_MD5_SHA1_HASH)
-    target_compile_options(${PROJECT_NAME} PUBLIC -DS2N_LIBCRYPTO_SUPPORTS_EVP_MD5_SHA1_HASH)
-endif()
-
 # Determine if RC4 is available in libcrypto
 try_compile(
         LIBCRYPTO_SUPPORTS_EVP_RC4
@@ -397,19 +386,6 @@ if (LIBCRYPTO_SUPPORTS_EVP_RC4)
     target_compile_options(${PROJECT_NAME} PUBLIC -DS2N_LIBCRYPTO_SUPPORTS_EVP_RC4)
 endif()
 
-# Determine if EVP_MD_CTX_set_pkey_ctx is available in libcrypto
-try_compile(
-        LIBCRYPTO_SUPPORTS_EVP_MD_CTX_SET_PKEY_CTX
-        ${CMAKE_BINARY_DIR}
-        SOURCES "${CMAKE_CURRENT_LIST_DIR}/tests/features/evp_md_ctx_set_pkey_ctx.c"
-        LINK_LIBRARIES ${LINK_LIB} ${OS_LIBS}
-        CMAKE_FLAGS ${ADDITIONAL_FLAGS}
-)
-
-if (LIBCRYPTO_SUPPORTS_EVP_MD_CTX_SET_PKEY_CTX)
-    target_compile_options(${PROJECT_NAME} PUBLIC -DS2N_LIBCRYPTO_SUPPORTS_EVP_MD_CTX_SET_PKEY_CTX)
-endif()
-
 if (S2N_INTERN_LIBCRYPTO)
 
     # Check if the AWS::crypto target has beeen added and handle it
