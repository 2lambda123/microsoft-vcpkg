diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9504c3b..f0e5258 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -49,7 +49,7 @@ set(SRCS
 
 set(config_h ${CMAKE_CURRENT_BINARY_DIR}/include/config.h)
 configure_file(
-  cmake/config.h.in
+  include/config.h.in
   ${config_h}
   )
 
@@ -95,14 +95,6 @@ install(
   ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" COMPONENT Development
   )
 
-#
-# Add tests
-#
-include(CTest) # This module defines BUILD_TESTING option
-if(BUILD_TESTING)
-  add_subdirectory(tests)
-endif()
-
 #
 # Generate 'yamlConfig.cmake', 'yamlConfigVersion.cmake' and 'yamlTargets.cmake'
 #
diff --git a/include/config.h.in b/include/config.h.in
index 65d9df3..0f3a942 100644
--- a/include/config.h.in
+++ b/include/config.h.in
@@ -1,79 +1,79 @@
 /* include/config.h.in.  Generated from configure.ac by autoheader.  */
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
-#undef HAVE_DLFCN_H
+#cmakedefine01 HAVE_DLFCN_H @HAVE_DLFCN_H@
 
 /* Define to 1 if you have the <inttypes.h> header file. */
-#undef HAVE_INTTYPES_H
+#cmakedefine01 HAVE_INTTYPES_H @HAVE_INTTYPES_H@
 
 /* Define to 1 if you have the <memory.h> header file. */
-#undef HAVE_MEMORY_H
+#cmakedefine01 HAVE_MEMORY_H @HAVE_MEMORY_H@
 
 /* Define to 1 if you have the <stdint.h> header file. */
-#undef HAVE_STDINT_H
+#cmakedefine01 HAVE_STDINT_H @HAVE_STDINT_H@
 
 /* Define to 1 if you have the <stdlib.h> header file. */
-#undef HAVE_STDLIB_H
+#cmakedefine01 HAVE_STDLIB_H @HAVE_STDLIB_H@
 
 /* Define to 1 if you have the <strings.h> header file. */
-#undef HAVE_STRINGS_H
+#cmakedefine01 HAVE_STRINGS_H @HAVE_STRINGS_H@
 
 /* Define to 1 if you have the <string.h> header file. */
-#undef HAVE_STRING_H
+#cmakedefine01 HAVE_STRING_H @HAVE_STRING_H@
 
 /* Define to 1 if you have the <sys/stat.h> header file. */
-#undef HAVE_SYS_STAT_H
+#cmakedefine01 HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@
 
 /* Define to 1 if you have the <sys/types.h> header file. */
-#undef HAVE_SYS_TYPES_H
+#cmakedefine01 HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@
 
 /* Define to 1 if you have the <unistd.h> header file. */
-#undef HAVE_UNISTD_H
+#cmakedefine01 HAVE_UNISTD_H @HAVE_UNISTD_H@
 
 /* Define to the sub-directory where libtool stores uninstalled libraries. */
-#undef LT_OBJDIR
+#cmakedefine01 LT_OBJDIR "@LT_OBJDIR@"
 
 /* Name of package */
-#undef PACKAGE
+#cmakedefine PACKAGE "@PACKAGE@"
 
 /* Define to the address where bug reports for this package should be sent. */
-#undef PACKAGE_BUGREPORT
+#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"
 
 /* Define to the full name of this package. */
-#undef PACKAGE_NAME
+#cmakedefine PACKAGE_NAME "@PACKAGE_NAME"
 
 /* Define to the full name and version of this package. */
-#undef PACKAGE_STRING
+#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"
 
 /* Define to the one symbol short name of this package. */
-#undef PACKAGE_TARNAME
+#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"
 
 /* Define to the home page for this package. */
-#undef PACKAGE_URL
+#cmakedefine PACKAGE_URL "@PACKAGE_URL@"
 
 /* Define to the version of this package. */
-#undef PACKAGE_VERSION
+#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"
 
 /* Define to 1 if you have the ANSI C header files. */
-#undef STDC_HEADERS
+#cmakedefine01 STDC_HEADERS @STDC_HEADERS@
 
 /* Version number of package */
-#undef VERSION
+#define VERSION @VERSION@
 
 /* Define the major version number. */
-#undef YAML_VERSION_MAJOR
+#define YAML_VERSION_MAJOR "@YAML_VERSION_MAJOR@"
 
 /* Define the minor version number. */
-#undef YAML_VERSION_MINOR
+#define YAML_VERSION_MINOR "@YAML_VERSION_MINOR@"
 
 /* Define the patch version number. */
-#undef YAML_VERSION_PATCH
+#define YAML_VERSION_PATCH "@YAML_VERSION_PATCH@"
 
 /* Define the version string. */
-#undef YAML_VERSION_STRING
+#define YAML_VERSION_STRING "@YAML_VERSION_STRING@"
 
 /* Define to empty if `const' does not conform to ANSI C. */
-#undef const
+#cmakedefine const @const@
 
 /* Define to `unsigned int' if <sys/types.h> does not define. */
-#undef size_t
+#cmakedefine size_t @size_t@
