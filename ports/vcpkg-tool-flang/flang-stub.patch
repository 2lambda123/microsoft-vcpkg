diff --git a/CMakeLists.txt b/CMakeLists.txt
index bc768867b..5a22f0dc3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,12 +16,34 @@ endif()
 # CMake's Fortran tests
 SET(CMAKE_Fortran_COMPILER_WORKS 1)
 if (WIN32)
+  SET(CMAKE_Fortran_COMPILER flang)
   SET(CMAKE_Fortran_ABI_COMPILED 0)
   SET(CMAKE_Fortran_COMPILER_SUPPORTS_F90 1)
+  SET(CMAKE_Fortran_ABI_COMPILED 0)
+ SET(CMAKE_Fortran_COMPILER_SUPPORTS_F90 1)
+ SET(CMAKE_Fortran_PREPROCESS_SOURCE
+     "<CMAKE_Fortran_COMPILER> -cpp <DEFINES> <INCLUDES> <FLAGS> -E <SOURCE> -o <PREPROCESSED_SOURCE>")
+ SET(CMAKE_Fortran_COMPILE_OBJECT
+     "<CMAKE_Fortran_COMPILER> <DEFINES> <INCLUDES> <FLAGS> -c <SOURCE> -o <OBJECT>")
+ SET(CMAKE_Fortran_MODDIR_FLAG "-module ")
+ SET(CMAKE_INCLUDE_FLAG_Fortran "-I")
 endif()
+set(CMAKE_Fortran_LINK_EXECUTABLE "${CMAKE_C_LINK_EXECUTABLE}")
 
 set(TARGET_OS ${CMAKE_SYSTEM_NAME} CACHE STRING "Target OS")
 set(TARGET_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR} CACHE STRING "Target Architecture")
+find_package(OpenMP REQUIRED)
+set(CMAKE_Fortran_COMPILER "${CMAKE_BINARY_DIR}/bin/flang${CMAKE_EXECUTABLE_SUFFIX}")
+if(NOT EXISTS ${CMAKE_Fortran_COMPILER})
+  file(WRITE "${CMAKE_BINARY_DIR}/flang.c" "int main() { return -1; }")
+  try_compile(SHIM_COMPILED
+      ${CMAKE_BINARY_DIR}
+      "${CMAKE_BINARY_DIR}/flang.c"
+      COPY_FILE ${CMAKE_Fortran_COMPILER}
+  )
+endif()
+
+enable_language(C CXX ASM Fortran)
 
 if (POLICY CMP0054)
   cmake_policy(SET CMP0054 NEW)
diff --git a/runtime/libpgmath/CMakeLists.txt b/runtime/libpgmath/CMakeLists.txt
index a363cb575..a93af24af 100644
--- a/runtime/libpgmath/CMakeLists.txt
+++ b/runtime/libpgmath/CMakeLists.txt
@@ -13,6 +13,8 @@ if(POLICY CMP0022)
   cmake_policy(SET CMP0022 NEW) # Required when interacting with LLVM and Clang
 endif()
 
+add_compile_options("-Xclang" "-flax-vector-conversions=all")
+
 # Add path for custom modules
 set(CMAKE_MODULE_PATH
   "${CMAKE_CURRENT_SOURCE_DIR}/cmake"
@@ -121,7 +123,7 @@ include(LibmathUtils)
 
 # Setup Source Code And Tests
 add_subdirectory(lib)
-add_subdirectory(test)
+#add_subdirectory(test)
 
 if(0)
 get_cmake_property(_variableNames VARIABLES)
diff --git a/runtime/CMakeLists.txt b/runtime/CMakeLists.txt
index ab3c9ba57..f35c1f8ec 100644
--- a/runtime/CMakeLists.txt
+++ b/runtime/CMakeLists.txt
@@ -40,7 +40,7 @@ endif()
 include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
 
 add_subdirectory(ompstub)
-
+add_subdirectory(libpgmath)
 add_subdirectory(flangrti)
 add_subdirectory(flang)
 add_subdirectory(flangmain)
diff --git a/runtime/flangrti/CMakeLists.txt b/runtime/flangrti/CMakeLists.txt
index 66d9237a1..90c4ffc6d 100644
--- a/runtime/flangrti/CMakeLists.txt
+++ b/runtime/flangrti/CMakeLists.txt
@@ -103,7 +103,7 @@ find_library(
   LIBPGMATH
   NAMES pgmath libpgmath
   HINTS ${CMAKE_BINARY_DIR}/lib)
-target_link_libraries(flangrti_shared PUBLIC ${LIBPGMATH})
+target_link_libraries(flangrti_shared PUBLIC pgmath)
 
 if( ${TARGET_ARCHITECTURE} STREQUAL "aarch64" )
   target_compile_definitions(flangrti_static PRIVATE TARGET_LINUX_ARM)

