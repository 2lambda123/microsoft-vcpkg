diff --git a/CMakeLists.txt b/CMakeLists.txt
index d325df7..b02d37c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -88,3 +88,18 @@ include (packages)
 
 include (CPack)
 include (CTest)
+
+install(EXPORT unofficial-evpp-target
+        FILE unofficial-evpp-target.cmake
+        NAMESPACE unofficial::evpp::
+        DESTINATION share/unofficial-evpp
+)
+
+file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/unofficial-evpp-config.cmake.in"
+[[include(CMakeFindDependencyMacro)
+find_dependency(glog)
+find_dependency(Libevent)
+include("${CMAKE_CURRENT_LIST_DIR}/unofficial-evpp-target.cmake")
+]])
+configure_file("${CMAKE_CURRENT_BINARY_DIR}/unofficial-evpp-config.cmake.in" "${CMAKE_CURRENT_BINARY_DIR}/unofficial-evpp-config.cmake" @ONLY)
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/unofficial-evpp-config.cmake DESTINATION "share/unofficial-evpp")
diff --git a/apps/evmc/CMakeLists.txt b/apps/evmc/CMakeLists.txt
index 9918919..0141523 100644
--- a/apps/evmc/CMakeLists.txt
+++ b/apps/evmc/CMakeLists.txt
@@ -9,8 +9,10 @@ add_library(evmc_static STATIC ${evmc_SRCS})
 target_link_libraries(evmc_static ${LIBRARIES})
 
 if (UNIX)
-    add_library(evmc SHARED ${evmc_SRCS})
-    target_link_libraries(evmc ${LIBRARIES})
+    if(BUILD_SHARED_LIBS)
+      add_library(evmc SHARED ${evmc_SRCS})
+      target_link_libraries(evmc ${LIBRARIES})
+    endif()
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
@@ -21,18 +23,21 @@ if (UNIX)
         SOVERSION   "${PACKAGE_SOVERSION}"
     )
 
-    install (
-      TARGETS evmc
-      LIBRARY DESTINATION lib
-      ARCHIVE DESTINATION lib)
+    if(BUILD_SHARED_LIBS)
+      install (
+        TARGETS evmc
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+    endif()
 endif (UNIX)
 
 install (
   TARGETS evmc_static
+  EXPORT  unofficial-evpp-target
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
 install (FILES ${evmc_PUBLIC_HEADERS} DESTINATION "include/evmc")
-
+TARGET_INCLUDE_DIRECTORIES(evmc_static INTERFACE $<INSTALL_INTERFACE:include>)
 
 if (NOT EVPP_VCPKG_BUILD)
     add_subdirectory(test)
diff --git a/apps/evnsq/CMakeLists.txt b/apps/evnsq/CMakeLists.txt
index c510814..3983d1a 100644
--- a/apps/evnsq/CMakeLists.txt
+++ b/apps/evnsq/CMakeLists.txt
@@ -5,8 +5,10 @@ add_library(evnsq_static STATIC ${evnsq_SRCS})
 target_link_libraries(evnsq_static ${LIBRARIES})
 
 if (UNIX)
-    add_library(evnsq SHARED ${evnsq_SRCS})
-    target_link_libraries(evnsq ${LIBRARIES})
+    if(BUILD_SHARED_LIBS)
+      add_library(evnsq SHARED ${evnsq_SRCS})
+      target_link_libraries(evnsq ${LIBRARIES})
+    endif()
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
@@ -17,17 +19,21 @@ if (UNIX)
         SOVERSION   "${PACKAGE_SOVERSION}"
     )
 
-    install (
-      TARGETS evnsq
-      LIBRARY DESTINATION lib
-      ARCHIVE DESTINATION lib)
+    if(BUILD_SHARED_LIBS)
+      install (
+        TARGETS evnsq
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+    endif()
 endif (UNIX)
 
 install (
   TARGETS evnsq_static
+  EXPORT  unofficial-evpp-target
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib)
 install (FILES ${evnsq_PUBLIC_HEADERS} DESTINATION "include/evnsq")
+TARGET_INCLUDE_DIRECTORIES(evnsq_static INTERFACE $<INSTALL_INTERFACE:include>)
 
 if (NOT EVPP_VCPKG_BUILD)
     add_subdirectory(evnsqtail)
diff --git a/evpp/CMakeLists.txt b/evpp/CMakeLists.txt
index 031659f..bcdd2d7 100644
--- a/evpp/CMakeLists.txt
+++ b/evpp/CMakeLists.txt
@@ -22,24 +22,28 @@ target_link_libraries(evpp_lite_static ${DEPENDENT_LIBRARIES})
 target_compile_features(evpp_lite_static PRIVATE cxx_std_11)
 
 if (UNIX)
-    add_library(evpp SHARED ${evpp_SRCS})
-    target_link_libraries(evpp ${DEPENDENT_LIBRARIES})
+    if(BUILD_SHARED_LIBS)
+      add_library(evpp SHARED ${evpp_SRCS})
+      target_link_libraries(evpp ${DEPENDENT_LIBRARIES})
+      
+      # boost lockfree queue
+      add_library(evpp_boost SHARED ${evpp_SRCS})
+      target_compile_definitions(evpp_boost PRIVATE -DH_HAVE_BOOST=1)
+      target_link_libraries(evpp_boost        ${DEPENDENT_LIBRARIES})
+      
+      # https://github.com/cameron314/concurrentqueue
+      add_library(evpp_concurrentqueue SHARED ${evpp_SRCS})
+      target_compile_definitions(evpp_concurrentqueue PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
+      target_link_libraries(evpp_concurrentqueue        ${DEPENDENT_LIBRARIES})
+    else()
+      add_library(evpp_boost_static STATIC ${evpp_SRCS})
+      target_compile_definitions(evpp_boost_static PRIVATE -DH_HAVE_BOOST=1)
+      target_link_libraries(evpp_boost_static ${DEPENDENT_LIBRARIES})
 
-    # boost lockfree queue
-    add_library(evpp_boost SHARED ${evpp_SRCS})
-    add_library(evpp_boost_static STATIC ${evpp_SRCS})
-    target_compile_definitions(evpp_boost PRIVATE -DH_HAVE_BOOST=1)
-    target_compile_definitions(evpp_boost_static PRIVATE -DH_HAVE_BOOST=1)
-    target_link_libraries(evpp_boost        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_boost_static ${DEPENDENT_LIBRARIES})
-
-    # https://github.com/cameron314/concurrentqueue
-    add_library(evpp_concurrentqueue SHARED ${evpp_SRCS})
-    add_library(evpp_concurrentqueue_static STATIC ${evpp_SRCS})
-    target_compile_definitions(evpp_concurrentqueue PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
-    target_compile_definitions(evpp_concurrentqueue_static PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
-    target_link_libraries(evpp_concurrentqueue        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_concurrentqueue_static ${DEPENDENT_LIBRARIES})
+      add_library(evpp_concurrentqueue_static STATIC ${evpp_SRCS})
+      target_compile_definitions(evpp_concurrentqueue_static PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
+      target_link_libraries(evpp_concurrentqueue_static ${DEPENDENT_LIBRARIES})
+    endif()
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
@@ -51,19 +55,26 @@ if (UNIX)
     )
 
     install (
-      TARGETS evpp evpp_static evpp_lite_static evpp_boost evpp_boost_static evpp_concurrentqueue evpp_concurrentqueue_static
-      EXPORT ${PACKAGE_NAME}
-      RUNTIME DESTINATION bin
+      TARGETS evpp_static evpp_lite_static evpp_boost_static evpp_concurrentqueue_static
+      EXPORT  unofficial-evpp-target
       LIBRARY DESTINATION lib
       ARCHIVE DESTINATION lib)
+        
+    TARGET_INCLUDE_DIRECTORIES(evpp_static INTERFACE $<INSTALL_INTERFACE:include>)
+    TARGET_INCLUDE_DIRECTORIES(evpp_lite_static INTERFACE $<INSTALL_INTERFACE:include>)   
+    TARGET_INCLUDE_DIRECTORIES(evpp_boost_static INTERFACE $<INSTALL_INTERFACE:include>)   
+    TARGET_INCLUDE_DIRECTORIES(evpp_concurrentqueue_static INTERFACE $<INSTALL_INTERFACE:include>)
 
 else (UNIX)
     install (
       TARGETS evpp_static evpp_lite_static
-      EXPORT ${PACKAGE_NAME}
+      EXPORT  unofficial-evpp-target
       RUNTIME DESTINATION bin
       LIBRARY DESTINATION lib
       ARCHIVE DESTINATION lib)
+    
+    TARGET_INCLUDE_DIRECTORIES(evpp_static INTERFACE $<INSTALL_INTERFACE:include>)
+    TARGET_INCLUDE_DIRECTORIES(evpp_lite_static INTERFACE $<INSTALL_INTERFACE:include>)
 
 endif (UNIX)
 
