diff --git a/apps/evmc/CMakeLists.txt b/apps/evmc/CMakeLists.txt
index 9918919..796254c 100644
--- a/apps/evmc/CMakeLists.txt
+++ b/apps/evmc/CMakeLists.txt
@@ -9,22 +9,24 @@ add_library(evmc_static STATIC ${evmc_SRCS})
 target_link_libraries(evmc_static ${LIBRARIES})
 
 if (UNIX)
-    add_library(evmc SHARED ${evmc_SRCS})
-    target_link_libraries(evmc ${LIBRARIES})
-
-    set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
-    include (utils)
-    include (packages)
-    set_target_properties (
-        evmc evnsq PROPERTIES
-        VERSION     "${PACKAGE_VERSION}"
-        SOVERSION   "${PACKAGE_SOVERSION}"
-    )
-
-    install (
-      TARGETS evmc
-      LIBRARY DESTINATION lib
-      ARCHIVE DESTINATION lib)
+    if(BUILD_SHARED_LIBS)
+      add_library(evmc SHARED ${evmc_SRCS})
+      target_link_libraries(evmc ${LIBRARIES})
+
+      set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
+      include (utils)
+      include (packages)
+      set_target_properties (
+          evmc evnsq PROPERTIES
+          VERSION     "${PACKAGE_VERSION}"
+          SOVERSION   "${PACKAGE_SOVERSION}"
+      )
+
+      install (
+        TARGETS evmc
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+     endif()
 endif (UNIX)
 
 install (
diff --git a/apps/evnsq/CMakeLists.txt b/apps/evnsq/CMakeLists.txt
index c510814..364ebe0 100644
--- a/apps/evnsq/CMakeLists.txt
+++ b/apps/evnsq/CMakeLists.txt
@@ -5,22 +5,24 @@ add_library(evnsq_static STATIC ${evnsq_SRCS})
 target_link_libraries(evnsq_static ${LIBRARIES})
 
 if (UNIX)
-    add_library(evnsq SHARED ${evnsq_SRCS})
-    target_link_libraries(evnsq ${LIBRARIES})
-
-    set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
-    include (utils)
-    include (packages)
-    set_target_properties (
-        evnsq PROPERTIES
-        VERSION     "${PACKAGE_VERSION}"
-        SOVERSION   "${PACKAGE_SOVERSION}"
-    )
-
-    install (
-      TARGETS evnsq
-      LIBRARY DESTINATION lib
-      ARCHIVE DESTINATION lib)
+    if(BUILD_SHARED_LIBS)
+      add_library(evnsq SHARED ${evnsq_SRCS})
+      target_link_libraries(evnsq ${LIBRARIES})
+  
+      set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
+      include (utils)
+      include (packages)
+      set_target_properties (
+          evnsq PROPERTIES
+          VERSION     "${PACKAGE_VERSION}"
+          SOVERSION   "${PACKAGE_SOVERSION}"
+      )
+  
+      install (
+        TARGETS evnsq
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+    endif()
 endif (UNIX)
 
 install (
diff --git a/evpp/CMakeLists.txt b/evpp/CMakeLists.txt
index 031659f..b79cee5 100644
--- a/evpp/CMakeLists.txt
+++ b/evpp/CMakeLists.txt
@@ -22,40 +22,50 @@ target_link_libraries(evpp_lite_static ${DEPENDENT_LIBRARIES})
 target_compile_features(evpp_lite_static PRIVATE cxx_std_11)
 
 if (UNIX)
-    add_library(evpp SHARED ${evpp_SRCS})
-    target_link_libraries(evpp ${DEPENDENT_LIBRARIES})
-
-    # boost lockfree queue
-    add_library(evpp_boost SHARED ${evpp_SRCS})
-    add_library(evpp_boost_static STATIC ${evpp_SRCS})
-    target_compile_definitions(evpp_boost PRIVATE -DH_HAVE_BOOST=1)
-    target_compile_definitions(evpp_boost_static PRIVATE -DH_HAVE_BOOST=1)
-    target_link_libraries(evpp_boost        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_boost_static ${DEPENDENT_LIBRARIES})
-
-    # https://github.com/cameron314/concurrentqueue
-    add_library(evpp_concurrentqueue SHARED ${evpp_SRCS})
-    add_library(evpp_concurrentqueue_static STATIC ${evpp_SRCS})
-    target_compile_definitions(evpp_concurrentqueue PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
-    target_compile_definitions(evpp_concurrentqueue_static PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
-    target_link_libraries(evpp_concurrentqueue        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_concurrentqueue_static ${DEPENDENT_LIBRARIES})
-
-    set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
-    include (utils)
-    include (packages)
-    set_target_properties (
-        evpp evpp_boost evpp_concurrentqueue PROPERTIES
-        VERSION     "${PACKAGE_VERSION}"
-        SOVERSION   "${PACKAGE_SOVERSION}"
-    )
-
-    install (
-      TARGETS evpp evpp_static evpp_lite_static evpp_boost evpp_boost_static evpp_concurrentqueue evpp_concurrentqueue_static
-      EXPORT ${PACKAGE_NAME}
-      RUNTIME DESTINATION bin
-      LIBRARY DESTINATION lib
-      ARCHIVE DESTINATION lib)
+    if(BUILD_SHARED_LIBS)
+      add_library(evpp SHARED ${evpp_SRCS})
+      target_link_libraries(evpp ${DEPENDENT_LIBRARIES})
+  
+      # boost lockfree queue
+      add_library(evpp_boost SHARED ${evpp_SRCS})
+      target_compile_definitions(evpp_boost PRIVATE -DH_HAVE_BOOST=1)
+      target_link_libraries(evpp_boost        ${DEPENDENT_LIBRARIES})
+  
+      # https://github.com/cameron314/concurrentqueue
+      add_library(evpp_concurrentqueue SHARED ${evpp_SRCS})
+      target_compile_definitions(evpp_concurrentqueue PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
+      target_link_libraries(evpp_concurrentqueue        ${DEPENDENT_LIBRARIES})
+  
+      set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
+      include (utils)
+      include (packages)
+      set_target_properties (
+          evpp evpp_boost evpp_concurrentqueue PROPERTIES
+          VERSION     "${PACKAGE_VERSION}"
+          SOVERSION   "${PACKAGE_SOVERSION}"
+      )
+  
+      install (
+        TARGETS evpp evpp_boost evpp_concurrentqueue
+        EXPORT ${PACKAGE_NAME}
+        RUNTIME DESTINATION bin
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+    else()
+      add_library(evpp_boost_static STATIC ${evpp_SRCS})
+      target_compile_definitions(evpp_boost_static PRIVATE -DH_HAVE_BOOST=1)
+      target_link_libraries(evpp_boost_static ${DEPENDENT_LIBRARIES})
+      
+      add_library(evpp_concurrentqueue_static STATIC ${evpp_SRCS})
+      target_compile_definitions(evpp_concurrentqueue_static PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
+      target_link_libraries(evpp_concurrentqueue_static ${DEPENDENT_LIBRARIES})
+      
+      install (
+        TARGETS evpp_static evpp_lite_static evpp_boost_static evpp_concurrentqueue_static
+        EXPORT ${PACKAGE_NAME}
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib)
+    endif()
 
 else (UNIX)
     install (
