diff --git a/PCLConfig.cmake.in b/PCLConfig.cmake.in
index 1d957ce..a98dcac 100644
--- a/PCLConfig.cmake.in
+++ b/PCLConfig.cmake.in
@@ -386,6 +386,7 @@ file(TO_CMAKE_PATH "${PCL_DIR}" PCL_DIR)
 if(WIN32 AND NOT MINGW)
 # PCLConfig.cmake is installed to PCL_ROOT/cmake
   get_filename_component(PCL_ROOT "${PCL_DIR}" PATH)
+  get_filename_component(PCL_ROOT "${PCL_ROOT}" PATH)
   if(EXISTS "${PCL_ROOT}/3rdParty")
     set(PCL_ALL_IN_ONE_INSTALLER ON)
   endif()
@@ -395,21 +396,22 @@ else()
 endif()
 
 # check whether PCLConfig.cmake is found into a PCL installation or in a build tree
-if(EXISTS "${PCL_ROOT}/include/pcl-${PCL_VERSION_MAJOR}.${PCL_VERSION_MINOR}/pcl/pcl_config.h")
-  # Found a PCL installation
-  # pcl_message("Found a PCL installation")
-  set(PCL_CONF_INCLUDE_DIR "${PCL_ROOT}/include/pcl-${PCL_VERSION_MAJOR}.${PCL_VERSION_MINOR}")
-  set(PCL_LIBRARY_DIRS "${PCL_ROOT}/@LIB_INSTALL_DIR@")
-elseif(EXISTS "${PCL_ROOT}/include/pcl/pcl_config.h")
-  # Found a non-standard (likely ANDROID) PCL installation
-  # pcl_message("Found a PCL installation")
+if(EXISTS "${PCL_ROOT}/include/pcl/pcl_config.h")
   set(PCL_CONF_INCLUDE_DIR "${PCL_ROOT}/include")
-  set(PCL_LIBRARY_DIRS "${PCL_ROOT}/lib")
+  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
+    set(PCL_LIBRARY_DIRS "${PCL_DIR}/@LIB_INSTALL_DIR@" "${PCL_DIR}/debug/@LIB_INSTALL_DIR@")
+  else()
+    set(PCL_LIBRARY_DIRS "${PCL_DIR}/@LIB_INSTALL_DIR@")
+  endif()
 elseif(EXISTS "${PCL_DIR}/include/pcl/pcl_config.h")
   # Found PCLConfig.cmake in a build tree of PCL
   # pcl_message("PCL found into a build tree.")
   set(PCL_CONF_INCLUDE_DIR "${PCL_DIR}/include") # for pcl_config.h
-  set(PCL_LIBRARY_DIRS "${PCL_DIR}/@LIB_INSTALL_DIR@")
+  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
+    set(PCL_LIBRARY_DIRS "${PCL_DIR}/@LIB_INSTALL_DIR@" "${PCL_DIR}/debug/@LIB_INSTALL_DIR@")
+  else()
+    set(PCL_LIBRARY_DIRS "${PCL_DIR}/@LIB_INSTALL_DIR@")
+  endif()
 else()
   pcl_report_not_found("PCL can not be found on this machine")
 endif()
