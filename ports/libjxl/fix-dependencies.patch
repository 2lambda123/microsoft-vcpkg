diff --git a/lib/jxl.cmake b/lib/jxl.cmake
index 7074766..578f473 100644
--- a/lib/jxl.cmake
+++ b/lib/jxl.cmake
@@ -3,6 +3,18 @@
 # Use of this source code is governed by a BSD-style
 # license that can be found in the LICENSE file.
 
+if(JPEGXL_ENABLE_TOOLS) 
+  find_package(lodepng CONFIG REQUIRED)
+endif()
+find_package(unofficial-brotli CONFIG REQUIRED)
+find_package(lcms2 CONFIG REQUIRED)
+
+foreach(brlib IN ITEMS brotlienc brotlidec brotlicommon)
+  add_library(${brlib} ALIAS unofficial::brotli::${brlib}-static)
+  add_library(${brlib}-static ALIAS unofficial::brotli::${brlib}-static)
+endforeach()
+add_library(lcms2 ALIAS lcms2::lcms2)
+
 # Lists all source files for the JPEG XL decoder library. These are also used
 # by the encoder: the encoder uses both dec and enc ourse files, while the
 # decoder uses only dec source files.
diff --git a/third_party/CMakeLists.txt b/third_party/CMakeLists.txt
index 50cc72c..f7ece3e 100644
--- a/third_party/CMakeLists.txt
+++ b/third_party/CMakeLists.txt
@@ -47,8 +47,8 @@ endif()
 # brotli
 if (NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/brotli/c/include/brotli/decode.h" OR
     JPEGXL_FORCE_SYSTEM_BROTLI)
-  find_package(Brotli)
-  if (NOT Brotli_FOUND)
+  find_package(unofficial-brotli CONFIG REQUIRED)
+  if (NOT unofficial-brotli_FOUND)
     message(FATAL_ERROR
         "Brotli not found, install brotli-dev or download brotli source code to"
         " third_party/brotli from https://github.com/google/brotli. You can use"
@@ -87,16 +87,7 @@ if (JPEGXL_ENABLE_SKCMS OR JPEGXL_ENABLE_PLUGINS)
                  ${PROJECT_BINARY_DIR}/LICENSE.skcms COPYONLY)
 endif ()
 if (JPEGXL_ENABLE_VIEWERS OR NOT JPEGXL_ENABLE_SKCMS)
-  if( NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/lcms/.git" OR JPEGXL_FORCE_SYSTEM_LCMS2 )
-    find_package(LCMS2 2.13)
-    if ( NOT LCMS2_FOUND )
-      message(FATAL_ERROR "Please install lcms2 or run git submodule update --init")
-    endif ()
-  else()
-    include(lcms2.cmake)
-    configure_file("${CMAKE_CURRENT_SOURCE_DIR}/lcms/COPYING"
-                   ${PROJECT_BINARY_DIR}/LICENSE.lcms COPYONLY)
-  endif()
+  find_package(lcms2 CONFIG REQUIRED)
 endif()
 
 # libpng
