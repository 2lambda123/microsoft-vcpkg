diff --git a/CMakeLists.txt b/CMakeLists.txt
index a8488c6..9c982a9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -207,7 +207,7 @@ elseif(MSVC)
 endif()
 if(ENABLE_OPENCV)
   find_package(OpenCV REQUIRED)
-  if(OpenCV_FOUND)
+  if(ENABLE_OPENCV)
     if(SELECT_OPENCV_MODULES)
       if(TARGET opencv_world)
         list(APPEND OpenCV_LINKED_COMPONENTS "opencv_world")
@@ -280,15 +280,15 @@ endif()
 set(CMAKE_CXX_FLAGS "${ADDITIONAL_CXX_FLAGS} ${SHAREDLIB_CXX_FLAGS} ${CMAKE_CXX_FLAGS}")
 set(CMAKE_C_FLAGS "${ADDITIONAL_C_FLAGS} ${SHAREDLIB_C_FLAGS} ${CMAKE_C_FLAGS}")
 
-if(OpenCV_FOUND)
-  if(ENABLE_CUDA AND OpenCV_CUDA_VERSION)
+if(ENABLE_OPENCV)
+  if(ENABLE_CUDA)
     if(TARGET opencv_cudaoptflow)
       list(APPEND OpenCV_LINKED_COMPONENTS "opencv_cudaoptflow")
     endif()
     if(TARGET opencv_cudaimgproc)
       list(APPEND OpenCV_LINKED_COMPONENTS "opencv_cudaimgproc")
     endif()
-  elseif(ENABLE_CUDA AND NOT OpenCV_CUDA_VERSION)
+  elseif(NOT ENABLE_CUDA)
     set(BUILD_USELIB_TRACK "FALSE" CACHE BOOL "Build uselib_track" FORCE)
     message(STATUS "  ->  darknet is fine for now, but uselib_track has been disabled!")
     message(STATUS "  ->  Please rebuild OpenCV from sources with CUDA support to enable it")
@@ -307,7 +307,7 @@ if(ENABLE_CUDA)
     if(CUDNN_FOUND)
       set(ADDITIONAL_CXX_FLAGS "${ADDITIONAL_CXX_FLAGS} /DCUDNN")
     endif()
-    if(OpenCV_FOUND)
+    if(ENABLE_OPENCV)
       set(ADDITIONAL_CXX_FLAGS "${ADDITIONAL_CXX_FLAGS} /DOPENCV")
     endif()
     string(REPLACE " " "," ADDITIONAL_CXX_FLAGS_COMMA_SEPARATED "${ADDITIONAL_CXX_FLAGS}")
@@ -317,7 +317,7 @@ if(ENABLE_CUDA)
     if(CUDNN_FOUND)
       set(ADDITIONAL_CXX_FLAGS "${ADDITIONAL_CXX_FLAGS} -DCUDNN")
     endif()
-    if(OpenCV_FOUND)
+    if(ENABLE_OPENCV)
       set(ADDITIONAL_CXX_FLAGS "${ADDITIONAL_CXX_FLAGS} -DOPENCV")
     endif()
     if(APPLE)
@@ -420,7 +420,7 @@ if(BUILD_AS_CPP)
 endif()
 set_target_properties(dark PROPERTIES OUTPUT_NAME "darknet")
 
-if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
+if(BUILD_USELIB_TRACK)
   add_executable(uselib_track ${CMAKE_CURRENT_LIST_DIR}/src/yolo_console_dll.cpp)
 endif()
 
@@ -443,7 +443,7 @@ target_compile_definitions(darknet PRIVATE -DUSE_CMAKE_LIBS)
 target_compile_definitions(dark PRIVATE -DUSE_CMAKE_LIBS)
 target_compile_definitions(uselib PRIVATE -DUSE_CMAKE_LIBS)
 
-if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK AND NOT MANUALLY_EXPORT_TRACK_OPTFLOW)
+if(BUILD_USELIB_TRACK)
   target_compile_definitions(dark PUBLIC TRACK_OPTFLOW=1)
 endif()
 
@@ -458,7 +458,7 @@ if(CUDNN_FOUND)
   endif()
 endif()
 
-if(OpenCV_FOUND)
+if(ENABLE_OPENCV)
   target_link_libraries(darknet PRIVATE ${OpenCV_LINKED_COMPONENTS})
   target_link_libraries(uselib PRIVATE ${OpenCV_LINKED_COMPONENTS})
   target_link_libraries(dark PUBLIC ${OpenCV_LINKED_COMPONENTS})
@@ -526,7 +526,7 @@ if(USE_INTEGRATED_LIBS)
 endif()
 
 target_link_libraries(uselib PRIVATE dark)
-if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
+if(BUILD_USELIB_TRACK)
   target_link_libraries(uselib_track PRIVATE dark)
   target_compile_definitions(uselib_track PRIVATE TRACK_OPTFLOW=1)
   target_compile_definitions(uselib_track PRIVATE -DUSE_CMAKE_LIBS)
@@ -561,7 +561,7 @@ install(TARGETS dark EXPORT DarknetTargets
 install(TARGETS uselib darknet
   DESTINATION "${INSTALL_BIN_DIR}"
 )
-if(OpenCV_FOUND AND OpenCV_VERSION VERSION_GREATER "3.0" AND BUILD_USELIB_TRACK)
+if(BUILD_USELIB_TRACK)
   install(TARGETS uselib_track
     DESTINATION "${INSTALL_BIN_DIR}"
   )
