diff --git a/CMakeLists.txt b/CMakeLists.txt
index 75f367f..e144343 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -26,16 +26,6 @@ if(NOT DEFINED CMAKE_BUILD_TYPE)
     set(CMAKE_BUILD_TYPE Release CACHE STRING "")
 endif()
 
-if(NOT DEFINED CMAKE_RUNTIME_OUTPUT_DIRECTORY)
-    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin")
-endif()
-if(NOT DEFINED CMAKE_LIBRARY_OUTPUT_DIRECTORY)
-    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")
-endif()
-if(NOT DEFINED CMAKE_ARCHIVE_OUTPUT_DIRECTORY)
-    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/lib")
-endif()
-
 ##############################
 # Set up RPATH for executables
 ##############################
@@ -74,6 +64,9 @@ set(CMAKE_MODULE_PATH ${CMakeScripts_MODULE_DIR})
 # Turn on all compiler warnings
 include(EnableAllWarnings)
 
+option(ENABLE_TOOLS OFF)
+option(ENABLE_DB OFF)
+
 # Figure out our git version
 option(UPDATE_GIT_VERSION_INFO "update git version info in source tree" ON)
 mark_as_advanced(UPDATE_GIT_VERSION_INFO)
@@ -190,7 +183,7 @@ add_subdirectory(Core)
 export(
     TARGETS MOOS
     NAMESPACE MOOS::
-    FILE UseMOOS.cmake
+    FILE UseMOOSTargets.cmake
 )
 
 # Support existing projects that expect to find MOOS_LIBRARIES and
@@ -222,7 +215,7 @@ set(PROJECT_CONFIG_PATH "lib/cmake/MOOS")
 install(
     EXPORT MOOS
     NAMESPACE MOOS::
-    FILE UseMOOS.cmake
+    FILE UseMOOSTargets.cmake
     DESTINATION ${PROJECT_CONFIG_PATH}
 )
 
diff --git a/Core/CMakeLists.txt b/Core/CMakeLists.txt
index 4cbe7cb..cd09f21 100644
--- a/Core/CMakeLists.txt
+++ b/Core/CMakeLists.txt
@@ -1,3 +1,7 @@
 add_subdirectory(libMOOS)
-add_subdirectory(tools)
-add_subdirectory(MOOSDB)
+if(ENABLE_TOOLS)
+  add_subdirectory(tools)
+endif()
+if(ENABLE_DB)
+  add_subdirectory(MOOSDB)
+endif()
diff --git a/Core/MOOSDB/CMakeLists.txt b/Core/MOOSDB/CMakeLists.txt
index 7b1a903..975dacd 100644
--- a/Core/MOOSDB/CMakeLists.txt
+++ b/Core/MOOSDB/CMakeLists.txt
@@ -27,5 +27,4 @@ install(TARGETS ${EXECNAME}
   ARCHIVE DESTINATION lib
 )
 
-add_subdirectory(testing)
 
diff --git a/Core/libMOOS/App/MOOSApp.cpp b/Core/libMOOS/App/MOOSApp.cpp
index c446ea2..e0b22f7 100644
--- a/Core/libMOOS/App/MOOSApp.cpp
+++ b/Core/libMOOS/App/MOOSApp.cpp
@@ -38,7 +38,6 @@
 #include "MOOS/libMOOS/App/MOOSApp.h"
 #include "MOOS/libMOOS/Utils/ConsoleColours.h"
 #include "MOOS/libMOOS/MOOSVersion.h"
-#include "MOOS/libMOOS/GitVersion.h"
 
 #include <cmath>
 #include <iostream>
diff --git a/Core/libMOOS/App/include/MOOS/libMOOS/App/MOOSApp.h b/Core/libMOOS/App/include/MOOS/libMOOS/App/MOOSApp.h
index 06e22e5..feb0304 100644
--- a/Core/libMOOS/App/include/MOOS/libMOOS/App/MOOSApp.h
+++ b/Core/libMOOS/App/include/MOOS/libMOOS/App/MOOSApp.h
@@ -41,7 +41,6 @@
 #include "MOOS/libMOOS/Comms/MOOSCommClient.h"
 #include "MOOS/libMOOS/Comms/MOOSVariable.h"
 
-#include "MOOS/libMOOS/App/ClientDefines.h"
 
 #include <set>
 #include <map>
diff --git a/Core/libMOOS/CMakeLists.txt b/Core/libMOOS/CMakeLists.txt
index b74a30f..9e0afc0 100644
--- a/Core/libMOOS/CMakeLists.txt
+++ b/Core/libMOOS/CMakeLists.txt
@@ -81,14 +81,10 @@ set(DB_SOURCES
 #do we want to use the new fast asynchronous client architecture?
 option(USE_ASYNC_COMMS  "enable fast asynchronous comms architecture" ON)
 if(USE_ASYNC_COMMS)
-  set(ASYNCHRONOUS_CLIENT_DEFINE "#define ASYNCHRONOUS_CLIENT")
+    add_compile_definitions(ASYNCHRONOUS_CLIENT)
 endif()
 
-# Configure step picks up the ASYNCHRONOUS_CLIENT_DEFINE variable
-configure_file(${CMAKE_MODULE_PATH}/ClientDefines.h.in
-    ${CMAKE_CURRENT_SOURCE_DIR}/App/include/MOOS/libMOOS/App/ClientDefines.h
-    @ONLY
-)
+
 
 
 
@@ -122,6 +118,8 @@ add_library(MOOS
     ${DB_SOURCES}
 )
 
+add_compile_definitions(MOOS_GIT_VERSION="${PACKAGE_VERSION}")
+
 foreach(INCLUDE_ROOT IN LISTS INCLUDE_ROOTS)
     target_include_directories(MOOS PUBLIC
         "$<BUILD_INTERFACE:${INCLUDE_ROOT}>"
@@ -196,7 +194,7 @@ mark_as_advanced(TIME_WARP_AGGLOMERATION_CONSTANT)
 install(
     DIRECTORY ${INCLUDE_ROOTS}
     DESTINATION .
-    FILES_MATCHING PATTERN "*.h" PATTERN "*.hxx"
+    FILES_MATCHING PATTERN "*.h" PATTERN "*.hxx" PATTERN "*.hpp"
 )
 
 # install libraries
@@ -204,7 +202,7 @@ install(TARGETS MOOS
   EXPORT MOOS
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
+  RUNTIME DESTINATION bin
 )
 
-add_subdirectory(testing)
 
diff --git a/Core/libMOOS/DB/MOOSDB.cpp b/Core/libMOOS/DB/MOOSDB.cpp
index 0dc99af..6d931b6 100644
--- a/Core/libMOOS/DB/MOOSDB.cpp
+++ b/Core/libMOOS/DB/MOOSDB.cpp
@@ -38,7 +38,6 @@
 #include "MOOS/libMOOS/Thirdparty/getpot/GetPot.hpp"
 #include "MOOS/libMOOS/Utils/ConsoleColours.h"
 #include "MOOS/libMOOS/MOOSVersion.h"
-#include "MOOS/libMOOS/GitVersion.h"
 #include "MOOS/libMOOS/DB/MOOSDBLogger.h"
 
 
diff --git a/MOOSConfig.cmake.in b/MOOSConfig.cmake.in
index 10af599..dff769a 100644
--- a/MOOSConfig.cmake.in
+++ b/MOOSConfig.cmake.in
@@ -2,7 +2,7 @@
 
 # Pick up the auto-generated file which knows how to add the imported library
 # targets for the libraries that MOOS exports.
-set(exports_file "${CMAKE_CURRENT_LIST_DIR}/UseMOOS.cmake")
+set(exports_file "${CMAKE_CURRENT_LIST_DIR}/UseMOOSTargets.cmake")
 include(${exports_file})
 
 include(FindPackageHandleStandardArgs)
diff --git a/cmake/ClientDefines.h.in b/cmake/ClientDefines.h.in
index a196e5c..c2942eb 100644
--- a/cmake/ClientDefines.h.in
+++ b/cmake/ClientDefines.h.in
@@ -1,4 +1,4 @@
 //this file is auto generated and defines various preprocessor macros needed by the CMOOSApp
 #ifndef ASYNCHRONOUS_CLIENT
 @ASYNCHRONOUS_CLIENT_DEFINE@
-#endif
\ No newline at end of file
+#endif
