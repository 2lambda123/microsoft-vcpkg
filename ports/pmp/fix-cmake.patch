diff --git a/CMakeLists.txt b/CMakeLists.txt
index 18e514e..c7ee2c3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -29,8 +29,9 @@ if(PMP_BUILD_VIS)
 
   # setup STB Image (place *before* GLFW since GLFW has an old copy of
   # stb_image_write.h)
-  include_directories(${STBI_SOURCE_DIR})
-  add_subdirectory(${STBI_SOURCE_DIR})
+  find_path(STB_INCLUDE_DIRS "stb_image.h" REQUIRED)
+  include_directories(${STB_INCLUDE_DIRS})
+  add_compile_definitions(STB_IMAGE_IMPLEMENTATION STB_IMAGE_WRITE_IMPLEMENTATION)
 
   # Building only the GLFW lib
   set(BUILD_SHARED_LIBS
@@ -51,31 +52,23 @@ if(PMP_BUILD_VIS)
 
   # setup use of GLFW and GLEW
   if(NOT EMSCRIPTEN)
-    add_subdirectory(${GLFW_SOURCE_DIR} ${GLEW_SOURCE_DIR})
-
-    include_directories(${GLFW_SOURCE_DIR}/include ${GLFW_SOURCE_DIR}/deps
-                        ${GLEW_SOURCE_DIR}/include)
-
-    add_definitions(-DGLEW_STATIC)
-    add_library(glew STATIC ${GLEW_SOURCE_DIR}/src/glew.c
-                            ${GLEW_SOURCE_DIR}/include)
-    set_property(TARGET glew PROPERTY POSITION_INDEPENDENT_CODE ON)
-    target_link_libraries(glew ${GLFW_LIBRARIES})
+    find_package(glfw3 CONFIG REQUIRED)
+    find_package(GLEW REQUIRED)
+    link_libraries(glfw GLEW::GLEW)
   endif()
 
   # setup IMGUI
-  include_directories(${IMGUI_SOURCE_DIR})
-  add_subdirectory(${IMGUI_SOURCE_DIR})
+  find_package(imgui CONFIG REQUIRED)
+  link_libraries(imgui::imgui)
 endif(PMP_BUILD_VIS)
 
 # setup Eigen
-set(EIGEN_SOURCE_DIR "external/eigen")
-include_directories(${EIGEN_SOURCE_DIR})
+find_package(Eigen3 CONFIG REQUIRED)
+link_libraries(Eigen3::Eigen)
 
 # setup PLY
-set(RPLY_SOURCE_DIR "external/rply")
-include_directories(${RPLY_SOURCE_DIR})
-add_subdirectory(${RPLY_SOURCE_DIR})
+find_package(rply CONFIG REQUIRED)
+link_libraries(rply::rply)
 
 include(AddFileDependencies)
 include_directories(${PROJECT_SOURCE_DIR}/src/)
@@ -222,7 +215,7 @@ if(NOT EMSCRIPTEN AND PMP_INSTALL)
   install(
     EXPORT pmpTargets
     FILE pmpTargets.cmake
-    EXPORT_LINK_INTERFACE_LIBRARIES
+    # EXPORT_LINK_INTERFACE_LIBRARIES
     DESTINATION "${PMP_CONFIG_PATH}")
 
   export(TARGETS pmp FILE pmpTargets.cmake)
diff --git a/src/apps/CMakeLists.txt b/src/apps/CMakeLists.txt
index efc310f..e586b77 100644
--- a/src/apps/CMakeLists.txt
+++ b/src/apps/CMakeLists.txt
@@ -87,6 +87,7 @@ else()
   if(NOT WIN32)
     add_executable(mconvert mconvert.cpp)
     target_link_libraries(mconvert pmp)
+    install(TARGETS mconvert DESTINATION bin)
   endif()
 
   if(OpenGL_FOUND AND PMP_BUILD_VIS)
@@ -117,6 +118,7 @@ else()
     add_executable(mpview mpview.cpp MeshProcessingViewer.cpp
                           MeshProcessingViewer.h)
     target_link_libraries(mpview pmp_vis)
+    install(TARGETS mview curview subdiv smoothing fairing parameterization decimation remeshing mpview DESTINATION bin)
   endif()
 
 endif()
diff --git a/src/pmp/CMakeLists.txt b/src/pmp/CMakeLists.txt
index c8599b0..b820425 100644
--- a/src/pmp/CMakeLists.txt
+++ b/src/pmp/CMakeLists.txt
@@ -2,9 +2,9 @@ file(GLOB SOURCES ./*.cpp)
 file(GLOB HEADERS ./*.h)
 
 if(EMSCRIPTEN)
-  add_library(pmp STATIC ${SOURCES} ${HEADERS} $<TARGET_OBJECTS:rply>)
+  add_library(pmp STATIC ${SOURCES} ${HEADERS})
 else()
-  add_library(pmp SHARED ${SOURCES} ${HEADERS} $<TARGET_OBJECTS:rply>)
+  add_library(pmp SHARED ${SOURCES} ${HEADERS})
   set_property(TARGET pmp PROPERTY WINDOWS_EXPORT_ALL_SYMBOLS ON)
 endif()
 
diff --git a/src/pmp/visualization/CMakeLists.txt b/src/pmp/visualization/CMakeLists.txt
index 318265e..be1e76d 100644
--- a/src/pmp/visualization/CMakeLists.txt
+++ b/src/pmp/visualization/CMakeLists.txt
@@ -5,7 +5,7 @@ set(HDRS ${HDRS} "../MatVec.h")
 if(EMSCRIPTEN)
 
   add_library(pmp_vis STATIC ${SRCS} ${HDRS})
-  target_link_libraries(pmp_vis stb_image imgui pmp)
+  target_link_libraries(pmp_vis pmp)
 
 else()
 
@@ -16,10 +16,6 @@ else()
     target_link_libraries(
       pmp_vis
       pmp
-      stb_image
-      imgui
-      glfw
-      glew
       ${OPENGL_LIBRARIES})
     if(PMP_INSTALL)
       install(TARGETS pmp_vis DESTINATION lib)
