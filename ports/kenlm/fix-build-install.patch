diff --git a/CMakeLists.txt b/CMakeLists.txt
index ecd6032..623b74f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,6 +4,7 @@ cmake_minimum_required(VERSION 3.1)
 project(kenlm)
 
 option(FORCE_STATIC "Build static executables" OFF)
+option(ENABLE_INTERPOLATE "Build interpolation program" OFF)
 if (FORCE_STATIC)
   #presumably overkill, is there a better way?
   #http://cmake.3232098.n2.nabble.com/Howto-compile-static-executable-td5580269.html
diff --git a/lm/CMakeLists.txt b/lm/CMakeLists.txt
index e82cdc8..395815b 100644
--- a/lm/CMakeLists.txt
+++ b/lm/CMakeLists.txt
@@ -37,6 +37,15 @@ target_link_libraries(kenlm PUBLIC kenlm_util ${Boost_LIBRARIES} Threads::Thread
 set(KENLM_MAX_ORDER 6 CACHE STRING "Maximum supported ngram order")
 target_compile_definitions(kenlm PUBLIC -DKENLM_MAX_ORDER=${KENLM_MAX_ORDER})
 
+install(TARGETS kenlm
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib
+)
+
+file(GLOB SRC_HEADERS ${CMAKE_CURRENT_LIST_DIR}/*.h ${CMAKE_CURRENT_LIST_DIR}/*.hh)
+install(FILES ${SRC_HEADERS} DESTINATION include/kenlm)
+
 # This directory has children that need to be processed
 add_subdirectory(builder)
 add_subdirectory(filter)
@@ -44,12 +53,14 @@ add_subdirectory(interpolate)
 
 # Explicitly list the executable files to be compiled
 set(EXE_LIST
-  query
   fragment
-  build_binary
   kenlm_benchmark
 )
 
+if (UNIX)
+    list(APPEND EXE_LIST query build_binary)
+endif()
+
 set(LM_LIBS kenlm kenlm_util ${Boost_LIBRARIES} Threads::Threads)
 
 AddExes(EXES ${EXE_LIST}
diff --git a/lm/interpolate/CMakeLists.txt b/lm/interpolate/CMakeLists.txt
index 91867e2..4fb17ff 100644
--- a/lm/interpolate/CMakeLists.txt
+++ b/lm/interpolate/CMakeLists.txt
@@ -1,7 +1,8 @@
-find_package(Eigen3)
+if (ENABLE_INTERPOLATE)
+find_package(Eigen3 3.1.0 CONFIG REQUIRED)
 
-if(EIGEN3_FOUND)
-  if (3.1.0 VERSION_LESS ${EIGEN3_VERSION})
+if(Eigen3_FOUND)
+  if (1)
     include_directories(${EIGEN3_INCLUDE_DIR})
 
     set(KENLM_INTERPOLATE_SOURCE
@@ -26,7 +27,7 @@ if(EIGEN3_FOUND)
     endif()
 
     add_library(kenlm_interpolate ${KENLM_INTERPOLATE_SOURCE})
-    target_link_libraries(kenlm_interpolate PUBLIC kenlm)
+    target_link_libraries(kenlm_interpolate PUBLIC kenlm Eigen3::Eigen)
 
     set(KENLM_INTERPOLATE_EXES
         interpolate
@@ -34,6 +35,15 @@ if(EIGEN3_FOUND)
 		
     set(KENLM_INTERPOLATE_LIBS
         kenlm_interpolate)
+        
+    install(TARGETS kenlm_interpolate
+        RUNTIME DESTINATION bin
+        LIBRARY DESTINATION lib
+        ARCHIVE DESTINATION lib
+    )
+    
+    file(GLOB PY_HEADERS ${CMAKE_CURRENT_LIST_DIR}/*.h ${CMAKE_CURRENT_LIST_DIR}/*.hh)
+    install(FILES ${PY_HEADERS} DESTINATION include/kenlm/interpolate)
 
     AddExes(EXES ${KENLM_INTERPOLATE_EXES}
             LIBRARIES ${KENLM_INTERPOLATE_LIBS})
@@ -57,3 +67,4 @@ else()
       "(cd $HOME; wget -O - https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.bz2 |tar xj)\n"
       "rm CMakeCache.txt\n")
 endif()
+endif()
\ No newline at end of file
diff --git a/util/CMakeLists.txt b/util/CMakeLists.txt
index 87f189d..97d5448 100644
--- a/util/CMakeLists.txt
+++ b/util/CMakeLists.txt
@@ -66,8 +66,19 @@ add_library(kenlm_util ${KENLM_UTIL_DOUBLECONVERSION_SOURCE} ${KENLM_UTIL_STREAM
 set_target_properties(kenlm_util PROPERTIES POSITION_INDEPENDENT_CODE ON)
 target_link_libraries(kenlm_util PUBLIC ${Boost_LIBRARIES} ${READ_COMPRESSED_LIBS} Threads::Threads ${RT})
 
+if (UNIX)
 AddExes(EXES probing_hash_table_benchmark
         LIBRARIES kenlm_util ${Boost_LIBRARIES} Threads::Threads)
+endif()
+
+install(TARGETS kenlm_util
+  RUNTIME DESTINATION bin
+  LIBRARY DESTINATION lib
+  ARCHIVE DESTINATION lib
+)
+
+file(GLOB UTILS_HEADER ${CMAKE_CURRENT_LIST_DIR}/*.h ${CMAKE_CURRENT_LIST_DIR}/*.hh)
+install(FILES ${UTILS_HEADER} DESTINATION include/kenlm/utils)
 
 # Only compile and run unit tests if tests should be run
 if(BUILD_TESTING)
