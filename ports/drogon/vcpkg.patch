diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1efecf8..198f429 100755
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -87,9 +85,9 @@ if(WIN32)
     PRIVATE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/third_party/mman-win32>)
 endif(WIN32)
 
-add_subdirectory(trantor)
+find_package(Trantor CONFIG REQUIRED)
 
-target_link_libraries(${PROJECT_NAME} PUBLIC trantor)
+target_link_libraries(${PROJECT_NAME} PUBLIC Trantor::Trantor)
 
 if(NOT WIN32)
   if(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD")
@@ -119,7 +117,12 @@ find_package(Jsoncpp REQUIRED)
 target_link_libraries(${PROJECT_NAME} PUBLIC Jsoncpp_lib)
 list(APPEND INCLUDE_DIRS_FOR_DYNAMIC_VIEW ${JSONCPP_INCLUDE_DIRS})
 
-if(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD" AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD" AND NOT WIN32)
+if(NOT
+   ${CMAKE_SYSTEM_NAME}
+   STREQUAL
+   "FreeBSD"
+   AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD"
+   AND NOT WIN32)
   find_package(UUID REQUIRED)
   target_link_libraries(${PROJECT_NAME} PRIVATE UUID_lib)
 
@@ -136,7 +139,12 @@ if(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD" AND NOT ${CMAKE_SYSTEM_NAME} STRE
   else()
     message(FATAL_ERROR "uuid lib error")
   endif()
-endif(NOT ${CMAKE_SYSTEM_NAME} STREQUAL "FreeBSD" AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD" AND NOT WIN32)
+endif(NOT
+      ${CMAKE_SYSTEM_NAME}
+      STREQUAL
+      "FreeBSD"
+      AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "OpenBSD"
+      AND NOT WIN32)
 
 find_package(Brotli)
 if(Brotli_FOUND)
@@ -188,11 +196,16 @@ endif(NOT WIN32)
 
 if(BUILD_ORM)
   # find postgres
-  find_package(pg)
-  if(pg_FOUND)
-    message(STATUS "libpq inc path:" ${PG_INCLUDE_DIRS})
-    message(STATUS "libpq lib:" ${PG_LIBRARIES})
-    target_link_libraries(${PROJECT_NAME} PRIVATE pg_lib)
+  find_package(PostgreSQL REQUIRED)
+  if(PostgreSQL_FOUND)
+    set(pg_FOUND true)
+    target_link_libraries(${PROJECT_NAME} PRIVATE PostgreSQL::PostgreSQL)
+    if(NOT WIN32)
+      target_link_libraries(${PROJECT_NAME}
+                            PRIVATE ${PostgreSQL_LIBRARY_DIRS}/libpgcommon.a)
+      target_link_libraries(${PROJECT_NAME}
+                            PRIVATE ${PostgreSQL_LIBRARY_DIRS}/libpgport.a)
+    endif(NOT WIN32)
     set(DROGON_SOURCES ${DROGON_SOURCES}
                        orm_lib/src/postgresql_impl/PostgreSQLResultImpl.cc)
     if(LIBPQ_BATCH_MODE)
@@ -211,8 +224,7 @@ if(BUILD_ORM)
       set(DROGON_SOURCES ${DROGON_SOURCES}
                          orm_lib/src/postgresql_impl/PgConnection.cc)
     endif(libpq_supports_batch)
-  endif(pg_FOUND)
-
+  endif(PostgreSQL_FOUND)
   # Find mysql, only mariadb client liberary is supported
   find_package(MySQL)
   if(MySQL_FOUND)
