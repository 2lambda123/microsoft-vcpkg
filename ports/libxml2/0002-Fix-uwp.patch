diff --git a/win32/Makefile.msvc b/win32/Makefile.msvc
index 1c4349b..c0ec78c 100644
--- a/win32/Makefile.msvc
+++ b/win32/Makefile.msvc
@@ -67,6 +67,9 @@ CFLAGS = $(CFLAGS) /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE
 LD = link.exe
 LDFLAGS = /nologo /VERSION:$(LIBXML_MAJOR_VERSION).$(LIBXML_MINOR_VERSION)
 LDFLAGS = $(LDFLAGS) /LIBPATH:$(BINDIR) /LIBPATH:$(LIBPREFIX)
+!if "$(WITH_UWP)" == "1"
+LDFLAGS = $(LDFLAGS) /APPCONTAINER
+!endif
 LIBS =
 !if "$(WITH_FTP)" == "1" || "$(WITH_HTTP)" == "1"
 LIBS = $(LIBS) wsock32.lib ws2_32.lib
diff --git a/win32/configure.js b/win32/configure.js
index 92b9ba0..d6ba69a 100644
--- a/win32/configure.js
+++ b/win32/configure.js
@@ -63,6 +63,7 @@ var withLegacy = true;
 var withOutput = true;
 var withPython = false;
 /* Win32 build options. */
+var withUwp = false;
 var dirSep = "\\";
 var compiler = "msvc";
 var cruntime = "/MD";
@@ -115,6 +116,7 @@ function usage()
 	txt += "either 'yes' or 'no', if not stated otherwise.\n\n";
 	txt += "\nXML processor options, default value given in parentheses:\n\n";
 	txt += "  trio:       Enable TRIO string manipulator (" + (withTrio? "yes" : "no")  + ")\n";
+	txt += "  uwp:        Enable UWP build (" + (withUWP? "yes" : "no")  + ")\n";
 	txt += "  threads:    Enable thread safety [no|ctls|native|posix] (" + (withThreads)  + ") \n";
 	txt += "  ftp:        Enable FTP client (" + (withFtp? "yes" : "no")  + ")\n";
 	txt += "  http:       Enable HTTP client (" + (withHttp? "yes" : "no")  + ")\n";
@@ -226,6 +228,7 @@ function discoverVersion()
 	vf.WriteLine("XML_SRCDIR=" + srcDirXml);
 	vf.WriteLine("UTILS_SRCDIR=" + srcDirUtils);
 	vf.WriteLine("WITH_TRIO=" + (withTrio? "1" : "0"));
+	vf.WriteLine("WITH_UWP=" + (withUwp? "1" : "0"));
 	vf.WriteLine("WITH_THREADS=" + withThreads);
 	vf.WriteLine("WITH_FTP=" + (withFtp? "1" : "0"));
 	vf.WriteLine("WITH_HTTP=" + (withHttp? "1" : "0"));
@@ -303,6 +306,8 @@ function configureLibxml()
 			of.WriteLine(s.replace(/\@LIBXML_VERSION_EXTRA\@/, verCvs));
 		} else if (s.search(/\@WITH_TRIO\@/) != -1) {
 			of.WriteLine(s.replace(/\@WITH_TRIO\@/, withTrio? "1" : "0"));
+		} else if (s.search(/\@WITH_UWP\@/) != -1) {
+			of.WriteLine(s.replace(/\@WITH_UWP\@/, withUWP == "no"? "0" : "1"));
 		} else if (s.search(/\@WITH_THREADS\@/) != -1) {
 			of.WriteLine(s.replace(/\@WITH_THREADS\@/, withThreads == "no"? "0" : "1"));
 		} else if (s.search(/\@WITH_THREAD_ALLOC\@/) != -1) {
@@ -452,6 +457,8 @@ for (i = 0; (i < WScript.Arguments.length) && (error == 0); i++) {
 	if (opt.length > 0) {
 		if (opt == "trio")
 			withTrio = strToBool(arg.substring(opt.length + 1, arg.length));
+        else if (opt == "uwp")
+			withUwp = strToBool(arg.substring(opt.length + 1, arg.length));
 		else if (opt == "threads")
 			withThreads = arg.substring(opt.length + 1, arg.length);
 		else if (opt == "ftp")
@@ -651,6 +658,7 @@ WScript.Echo("Created config.h.");
 var txtOut = "\nXML processor configuration\n";
 txtOut += "---------------------------\n";
 txtOut += "              Trio: " + boolToStr(withTrio) + "\n";
+txtOut += "               UWP: " + boolToStr(withUwp) + "\n";
 txtOut += "     Thread safety: " + withThreads + "\n";
 txtOut += "        FTP client: " + boolToStr(withFtp) + "\n";
 txtOut += "       HTTP client: " + boolToStr(withHttp) + "\n";
