diff --git a/cmake/TGUIConfig.cmake.in b/cmake/TGUIConfig.cmake.in
index 63e8a45..01804cd 100644
--- a/cmake/TGUIConfig.cmake.in
+++ b/cmake/TGUIConfig.cmake.in
@@ -44,6 +44,16 @@
 #   add_executable(myapp ...)
 #   target_link_libraries(myapp tgui)
 
+include(CMakeFindDependencyMacro)
+if("@TGUI_HAS_BACKEND_SFML@")
+    find_dependency(SFML CONFIG COMPONENTS graphics)
+endif()
+if("@TGUI_HAS_BACKEND_SDL@")
+    find_dependency(SDL2 CONFIG)
+    find_dependency(SDL2_ttf CONFIG)
+    find_dependency(Threads)
+endif()
+
 set(FIND_TGUI_PATHS
     "${CMAKE_CURRENT_LIST_DIR}/../.."
     ${TGUI_ROOT}
@@ -58,7 +61,7 @@ set(FIND_TGUI_PATHS
     /opt)
 
 # Choose which target definitions must be imported
-if (TGUI_STATIC_LIBRARIES)
+if (NOT "@BUILD_SHARED_LIBS@")
 	set(TGUI_IS_FRAMEWORK_INSTALL "@TGUI_BUILD_FRAMEWORKS@")
     if (TGUI_IS_FRAMEWORK_INSTALL)
         message(WARNING "Static frameworks are not supported by TGUI. Clear TGUI_DIR cache entry, \
diff --git a/src/Backends/SDL/CMakeLists.txt b/src/Backends/SDL/CMakeLists.txt
index d86f11d3..42b708d8 100644
--- a/src/Backends/SDL/CMakeLists.txt
+++ b/src/Backends/SDL/CMakeLists.txt
@@ -4,7 +4,11 @@
 find_package(SDL2_ttf REQUIRED)
 
 # Link to SDL and set include and library search directories
-target_link_libraries(tgui PRIVATE SDL2::Core SDL2::TTF)
+if(TARGET SDL2_ttf::SDL2_ttf)
+    target_link_libraries(tgui PRIVATE SDL2::SDL2 SDL2_ttf::SDL2_ttf)
+else()
+    target_link_libraries(tgui PRIVATE SDL2::SDL2 SDL2_ttf::SDL2_ttf-static)
+endif()
 
 # Add the backend source files to the library
 target_sources(tgui PRIVATE
@@ -19,7 +23,11 @@ target_sources(tgui PRIVATE
 )
 
 add_library(tgui-sdl-interface INTERFACE)
-target_link_libraries(tgui-sdl-interface INTERFACE SDL2::Core SDL2::TTF SDL2::Main)
+if(TARGET SDL2_ttf::SDL2_ttf)
+    target_link_libraries(tgui-sdl-interface INTERFACE SDL2::SDL2 SDL2_ttf::SDL2_ttf SDL2::SDL2main)
+else()
+    target_link_libraries(tgui-sdl-interface INTERFACE SDL2::SDL2 SDL2_ttf::SDL2_ttf-static SDL2::SDL2main)
+endif()
 
 # Also link to OpenGL or OpenGL ES
 if(NOT TGUI_USE_GLES)
