if(NOT COMMAND z_vcpkg_skia_get_link_libraries)
    function(z_vcpkg_skia_get_link_libraries out_var path libraries)
        set(libs "")
        foreach(lib IN LISTS libraries)
            if(lib MATCHES [[^/|^(dl|m|pthread)$|^-framework ]])
                list(APPEND libs "${lib}")
            else()
                string(MAKE_C_IDENTIFIER "${out_var}_${lib}" lib_var)
                find_library("${lib_var}" NAMES "${lib}" NAMES_PER_DIR PATH "${path}")
                mark_as_advanced("${lib_var}")
                if(${lib_var})
                    list(APPEND libs "${${lib_var}}")
                else()
                    message(WARNING "Omitting '${lib}' from link libraries.")
                endif()
            endif()
        endforeach()
        set("${out_var}" "${libs}" PARENT_SCOPE)
    endfunction()
endif()

# Compute the installation prefix relative to this file.
get_filename_component(z_vcpkg_skia_root "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(z_vcpkg_skia_root "${z_vcpkg_skia_root}" PATH)
get_filename_component(z_vcpkg_skia_root "${z_vcpkg_skia_root}" PATH)
if(z_vcpkg_skia_root STREQUAL "/")
    set(z_vcpkg_skia_root "")
endif()

set(z_vcpkg_skia_config_debug "\$<CONFIG:Debug>")
if(NOT z_vcpkg_skia_lib_debug)
    set(z_vcpkg_skia_config_debug "0")
endif()

file(GLOB z_vcpkg_skia_config_files "${CMAKE_CURRENT_LIST_DIR}/unofficial-skia-*-target.cmake")
foreach(z_vcpkg_skia_config_file IN LISTS z_vcpkg_skia_config_files)
    include("${z_vcpkg_skia_config_file}")
endforeach()
unset(z_vcpkg_skia_config_file)
unset(z_vcpkg_skia_config_files)

unset(z_vcpkg_skia_config_debug)
unset(z_vcpkg_skia_root)
