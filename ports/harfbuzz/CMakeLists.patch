diff --git a/CMakeLists.txt b/CMakeLists.txt
index 11118595f..257e7c85e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 2.8.0)
+cmake_minimum_required(VERSION 3.7.0) # lets incerease that to something more appropiate
 project(harfbuzz)
 
 message(WARN "HarfBuzz has a Meson port and tries to migrate all the other build systems to it, please consider using it as we might remove our cmake port soon.")
@@ -177,7 +177,7 @@ set (subset_project_headers ${HB_SUBSET_headers})
 
 ## Find and include needed header folders and libraries
 if (HB_HAVE_FREETYPE)
-  include (FindFreetype)
+  find_package(Freetype REQUIRED)
   if (NOT FREETYPE_FOUND)
     message(FATAL_ERROR "HB_HAVE_FREETYPE was set, but we failed to find it. Maybe add a CMAKE_PREFIX_PATH= to your Freetype2 install prefix")
   endif ()
@@ -210,6 +210,8 @@ if (HB_HAVE_GRAPHITE2)
   mark_as_advanced(GRAPHITE2_INCLUDE_DIR GRAPHITE2_LIBRARY)
 endif ()
 
+include(SelectLibraryConfigurations)
+
 if (HB_HAVE_GLIB)
   add_definitions(-DHAVE_GLIB)
 
@@ -217,7 +219,11 @@ if (HB_HAVE_GLIB)
   find_package(PkgConfig)
   pkg_check_modules(PC_GLIB QUIET glib-2.0)
+  find_package(Iconv REQUIRED)
 
-  find_library(GLIB_LIBRARIES NAMES glib-2.0 HINTS ${PC_GLIB_LIBDIR} ${PC_GLIB_LIBRARY_DIRS})
+  find_library(GLIB_LIBRARY_RELEASE NAMES glib-2.0 HINTS ${PC_GLIB_LIBDIR} ${PC_GLIB_LIBRARY_DIRS} ${PC_GLIB_LIBDIR}/.. ${PC_GLIB_LIBRARY_DIRS}/..)
+  find_library(GLIB_LIBRARY_DEBUG NAMES glib-2.0 HINTS ${PC_GLIB_LIBDIR}/debug ${PC_GLIB_LIBRARY_DIRS}/debug ${PC_GLIB_LIBDIR} ${PC_GLIB_LIBRARY_DIRS})
+  select_library_configurations(GLIB)
+  list(APPEND GLIB_LIBRARIES ${Iconv_LIBRARIES})
   find_path(GLIBCONFIG_INCLUDE_DIR NAMES glibconfig.h HINTS ${PC_LIBDIR} ${PC_LIBRARY_DIRS} ${PC_GLIB_INCLUDEDIR} ${PC_GLIB_INCLUDE_DIRS} PATH_SUFFIXES glib-2.0/include)
   find_path(GLIB_INCLUDE_DIR NAMES glib.h HINTS ${PC_GLIB_INCLUDEDIR} ${PC_GLIB_INCLUDE_DIRS} PATH_SUFFIXES glib-2.0)
 
@@ -233,20 +237,15 @@ endif ()
 if (HB_HAVE_ICU)
   add_definitions(-DHAVE_ICU)
 
-  # https://github.com/WebKit/webkit/blob/fdd7733f2f30eab7fe096a9791f98c60f62f49c0/Source/cmake/FindICU.cmake
-  find_package(PkgConfig)
-  pkg_check_modules(PC_ICU QUIET icu-uc)
-
-  find_path(ICU_INCLUDE_DIR NAMES unicode/utypes.h HINTS ${PC_ICU_INCLUDE_DIRS} ${PC_ICU_INCLUDEDIR})
-  find_library(ICU_LIBRARY NAMES libicuuc cygicuuc cygicuuc32 icuuc HINTS ${PC_ICU_LIBRARY_DIRS} ${PC_ICU_LIBDIR})
+  find_package(ICU COMPONENTS uc REQUIRED)
 
-  include_directories(${ICU_INCLUDE_DIR})
+  include_directories(${ICU_INCLUDE_DIRS})
 
   list(APPEND project_headers ${PROJECT_SOURCE_DIR}/src/hb-icu.h)
 
-  list(APPEND THIRD_PARTY_LIBS ${ICU_LIBRARY})
+  list(APPEND THIRD_PARTY_LIBS ${ICU_LIBRARIES})
 
-  mark_as_advanced(ICU_INCLUDE_DIR ICU_LIBRARY)
+  mark_as_advanced(ICU_INCLUDE_DIRS ICU_LIBRARIES )
 endif ()
 
 if (APPLE AND HB_HAVE_CORETEXT)
@@ -431,6 +431,7 @@ endif ()
 
 ## Define harfbuzz library
 add_library(harfbuzz ${project_sources} ${project_extra_sources} ${project_headers})
+target_include_directories(harfbuzz PUBLIC $<INSTALL_INTERFACE:include/harfbuzz>)
 target_link_libraries(harfbuzz ${THIRD_PARTY_LIBS})
 
 
