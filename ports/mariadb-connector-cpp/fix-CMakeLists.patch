diff --git a/CMakeLists.txt b/CMakeLists.txt
index 43bc4a2..f92c548 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -408,7 +408,7 @@ IF (WITH_MSAN)
 ENDIF()
 
 # This has to be before C/C's cmake run, or it will build with /MD
 IF(WIN32)
   IF (MSVC)
-    SET(CONFIG_TYPES "DEBUG" "RELEASE" "RELWITHDEBINFO" "MINSIZEREL")
+    SET(CONFIG_TYPES "")
     FOREACH(BUILD_TYPE ${CONFIG_TYPES})
@@ -525,6 +525,8 @@ IF(NOT USE_SYSTEM_INSTALLED_LIB)
   ENDIF()
 ENDIF()
 
+FIND_PACKAGE(unofficial-libmariadb CONFIG REQUIRED)
+
 IF(WITH_MSI AND WITH_SIGNCODE)
   IF(WIN32 AND NOT SIGN_OPTIONS)
     SET(SIGN_OPTIONS /a /t http://timestamp.verisign.com/scripts/timstamp.dll)
@@ -545,7 +547,7 @@ CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/maconncpp.def.in
                ${CMAKE_SOURCE_DIR}/src/maconncpp.def)
 
 # Dynamic linking is default on non-Windows
-IF(MARIADB_LINK_DYNAMIC)
+IF(0)
   IF(USE_SYSTEM_INSTALLED_LIB)
     IF(MINGW)
       # I guess -l can be removed here. Also, for build with c/c as submodule this will have to me moved on top level out of this IF's 
@@ -601,6 +603,7 @@ ENDIF()
 
 
 ADD_LIBRARY(${LIBRARY_NAME}_obj OBJECT ${MACPP_SOURCES})
+TARGET_LINK_LIBRARIES(${LIBRARY_NAME}_obj PRIVATE unofficial::libmariadb)
 IF(UNIX)
   SET_TARGET_PROPERTIES(${LIBRARY_NAME}_obj PROPERTIES COMPILE_FLAGS "${CMAKE_SHARED_LIBRARY_C_FLAGS}")
 ENDIF()
@@ -652,13 +655,19 @@ ELSE()
   ENDIF()
 ENDIF()
 
-TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${MARIADB_CLIENT_TARGET_NAME} ${PLATFORM_DEPENDENCIES})
-TARGET_LINK_LIBRARIES(${STATIC_LIBRARY_NAME} mariadbclient)
+TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE ${PLATFORM_DEPENDENCIES} unofficial::libmariadb)
+TARGET_LINK_LIBRARIES(${STATIC_LIBRARY_NAME} PRIVATE unofficial::libmariadb)
+TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME}
+  INTERFACE
+    $<INSTALL_INTERFACE:include>/${LIBRARY_NAME})
+TARGET_INCLUDE_DIRECTORIES(${STATIC_LIBRARY_NAME}
+  INTERFACE
+    $<INSTALL_INTERFACE:include>/${LIBRARY_NAME})
 
 # MINGW Specific includes and linking
 IF(MINGW)
   
-  IF(MARIADB_SHLWAPI_LIB)
+  IF(0)
     TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${MARIADB_SHLWAPI_LIB})
     MESSAGE(STATUS "Found shlwapi lib - ${MARIADB_SHLWAPI_LIB}")
   ELSE()
@@ -666,17 +675,17 @@ IF(MINGW)
     MESSAGE(WARNING "Did not find shlwapi lib")
   ENDIF()
 
-  IF(MARIADB_CONNECTORC_INCLUDE)
+  IF(1)
     # Probably has to be private, and not PUBLIC here
-    TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME}_obj PUBLIC  ${MARIADB_CONNECTORC_INCLUDE})
+    # TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME}_obj PUBLIC  ${MARIADB_CONNECTORC_INCLUDE})
     MESSAGE(STATUS "Found MariaDB Connector/C includes - ${MARIADB_CONNECTORC_INCLUDE}")
   ELSE()
     MESSAGE(WARNING "Did not find MariaDB Connector/C includes")
   ENDIF()
   
-  IF(MARIADB_CONNECTORC_LIB)
-    TARGET_LINK_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
-    TARGET_LINK_DIRECTORIES(${STATIC_LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
+  IF(1)
+    # TARGET_LINK_DIRECTORIES(${LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
+    # TARGET_LINK_DIRECTORIES(${STATIC_LIBRARY_NAME} PUBLIC ${MARIADB_CONNECTORC_LIB})
     MESSAGE(STATUS "Found MariaDB Connector/C libraries - ${MARIADB_CONNECTORC_LIB}")
   ELSE()
     MESSAGE(WARNING "Did not find MariaDB Connector/C libraries")
@@ -692,7 +701,7 @@ ADD_DEPENDENCIES(${LIBRARY_NAME} DEPENDENCIES_FOR_PACKAGE)
 ########## Packaging ##########
 
 # MSI
-IF(WIN32)
+IF(0)
   IF(WITH_MSI)
     ADD_CUSTOM_COMMAND(TARGET ${LIBRARY_NAME} POST_BUILD
       COMMAND ${CMAKE_COMMAND} ARGS -DDRIVER_LIB_DIR=$<TARGET_FILE_DIR:${LIBRARY_NAME}>
@@ -709,31 +718,31 @@ ELSE()
     #MESSAGE(STATUS "Configuring to generate PKG package")
     #ADD_SUBDIRECTORY(osxinstall)
   ENDIF()
-  INSTALL(TARGETS ${LIBRARY_NAME}
-          LIBRARY DESTINATION ${INSTALL_LIBDIR}
-          COMPONENT SharedLibraries)
-  INSTALL(TARGETS
-          ${STATIC_LIBRARY_NAME}
-          ARCHIVE DESTINATION ${INSTALL_LIBDIR}
-          COMPONENT Development)
-
-  MESSAGE(STATUS "Documentation installed to ${INSTALL_DOCDIR}")
-  MESSAGE(STATUS "License file installed to ${INSTALL_LICENSEDIR}")
+  install(TARGETS ${LIBRARY_NAME} ${STATIC_LIBRARY_NAME}
+          EXPORT unofficial-${LIBRARY_NAME}-targets
+          LIBRARY DESTINATION lib
+          ARCHIVE DESTINATION lib
+          RUNTIME DESTINATION bin)
+
+  SET(INSTALL_INCLUDEDIR include/mariadbcpp)
   MESSAGE(STATUS "Public API header files installed to ${INSTALL_INCLUDEDIR}")
-  INSTALL(FILES
-          ${CMAKE_SOURCE_DIR}/README
-          DESTINATION
-          "${INSTALL_DOCDIR}"
-          COMPONENT Documentation)
-  INSTALL(FILES
-          ${CMAKE_SOURCE_DIR}/COPYING
-          DESTINATION
-          "${INSTALL_LICENSEDIR}"
-          COMPONENT Documentation)
   ADD_SUBDIRECTORY(include)
+
+  include(CMakePackageConfigHelpers)
+  configure_package_config_file(
+    "${CMAKE_CURRENT_SOURCE_DIR}/unofficial-mariadbcpp-config.cmake.in"
+    "${CMAKE_CURRENT_BINARY_DIR}/unofficial-mariadbcpp-config.cmake"
+    INSTALL_DESTINATION "share/unofficial-mariadbcpp")
+  install(FILES "${CMAKE_CURRENT_BINARY_DIR}/unofficial-mariadbcpp-config.cmake"
+          DESTINATION share/unofficial-mariadbcpp)
+
+  install(EXPORT unofficial-${LIBRARY_NAME}-targets
+          FILE unofficial-${LIBRARY_NAME}-targets.cmake
+          NAMESPACE unofficial::
+          DESTINATION share/unofficial-mariadbcpp)
 ENDIF()
 # Tests. Checking if we have them. May be not the case if we are building from source package
 IF(WITH_UNIT_TESTS AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/test/CMakeLists.txt")
   ADD_SUBDIRECTORY(test)
   ADD_CUSTOM_COMMAND(TARGET ${LIBRARY_NAME} POST_BUILD
 	  COMMAND ${CMAKE_COMMAND} ARGS -E copy $<TARGET_FILE:${LIBRARY_NAME}> test)
@@ -744,7 +753,6 @@ IF(WITH_UNIT_TESTS AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/test/CMakeLists.txt")
 ENDIF()
 
 # Packaging
-INCLUDE(packaging)
 MESSAGE(STATUS "License File: ${CPACK_RESOURCE_FILE_LICENSE}")
 MESSAGE(STATUS "ReadMe File: ${CPACK_PACKAGE_DESCRIPTION_FILE}")
 MESSAGE(STATUS "Source Package Filename: ${CPACK_SOURCE_PACKAGE_FILE_NAME}.${CPACK_SOURCE_GENERATOR}")
