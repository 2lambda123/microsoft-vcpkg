diff --git a/CMakeLists.txt b/CMakeLists.txt
index 85ec6d2..cb607b7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -59,15 +59,15 @@ GET_PROPERTY(MAODBC_LANGUAGES GLOBAL PROPERTY ENABLED_LANGUAGES)
 # We don't need RC for what we need MAODBC_LANGUAGES for
 LIST(REMOVE_ITEM MAODBC_LANGUAGES "RC")
 
-SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)
+SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_LIST_DIR}/cmake)
 
 SET(LIBRARY_NAME "mariadbcpp")
-SET(STATIC_LIBRARY_NAME "${LIBRARY_NAME}-static")
+# SET(STATIC_LIBRARY_NAME "${LIBRARY_NAME}-static")
 
-CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/Version.h.in
-               ${CMAKE_SOURCE_DIR}/src/Version.h)
-CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/maconncpp.rc.in
-               ${CMAKE_SOURCE_DIR}/src/maconncpp.rc)
+CONFIGURE_FILE(${CMAKE_CURRENT_LIST_DIR}/src/Version.h.in
+               ${CMAKE_CURRENT_LIST_DIR}/src/Version.h)
+CONFIGURE_FILE(${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.rc.in
+               ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.rc)
 INCLUDE(SearchLibrary)
 INCLUDE(SetValueMacro)
 
@@ -453,10 +453,10 @@ IF(BUILD_TESTS_ONLY)
     MESSAGE(STATUS "Configurig Tests: tcp://${TEST_UID}@${TEST_SERVER}:${TEST_PORT}/${TEST_SCHEMA} socket: ${TEST_SOCKET}")
     SET(DRIVER_LIB_LOCATION "${libmariadb_prefix}/${INSTALL_LIBDIR}")
   ENDIF()
-  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
-  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include/conncpp)
+  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/include)
+  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/include/conncpp)
   # At some point use of String.cpp from the driver was added to tests. Need to verify if it's still needed/a good idea.
-  INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src)
+  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/src)
   ADD_SUBDIRECTORY(test)
   # Only means only
   RETURN()
@@ -470,7 +470,7 @@ ENDIF()
 
 ### Including C/C subproject
 IF(NOT USE_SYSTEM_INSTALLED_LIB)
-  IF(EXISTS ${CMAKE_SOURCE_DIR}/libmariadb)
+  IF(EXISTS ${CMAKE_CURRENT_LIST_DIR}/libmariadb)
     IF(GIT_BUILD_SRCPKG)
       # We don't want conn/c (wrong) src pkg to be built.
       SET(GIT_BUILD_SRCPKG FALSE)
@@ -536,18 +536,18 @@ IF(WITH_MSI AND WITH_SIGNCODE)
   MARK_AS_ADVANCED(SIGN_OPTIONS)
 ENDIF()
 
-INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
-INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include/conncpp)
-INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/src)
-INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/class)
+INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/include)
+INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/include/conncpp)
+INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/src)
+INCLUDE_DIRECTORIES(${CMAKE_CURRENT_LIST_DIR}/class)
 IF(NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE "RelWithDebInfo")
 ENDIF()
-CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/maconncpp.def.in
-               ${CMAKE_SOURCE_DIR}/src/maconncpp.def)
+CONFIGURE_FILE(${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.def.in
+               ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.def)
 
 # Dynamic linking is default on non-Windows
-IF(0)
+IF(BUILD_SHARED_LIBS)
   IF(USE_SYSTEM_INSTALLED_LIB)
     IF(MINGW)
       # I guess -l can be removed here. Also, for build with c/c as submodule this will have to me moved on top level out of this IF's 
@@ -566,7 +566,7 @@ IF(0)
       FIND_LIBRARY(MARIADB_SHLWAPI_LIB NAMES ShLwApi.Lib 
                                              ShLwApi
                 DOC "Path to ShLwApi.Lib. Usually found in $ENV{programfiles\(x86\)}\\Windows Kits\\10\\Lib")
-    ELSE()
+    ELSEIF(0)
       FIND_LIBRARY(CCLIB libmariadb.so)
       IF (${CCLIB} STREQUAL "CCLIB-NOTFOUND")
         # It won't be found by linker either unless user does some magic before build, so we actually could stop here with error
@@ -610,15 +610,17 @@ ENDIF()
 SET(${LIBRARY_NAME}_OBJECTS $<TARGET_OBJECTS:${LIBRARY_NAME}_obj>)
 
 IF(WIN32 AND NOT MINGW)
-  ADD_LIBRARY(${LIBRARY_NAME} SHARED ${CMAKE_SOURCE_DIR}/src/maconncpp.rc ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.def)
-  ADD_LIBRARY(${STATIC_LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_SOURCE_DIR}/src/maconncpp.rc)
+  IF(BUILD_SHARED_LIBS)
+  ADD_LIBRARY(${LIBRARY_NAME} SHARED ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.rc ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.def)
 
   TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME}_obj PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
 
   TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} PRIVATE "MARIADB_EXPORTED=__declspec(dllexport)")
   TARGET_COMPILE_DEFINITIONS(${LIBRARY_NAME} INTERFACE "MARIADB_EXPORTED=__declspec(dllimport)")
 
-  TARGET_COMPILE_DEFINITIONS(${STATIC_LIBRARY_NAME} PUBLIC MARIADB_STATIC_LINK)
+  ELSE()
+  ADD_LIBRARY(${LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.rc)
+  ENDIF()
 ELSE()
   # Xcode doesn't support targets that have only object files,
   # so let's add an empty file to keep Xcode happy
@@ -626,43 +628,50 @@ ELSE()
     FILE(WRITE ${CMAKE_BINARY_DIR}/empty.cpp "")
     SET(EMPTY_FILE ${CMAKE_BINARY_DIR}/empty.cpp)
   ENDIF()
-  #  MESSAGE(STATUS "Version script: ${CMAKE_SOURCE_DIR}/src/maconncpp.def")
+  #  MESSAGE(STATUS "Version script: ${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.def")
+  IF(BUILD_SHARED_LIBS)
   ADD_LIBRARY(${LIBRARY_NAME} SHARED ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
-  ADD_LIBRARY(${STATIC_LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
+  ELSE()
+  ADD_LIBRARY(${LIBRARY_NAME} STATIC ${${LIBRARY_NAME}_OBJECTS} ${EMPTY_FILE})
+  ENDIF()
 
   IF(APPLE)
+    IF(BUILD_SHARED_LIBS)
     SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl"
                                      INSTALL_RPATH_USE_LINK_PATH 0
                                      BUILD_WITH_INSTALL_RPATH 1
                                      XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
                                      XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
                                      INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
-    SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES 
+    ELSE()
+    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES 
                                      INSTALL_RPATH_USE_LINK_PATH 0
                                      BUILD_WITH_INSTALL_RPATH 1
                                      XCODE_ATTRIBUTE_ENABLE_HARDENED_RUNTIME YES
                                      XCODE_ATTRIBUTE_OTHER_CODE_SIGN_FLAGS "--timestamp -f"
                                      INSTALL_RPATH "${MAODBC_INSTALL_RPATH}")
+    ENDIF()
     IF(WITH_SIGNCODE)
-      SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "Developer ID Application: ${DEVELOPER_ID}")
-      SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "Developer ID Application: ${DEVELOPER_ID}")
+    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "Developer ID Application: ${DEVELOPER_ID}")
     ELSE()
       SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "")
-      SET_TARGET_PROPERTIES(${STATIC_LIBRARY_NAME} PROPERTIES XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "")
     ENDIF()
   ELSE()
-#    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl,--version-script=${CMAKE_SOURCE_DIR}/src/maconncpp.def")
+#    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINK_FLAGS "-Wl,--version-script=${CMAKE_CURRENT_LIST_DIR}/src/maconncpp.def")
   ENDIF()
 ENDIF()
 
+IF(BUILD_SHARED_LIBS)
 TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE ${PLATFORM_DEPENDENCIES} unofficial::libmariadb)
-TARGET_LINK_LIBRARIES(${STATIC_LIBRARY_NAME} PRIVATE unofficial::libmariadb)
 TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME}
   INTERFACE
     $<INSTALL_INTERFACE:include>/${LIBRARY_NAME})
-TARGET_INCLUDE_DIRECTORIES(${STATIC_LIBRARY_NAME}
+ELSE()
+TARGET_LINK_LIBRARIES(${LIBRARY_NAME} PRIVATE unofficial::libmariadb)
+TARGET_INCLUDE_DIRECTORIES(${LIBRARY_NAME}
   INTERFACE
     $<INSTALL_INTERFACE:include>/${LIBRARY_NAME})
+ENDIF()
 
 # MINGW Specific includes and linking
 IF(0)
@@ -694,7 +703,7 @@ IF(0)
 ENDIF()
 
 INCLUDE(symlink)
-CREATE_SYMLINK(lib${LIBRARY_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} ${STATIC_LIBRARY_NAME} ${INSTALL_LIBDIR})
+# CREATE_SYMLINK(lib${LIBRARY_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX} ${LIBRARY_NAME} ${INSTALL_LIBDIR})
 
 ADD_DEPENDENCIES(${LIBRARY_NAME} DEPENDENCIES_FOR_PACKAGE)
 
@@ -718,7 +727,7 @@ ELSE()
     #MESSAGE(STATUS "Configuring to generate PKG package")
     #ADD_SUBDIRECTORY(osxinstall)
   ENDIF()
-  install(TARGETS ${LIBRARY_NAME} ${STATIC_LIBRARY_NAME}
+  install(TARGETS ${LIBRARY_NAME}
           EXPORT unofficial-${LIBRARY_NAME}-targets
           LIBRARY DESTINATION lib
           ARCHIVE DESTINATION lib
